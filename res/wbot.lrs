LazarusResources.Add('twbot','PNG',[
  #137'PNG'#13#10#26#10#0#0#0#13'IHDR'#0#0#0' '#0#0#0' '#8#6#0#0#0'szz'#244#0#0
  +#5#214'IDATx'#218#173'V'#13'P'#141'Y'#24'~'#238#189#221'n'#127#148'Td7Vvk'
  +#149'Jk'#16#153#168#236#152#205#10#139'mg'#237#170#221#193#16#219'f'#252#21
  +'Y;'#137';'#202'$Z'#204' K'#180#133'm'#253#172#252#132#152'X'#148'R]#Bn'#137
  +'h'#187#253'G'#185#127#223#190'_'#223#221'J'#238#159'8'#211'['#211'y'#207'w'
  +#158#231#188#231#188#207#251#242#160'{'#240#174'%'#6'M'#180#235'crI'#173'T'#0
  +#12'C'#6#3'C'#179#128'G?'#2'a'#135#185#204'?&'#162#25#185'N'#16'='#187#9'/'
  +#137'''G'#13's'#243#138'u'#10#142#211'l'#206'7'#130#128#146'L'#4#213#11')'
  +#202'R'#151#215#187#135#159#26'F'#19#141#189'!`q-!'#240#168#203#164'o'#130'l'
  +#189#252#209'"Y@'#171'M'#245'|'#194'FH'#1#19'koX|'#188#30#210#195#203#176'|['
  +#246#244'c'#215#171'r{K'#160'oAb'#224'u'#215#25'+'#221#204'l'#248'h'#175#220
  +'A'#1'0'#211#241#9#11#174#2'C'#174'>'#238#201#144#21#158'DN'#230#190#131'!'
  +#241'y'#191#144#179#186#183'W`['#154#28'X'#247#201#188#237'P'#191#188#1'ym6'
  +#17#208#21#1#21#160#150#195'l'#240'b(^'#152'Brp'#205'#'#159#168#220#233#228
  +#168'$k'#133#158#215#163#139#0'oc'#168#167#247#172#241'N'#133#174#11#246#162
  +'M'#154'L$'#158#16#1#161#246#211#171#21#16#218#142#135#208'n*'#30#166#175#196
  +#23'QY'#19#203#159#183#150#146#179#129'c'#167'{'#232'" 8'#17#227#27#238#233
  +#229#177'}'#200#204#181'h{'#176#129#203#2#158'@'#11#190#146#166'-a'#238#188
  +#12#213'9'#251'p'#244#200#241#184#200#20#201'n'#242'<''S'#192#192#208'E@t.'
  +#214'7'#222#251#243'Y'#17'v#'#253#209'^'#177'C'#19#254#158'Y'#160#230'B?d'#17
  +'Z'#159'='#197#173#244#205'E'#147'b'#174'}K'#142#199'd/'#13#129#235'#`us'#139
  +'_'#190'k'#240#210#225#22#246'VP'#212'di'#194#223'}'#185#230#213#219#140#163
  +#151'?'#6#165#191'G'#192'}'#241#217#209#228'(''k'#226#216#245#158'@'#191#219
  +'I~'#245#174#161'b'#240#20#229'P6'#221#162#149'&'#221#150#179#224'j'#240#132
  +'6'#16'9'#133'A'#154#25#139#141#187#207#135#165'\'#168'<O'#206#127#193#137
  +#129'QC+'#129#224#177#142'C'#197#161'#'#30#185#205'O'#134#252#249'I:h]'#143
  +#251'g:'#238'^'#228'8'#23#178#210#127#144#157#182';u'#238#214#146'Xr'#208'K'
  +#197'+c'#193'u'#17#224#239'\'#228#21'8'#197#223';'#219'y'#198#10'"p'#164#227
  +#180#175#223'?'#167'x'#166#3'C '#217#17'Nn'#21#241#19#232#12'('#143#207''''
  +#191#9'<~'#186#244#134',k'#251'Bx!'#214'g'#139'G'#192#180#8#135#145#1'P'#200
  +#206#244#8#255#255#28'T'#224#155#127#4#129#245'g'#196#141#21#255#158'[1'#156
  +#177#145#19'8'#160'"s5'#134#206#222'g'#11'.5'#245#18#176#188#186'il'#182#231
  +'WK'#198'[9'#218'C'#217'\HS&Z'#150#177#0#234'. -~'#1'e'#14#191#159#15#26#203
  +#239#161#248#244#145'\'#255#213'9'#179#201'Qk'#136#128'M'#209#22#159'j'#143
  +#31#197#230'|'#200#160'n'#151'v'#222'?'#163#181'"2Z'#254'g(h'#150#20#29#31'4'
  +#221'/'#192#213#140']W'#190#220'T'#178#148#28#180#25'Z'#12#17#176'+'#217':'
  +#174#214'3r?'#137'h'#1'II'#11'{'#137#156#16#169#148'P'#147'1j'#6#186#19'H'#13
  +#129#208#26#176#246#194#227#236'Td'#157'8'#187'3|O'#217'^rT'#129'+JJC'#4#28
  +'J'#182#249#213'0'#212#3'p@'#154'3'#17#176#200#218#9#238'a'#209'P7'#229#225
  +'MQ'#226'N'#206'7'#181#167'26'#28'U'#231'R'#240'G'#198#25'q'#212#193#7'i'#224
  +#10'R'#11#180#164#167'6'#2#253#200#134'j'#254'v'#174'['#30#236#228#179'z'#237
  +#170#13#246'n.`'#218#164'x3+('#236'"'#7'z.'#142'(;'#186#25#7'N'#150'D'#137
  +#255#146#30''''#199'3p'#5'I'#171'0i#'#192'j'#174'%Y'#247#202'c'#150#151#224
  +'{c'#212#252'M'#142#2#230#9'E'#163#29#175#137#18#155#4'fN'#244#203#146#192#19
  +#176'$17'#228#162#164#158#212#11'5d/'#160'G'#21#245#149#227#206'1u'#148#157
  +#227#246'5s'#170#157#167#133#210'Y'#202#208'Q'#248';w'#160'H'#152#127#0'ys+n'
  +#165#198#213#198'e'#148'/'#205'*'#148#229#131'S'#196'6'#24'h'#228#140'! '#200
  +#249#213'c'#239#152#239#214#132'Y'#14#176'"'#25'i'#232#250#140#207#130#15#134
  +#162'Q'#134#162#212#248#186#177#171#174#179'=@'#149#6#252#149'!pc'#9'X'#221
  +#222'5'#165'e'#196'BR'#218#230#135#20'LMy'#23#144#168#153#15'@'#195#189'"'#20
  +#255#185'G'#26#176#161't.'#184#6'D'#6#174#12#27#4'7'#134#0'/-'#242#211'9'#1
  +'3'#191'><p'#180'/'#5#180#134#155'5a'#193#7#161#241#238#13'\>'#148'ref'#194
  +#189#21#224'Jp'#29#140#232#1#222#134#128'(7'#214#243#226#132#136#205#190'<'
  +#30#189'%'#21#149'x'#129'y'#199#201'+N'#31'@'#254#229'+'#167'B'#146#238#175#7
  +'W'#132#26#222#22#220#24#2#214#229#153#243#26#157#131#190#7#218#169#193#225
  +#19#184'E'#127'T'#158'N'#197#161#140#28'qLze'#6#173'y'#10'N`T'#134#225#222
  +#142#0#255'T'#148'K'#212#196#31'"7Z'#13#26#132#142'LbD'#184#147#158#136#191
  +'s'#31#138#163#211'*S'#193#181']-'#189#5'7D'#192#162#232'7'#191#250#145#11
  +#215#137#160#164'l"U,MO'#198#146#164#252#144#203'w'#154#139#193#9#140#222#28
  +#127#23#2#188'u'#179'?'#244#252'yeXq'#255'Q'#147#168'%'#171#132'$-'#25#209
  +#135'*B'#206'K'#26'o'#130#19#152#246'w'#5#215'G@'#152#179'~'#248'q'#255#152
  +#196' '#149#236#25#242#246''''#201'|'#163'%'#179#192#165#25#11'nT'#142#191#11
  +#129#190#5#241#158'Ml'#229#147'+'#153#166#9#235#238#6#161'+'#199#229#239#11
  +'\'#31#1#170#167#24'B'#198'v0'#236'=?A'#151#192#188#215#161#139'@'#247#130'$'
  ,#215#144'x'#239#224#236#248#15'=-??'#19'MA'#226#0#0#0#0'IEND'#174'B`'#130
]);
LazarusResources.Add('wbot','JS',[
  '//Version_JS;Version_TInjectMin;Version_CEF4Min'#10'//1.0.0.8;1.0.0.9;78.3.0'
  +#10'//'#10'//'#10'//Fonte: https://gist.github.com/phpRajat/a6422922efae3291'
  +'4f4dbd1082f3f412'#10#10'var contactID;'#10#10'function getAllGroupContacts('
  +'Contacts) {'#10#9'SetConsoleMessage("GetAllGroupContacts", JSON.stringify(C'
  +'ontacts));'#9#10'}'#10#10'function getMyNumber() {'#10'    SetConsoleMessag'
  +'e(''getMyNumber'', localStorage.getItem(''last-wid''));'#10'    return true'
  +';'#10'}'#10#10'function convertImgToBase64URL(url, callback, outputFormat){'
  +#10#9'var img = new Image();'#10'    img.crossOrigin = ''Anonymous'';'#10'  '
  +'  img.onload = function(){'#10'        var canvas = document.createElement('
  +'''CANVAS''),'#10'        ctx = canvas.getContext(''2d''), dataURL;'#10'    '
  +'    canvas.height = img.height;'#10'        canvas.width = img.width;'#10' '
  +'       ctx.drawImage(img, 0, 0);'#10'        dataURL = canvas.toDataURL(out'
  +'putFormat);'#10'        callback(dataURL);'#10'        canvas = null; '#10
  +'    };'#10'    img.src = url;'#10'};'#10#10'function SetConsoleMessage(jsNa'
  +'me, resultValue) {'#10'    Obj = {'#10'        name: jsName,'#10'        re'
  +'sult: ''{"result":'' + resultValue + ''}'''#10'    }'#10'    console.log(JS'
  +'ON.stringify(Obj));'#10'}'#10#10'var intervalMonitor;'#10'var isLoggedStatu'
  +'s = false;'#10#10'function startMonitor(intervalSeconds = 0) {'#10'    isLo'
  +'ggedStatus = WAPI.isLoggedIn();'#10'    if (intervalSeconds >= 1) {'#10'   '
  +'     intervalMonitor = window.setInterval(monitorUnReadMessages, intervalSe'
  +'conds * 1000);'#10'    }'#10'}'#10#10'function stopMonitor() {'#10'    wind'
  +'ow.clearInterval(intervalMonitor)'#10'}'#10#10'function removeElementsByCla'
  +'ss(elementClass) {'#10'    var elements = document.getElementsByClassName(e'
  +'lementClass);'#10'    if (typeof elements !== ''undefined'' && elements.len'
  +'gth > 0) {'#10'        for (var i = 0; i < elements.length; i++) {'#10'    '
  +'        elements[i].parentNode.removeChild(elements[i]);'#10'        }'#10
  +'    }'#10'}'#10#10'function moveElementsToParentParentElement(elementClass)'
  +' {'#10'    var elements = document.getElementsByClassName(elementClass);'#10
  +'    if (typeof elements !== ''undefined'' && elements.length > 0) {'#10'   '
  +'     for (var i = 0; i < elements.length; i++) {'#10'            var elemen'
  +'t = elements[i];'#10'            element.parentNode.parentNode.appendChild('
  +'element);'#10'        }'#10'    }'#10'}'#10#10'function monitorUnReadMessag'
  +'es() {'#10'    var currentStatus = WAPI.isLoggedIn();'#10'    if (currentSt'
  +'atus != isLoggedStatus) {'#10'        isLoggedStatus = WAPI.isLoggedIn();'
  +#10'        SetConsoleMessage("OnChangeConnect", JSON.stringify(isLoggedStat'
  +'us));'#10'    }'#10#10'    if (isLoggedStatus) {'#10'        WAPI.getUnread'
  +'Messages(includeMe = "true", includeNotifications = "true", use_unread_coun'
  +'t = "true");'#10'    }'#10'}'#10#10'if (!window.Store) {'#10'    (function '
  +'() {'#10'        function getStore(modules) {'#10'            let foundCoun'
  +'t = 0;'#10'            let neededObjects = ['#10#9#9#9#9'{ id: "Store", con'
  +'ditions: (module) => (module.Chat && module.Msg) ? module : null },'#10'   '
  +'             { id: "MediaCollection", conditions: (module) => (module.defau'
  +'lt && module.default.prototype && module.default.prototype.processAttachmen'
  +'ts) ? module.default : null },'#10'                { id: "MediaProcess", co'
  +'nditions: (module) => (module.BLOB) ? module : null },'#10'                '
  +'{ id: "Wap", conditions: (module) => (module.createGroup) ? module : null }'
  +','#10'                { id: "ServiceWorker", conditions: (module) => (modul'
  +'e.default && module.default.killServiceWorker) ? module : null },'#10'     '
  +'           { id: ''Presence'', conditions: (value) => (value.default && val'
  +'ue.default.Presence) ? value.default : null },'#10'                { id: "S'
  +'tate", conditions: (module) => (module.STATE && module.STREAM) ? module : n'
  +'ull },'#10'                { id: "WapDelete", conditions: (module) => (modu'
  +'le.sendConversationDelete && module.sendConversationDelete.length == 2) ? m'
  +'odule : null },'#10'                { id: "Conn", conditions: (module) => ('
  +'module.default && module.default.ref && module.default.refTTL) ? module.def'
  +'ault : null },'#10'                { id: "WapQuery", conditions: (module) ='
  +'> (module.queryExist) ? module : ((module.default && module.default.queryEx'
  +'ist) ? module.default : null) },'#10'                { id: "CryptoLib", con'
  +'ditions: (module) => (module.decryptE2EMedia) ? module : null },'#10'      '
  +'          { id: "OpenChat", conditions: (module) => (module.default && modu'
  +'le.default.prototype && module.default.prototype.openChat) ? module.default'
  +' : null },'#10'                { id: "UserConstructor", conditions: (module'
  +') => (module.default && module.default.prototype && module.default.prototyp'
  +'e.isServer && module.default.prototype.isUser) ? module.default : null },'
  ,#10'                { id: "SendTextMsgToChat", conditions: (module) => (modu'
  +'le.sendTextMsgToChat) ? module.sendTextMsgToChat : null },'#10#9#9#9#9'{ id'
  +': "ReadSeen", conditions: (module) => (module.sendSeen) ? module : null },'
  +#10'                { id: "sendDelete", conditions: (module) => (module.send'
  +'Delete) ? module.sendDelete : null },'#10#9#9#9#9'{ id: "MediaUpload", cond'
  +'itions: (module) => (module.default && module.default.mediaUpload) ? module'
  +'.default : null },'#10'                { id: "Archive", conditions: (module'
  +') => (module.setArchive) ? module : null },'#10#9#9#9#9'{ id: "Block", cond'
  +'itions: (module) => (module.blockContact && module.unblockContact) ? module'
  +' : null },'#10'                { id: "ChatUtil", conditions: (module) => (m'
  +'odule.sendClear) ? module : null },'#10#9#9#9#9'{ id: "GroupInvite", condit'
  +'ions: (module) => (module.queryGroupInviteCode) ? module : null },'#10#9'  '
  +'          { id: "addAndSendMsgToChat", conditions: (module) => (module.addA'
  +'ndSendMsgToChat) ? module.addAndSendMsgToChat : null },'#10#9#9#9#9'{ id: "'
  +'sendMsgToChat", conditions: (module) => (module.sendMsgToChat) ? module.sen'
  +'dMsgToChat : null },'#10'                { id: "Catalog", conditions: (modu'
  +'le) => (module.Catalog) ? module.Catalog : null },'#10'                { id'
  +': "bp", conditions: (module) => (module.default&&module.default.toString().'
  +'includes(''bp_unknown_version'')) ? module.default : null },'#10'          '
  +'      { id: "MsgKey", conditions: (module) => (module.default&&module.defau'
  +'lt.toString().includes(''MsgKey error: obj is null/undefined'')) ? module.d'
  +'efault : null },'#10#9#9#9#9'{ id: "Parser", conditions: (module) => (modul'
  +'e.convertToTextWithoutSpecialEmojis) ? module.default : null },'#10'       '
  +'         { id: "Builders", conditions: (module) => (module.TemplateMessage '
  +'&& module.HydratedFourRowTemplate) ? module : null },'#10'                {'
  +' id: "Me", conditions: (module) => (module.PLATFORMS && module.Conn) ? modu'
  +'le.default : null },'#10'                { id: "CallUtils", conditions: (mo'
  +'dule) => (module.sendCallEnd && module.parseCall) ? module : null },'#10#9#9
  +#9#9'{ id: "Identity", conditions: (module) => (module.queryIdentity && modu'
  +'le.updateIdentity) ? module : null },'#10'                { id: "MyStatus",'
  +' conditions: (module) => (module.getStatus && module.setMyStatus) ? module '
  +': null },'#10'                { id: "ChatStates", conditions: (module) => ('
  +'module.sendChatStatePaused && module.sendChatStateRecording && module.sendC'
  +'hatStateComposing) ? module : null },'#10'                { id: "GroupActio'
  +'ns", conditions: (module) => (module.sendExitGroup && module.localExitGroup'
  +') ? module : null },'#10'                { id: "Features", conditions: (mod'
  +'ule) => (module.FEATURE_CHANGE_EVENT && module.features) ? module : null },'
  +#10#9#9#9#9'{ id: "MessageUtils", conditions: (module) => (module.storeMessa'
  +'ges && module.appendMessage) ? module : null },'#10'                { id: "'
  +'WebMessageInfo", conditions: (module) => (module.WebMessageInfo && module.W'
  +'ebFeatures) ? module.WebMessageInfo : null },'#10'                { id: "cr'
  +'eateMessageKey", conditions: (module) => (module.createMessageKey && module'
  +'.createDeviceSentMessage) ? module.createMessageKey : null },'#10'         '
  +'       { id: "Participants", conditions: (module) => (module.addParticipant'
  +'s && module.removeParticipants && module.promoteParticipants && module.demo'
  +'teParticipants) ? module : null },'#10#9#9#9#9'{ id: "WidFactory", conditio'
  +'ns: (module) => (module.numberToWid && module.createWid && module.createWid'
  +'FromWidLike) ? module : null },'#10'                { id: "Base", condition'
  +'s: (module) => (module.setSubProtocol && module.binSend && module.actionNod'
  +'e) ? module : null },'#10'                { id: "Base2", conditions: (modul'
  +'e) => (module.supportsFeatureFlags && module.parseMsgStubProto && module.bi'
  +'nSend && module.subscribeLiveLocation) ? module : null },'#10'             '
  +'   { id: "Versions", conditions: (module) => (module.loadProtoVersions && m'
  +'odule.default["15"] && module.default["16"] && module.default["17"]) ? modu'
  +'le : null },'#10#9#9'        { id: "Sticker", conditions: (module) => (modu'
  +'le.default && module.default.Sticker) ? module.default.Sticker : null },'#10
  +'                { id: "MediaUpload", conditions: (module) => (module.defaul'
  +'t && module.default.mediaUpload) ? module.default : null },'#10'           '
  +'     { id: "UploadUtils", conditions: (module) => (module.default && module'
  +'.default.encryptAndUpload) ? module.default : null }'#10#10'            ];'
  +#10'            for (let idx in modules) {'#10'                if ((typeof m'
  +'odules[idx] === "object") && (modules[idx] !== null)) {'#10'               '
  +'     let first = Object.values(modules[idx])[0];'#10'                    if'
  +' ((typeof first === "object") && (first.exports)) {'#10'                   '
  ,'     for (let idx2 in modules[idx]) {'#10'                            let m'
  +'odule = modules(idx2);'#10'                            if (!module) {'#10' '
  +'                               continue;'#10'                            }'
  +#10'                            neededObjects.forEach((needObj) => {'#10'   '
  +'                             if (!needObj.conditions || needObj.foundedModu'
  +'le)'#10'                                    return;'#10'                   '
  +'             let neededModule = needObj.conditions(module);'#10'           '
  +'                     if (neededModule !== null) {'#10'                     '
  +'               foundCount++;'#10'                                    needOb'
  +'j.foundedModule = neededModule;'#10'                                }'#10' '
  +'                           });'#10'                            if (foundCou'
  +'nt == neededObjects.length) {'#10'                                break;'#10
  +'                            }'#10'                        }'#10#10'        '
  +'                let neededStore = neededObjects.find((needObj) => needObj.i'
  +'d === "Store");'#10'                        window.Store = neededStore.foun'
  +'dedModule ? neededStore.foundedModule : {};'#10'                        nee'
  +'dedObjects.splice(neededObjects.indexOf(neededStore), 1);'#10'             '
  +'           neededObjects.forEach((needObj) => {'#10'                       '
  +'     if (needObj.foundedModule) {'#10'                                windo'
  +'w.Store[needObj.id] = needObj.foundedModule;'#10'                          '
  +'  }'#10'                        });'#10'                        window.Stor'
  +'e.sendMessage = function (e) {'#10'                            return windo'
  +'w.Store.SendTextMsgToChat(this, ...arguments);'#10'                        '
  +'};'#10'                    }'#10'                }'#10'            }'#10#10
  +'            if (window.Store.Presence) {'#10'                for (const pro'
  +'p in window.Store.Presence) {'#10'                    if (prop === "Presenc'
  +'e") {'#10'                        continue;'#10'                    }'#10' '
  +'                   window.Store[prop] = window.Store.Presence[prop] || wind'
  +'ow.Store[prop];'#10'                }'#10'            }'#10#10'            '
  +'return window.Store;'#10'        }'#10#10'        if (typeof webpackJsonp ='
  +'== ''function'') {'#10'            webpackJsonp([], {''parasite'': (x, y, z'
  +') => getStore(z)}, [''parasite'']);'#10'        } else {'#10'            we'
  +'bpackJsonp.push(['#10'                [''parasite''],'#10'                {'
  +#10'                    parasite: function (o, e, t) {'#10'                 '
  +'       getStore(t);'#10'                    }'#10'                },'#10'  '
  +'              [[''parasite'']]'#10'            ]);'#10'        }'#10#10'   '
  +' })();'#10'}'#10' '#10'//window.WAPI = {};'#10'//window._WAPI = {};'#10#10
  +'window.WAPI = {'#10'    lastRead: {}'#10'};'#10#10#10'window.WAPI._serializ'
  +'eRawObj = (obj) => {'#10'    if (obj && obj.toJSON) {'#10'        return ob'
  +'j.toJSON();'#10'    }'#10'    return {}'#10'};'#10#10'/**'#10' * Serializes'
  +' a chat object'#10' *'#10' * @param rawChat Chat object'#10' * @returns {{}'
  +'}'#10' */'#10#10'window.WAPI._serializeChatObj = (obj) => {'#10'    if (obj'
  +' == undefined) {'#10'        return null;'#10'    }'#10'    return Object.a'
  +'ssign(window.WAPI._serializeRawObj(obj), {'#10'        kind: obj.kind,'#10
  +'        isGroup: obj.isGroup,'#10'        formattedTitle: obj.formattedTitl'
  +'e,'#10'        contact: obj[''contact''] ? window.WAPI._serializeContactObj'
  +'(obj[''contact'']) : null,'#10'        groupMetadata: obj["groupMetadata"] '
  +'? window.WAPI._serializeRawObj(obj["groupMetadata"]) : null,'#10'        pr'
  +'esence: obj["presence"] ? window.WAPI._serializeRawObj(obj["presence"]) : n'
  +'ull,'#10'        msgs: null'#10'    });'#10'};'#10#10'window.WAPI._serializ'
  +'eContactObj = (obj) => {'#10'    if (obj == undefined) {'#10'        return'
  +' null;'#10'    }'#10'    return Object.assign(window.WAPI._serializeRawObj('
  +'obj), {'#10'        formattedName: obj.formattedName,'#10'        isHighLev'
  +'elVerified: obj.isHighLevelVerified,'#10'        isMe: obj.isMe,'#10'      '
  +'  isMyContact: obj.isMyContact,'#10'        isPSA: obj.isPSA,'#10'        i'
  +'sUser: obj.isUser,'#10'        isVerified: obj.isVerified,'#10'        isWA'
  +'Contact: obj.isWAContact,'#10'        profilePicThumbObj: obj.profilePicThu'
  +'mb ? WAPI._serializeProfilePicThumb(obj.profilePicThumb) : {},'#10'        '
  +'statusMute: obj.statusMute,'#10'        msgs: null'#10'    });'#10'};'#10#10
  +'window.WAPI._serializeMessageObj = (obj) => {'#10'    if (obj == undefined)'
  +' {'#10'        return null;'#10'    }'#10'    const _chat = obj[''chat''] ?'
  +' WAPI._serializeChatObj(obj[''chat'']) : {};'#10'    if(obj.quotedMsg) obj.'
  +'quotedMsgObj();'#10'    return Object.assign(window.WAPI._serializeRawObj(o'
  +'bj), {'#10'        id: obj.id._serialized,'#10'        //add 02/06/2020 mik'
  ,'e -->'#10#9#9'quotedParticipant: obj.quotedParticipant? obj.quotedParticipa'
  +'nt._serialized ? obj.quotedParticipant._serialized : undefined : undefined,'
  +#10'        author: obj.author? obj.author._serialized ? obj.author._seriali'
  +'zed : undefined : undefined,'#10'        chatId: obj.chatId? obj.chatId._se'
  +'rialized ? obj.chatId._serialized : undefined : undefined,'#10'        to: '
  +'obj.to? obj.to._serialized ? obj.to._serialized : undefined : undefined,'#10
  +'        fromMe: obj.id.fromMe,'#10#9#9'//add 02/06/2020 mike <--'#10#9#9#10
  +#9#9'sender: obj["senderObj"] ? WAPI._serializeContactObj(obj["senderObj"]) '
  +': null,'#10'        timestamp: obj["t"],'#10'        content: obj["body"],'
  +#10'        isGroupMsg: obj.isGroupMsg,'#10'        isLink: obj.isLink,'#10
  +'        isMMS: obj.isMMS,'#10'        isMedia: obj.isMedia,'#10'        isN'
  +'otification: obj.isNotification,'#10'        isPSA: obj.isPSA,'#10'        '
  +'type: obj.type,'#10'        chat: _chat,'#10'        isOnline: _chat.isOnli'
  +'ne,'#10'        lastSeen: _chat.lastSeen,'#10'        chatId: obj.id.remote'
  +','#10'        quotedMsgObj: WAPI._serializeMessageObj(obj[''_quotedMsgObj'''
  +']),'#10'        mediaData: window.WAPI._serializeRawObj(obj[''mediaData''])'
  +','#10'        reply: body => window.WAPI.reply(_chat.id._serialized, body, '
  +'obj)'#10'    });'#10'};'#10#10'window.WAPI._serializeNumberStatusObj = (obj'
  +') => {'#10'    if (obj == undefined) {'#10'        return null;'#10'    }'
  +#10#10'    return Object.assign({}, {'#10'        id: obj.jid,'#10'        s'
  +'tatus: obj.status,'#10'        isBusiness: (obj.biz === true),'#10'        '
  +'canReceiveMessage: (obj.status === 200)'#10'    });'#10'};'#10#10'window.WA'
  +'PI._serializeProfilePicThumb = (obj) => {'#10'    if (obj == undefined) {'
  +#10'        return null;'#10'    }'#10#10'    return Object.assign({}, {'#10
  +'        eurl: obj.eurl,'#10'        id: obj.id,'#10'        img: obj.img,'
  +#10'        imgFull: obj.imgFull,'#10'        raw: obj.raw,'#10'        tag:'
  +' obj.tag'#10'    });'#10'}'#10#10'window.WAPI.createGroup = async function '
  +'(name, contactsId) {'#10'    if (!Array.isArray(contactsId)) {'#10'        '
  +'contactsId = [contactsId];'#10'    }'#10#10'    return await window.Store.W'
  +'apQuery.createGroup(name, contactsId);;'#10'};'#10#10'window.WAPI.leaveGrou'
  +'p = function(groupId) {'#10'    groupId = typeof groupId == "string" ? grou'
  +'pId : groupId._serialized;'#10'    var group = WAPI.getChat(groupId);'#10' '
  +'   return Store.GroupActions.sendExitGroup(group)'#10'};'#10#10#10'window.W'
  +'API.getAllContacts = function(done) {'#10'    const contacts = window.Store'
  +'.Contact.map((contact) => WAPI._serializeContactObj(contact));'#10#10'    i'
  +'f (done !== undefined) done(contacts);'#10#10'    SetConsoleMessage("getAll'
  +'Contacts", JSON.stringify(contacts));'#10#10'    return contacts;'#10'};'#10
  +#10'/**'#10' * Fetches all contact objects from store, filters them'#10' *'
  +#10' * @param done Optional callback function for async execution'#10' * @re'
  +'turns {Array|*} List of contacts'#10' */'#10'window.WAPI.getMyContacts = fu'
  +'nction(done) {'#10'    const contacts = window.Store.Contact.filter((contac'
  +'t) => contact.isMyContact === true).map((contact) => WAPI._serializeContact'
  +'Obj(contact));'#10'    if (done !== undefined) done(contacts);'#10'    retu'
  +'rn contacts;'#10'};'#10#10'/**'#10' * Fetches contact object from store by '
  +'ID'#10' *'#10' * @param id ID of contact'#10' * @param done Optional callba'
  +'ck function for async execution'#10' * @returns {T|*} Contact object'#10' *'
  +'/'#10'window.WAPI.getContact = function(id, done) {'#10'    const found = w'
  +'indow.Store.Contact.get(id);'#10#10'    if (done !== undefined) done(window'
  +'.WAPI._serializeContactObj(found))'#10'    return window.WAPI._serializeCon'
  +'tactObj(found);'#10'};'#10#10'/**'#10' * Fetches all chat objects from stor'
  +'e'#10' *'#10' * @param done Optional callback function for async execution'
  +#10' * @returns {Array|*} List of chats'#10' */'#10'window.WAPI.getAllChats '
  +'= function(done) {'#10'    const chats = window.Store.Chat.map((chat) => WA'
  +'PI._serializeChatObj(chat));'#10#10'    if (done !== undefined) done(chats)'
  +';'#10#10'    SetConsoleMessage("getAllChats", JSON.stringify(chats));'#10#10
  +'    return chats;'#10'};'#10#10'window.WAPI.haveNewMsg = function(chat) {'
  +#10'    return chat.unreadCount > 0;'#10'};'#10#10'window.WAPI.getAllChatsWi'
  +'thNewMsg = function(done) {'#10'    const chats = window.Store.Chat.filter('
  +'window.WAPI.haveNewMsg).map((chat) => WAPI._serializeChatObj(chat));'#10#10
  +'    if (done !== undefined) done(chats);'#10'    return chats;'#10'};'#10#10
  +'/**'#10' * Fetches all chat IDs from store'#10' *'#10' * @param done Option'
  +'al callback function for async execution'#10' * @returns {Array|*} List of '
  +'chat id''s'#10' */'#10'window.WAPI.getAllChatIds = function(done) {'#10'   '
  +' const chatIds = window.Store.Chat.map((chat) => chat.id._serialized || cha'
  ,'t.id);'#10#10'    if (done !== undefined) done(chatIds);'#10'    return cha'
  +'tIds;'#10'};'#10#10'window.WAPI.getAllNewMessages = async function () {'#10
  +'    return JSON.stringify(WAPI.getAllChatsWithNewMsg().map(c => WAPI.getCha'
  +'t(c.id._serialized)).map(c => c.msgs._models.filter(x => x.isNewMsg)) || []'
  +')'#10'}'#10#10#10'/**'#10' * Fetches all groups objects from store'#10' *'
  +#10' * @param done Optional callback function for async execution'#10' * @re'
  +'turns {Array|*} List of chats'#10' */'#10' '#10' '#10'window.WAPI.getAllGro'
  +'ups = function(done) {'#10'    let groups = window.Store.Chat.filter((chat)'
  +' => chat.isGroup);'#10#10#9'if (done !== undefined) done(groups);'#10#9#10
  +#10#9'let arrGroups = [];'#10#9'let arr = groups;'#10#9'arr.forEach((v , i) '
  +'=> {'#10#9#9'arrGroups.push(arr[i][''id''][''_serialized'']+'' ''+arr[i]['''
  +'formattedTitle'']);'#10#9'})'#10#9#10#9'SetConsoleMessage("getAllGroups", J'
  +'SON.stringify(arrGroups));'#10#9#10#9'//return groups;'#10'}; '#10#10'//01/'
  +'06/2020'#10'window.WAPI.getAllGroupsList = function(done) {'#10'    const c'
  +'ontacts = window.Store.Contact.map((contact) => WAPI._serializeContactObj(c'
  +'ontact));'#10#10'    if (done !== undefined) done(contacts);'#10#10'    Set'
  +'ConsoleMessage("getAllGroups", JSON.stringify(contacts));'#10#10'    return'
  +' contacts;'#10'};'#10#10'/**'#10' * Sets the chat state'#10' * '#10' * @par'
  +'am {0|1|2} chatState The state you want to set for the chat. Can be TYPING '
  +'(1), RECRDING (2) or PAUSED (3);'#10' * returns {boolean}'#10' */'#10'windo'
  +'w.WAPI.sendChatstate = async function (state, chatId) {'#10'    switch(stat'
  +'e) {'#10'        case 0:'#10'            await window.Store.ChatStates.send'
  +'ChatStateComposing(chatId);'#10'            break;'#10'        case 1:'#10
  +'            await window.Store.ChatStates.sendChatStateRecording(chatId);'
  +#10'            break;'#10'        case 2:'#10'            await window.Stor'
  +'e.ChatStates.sendChatStatePaused(chatId);'#10'            break;'#10'      '
  +'  default:'#10'            return false'#10'    }'#10'    return true;'#10
  +'};'#10#10'/**'#10' * Fetches chat object from store by ID'#10' *'#10' * @pa'
  +'ram id ID of chat'#10' * @returns {T|*} Chat object'#10' */'#10'window.WAPI'
  +'.getChat = function (id) {'#10'    id = typeof id == "string" ? id : id._se'
  +'rialized;'#10'    const found = window.Store.Chat.get(id);'#10'    if (foun'
  +'d) found.sendMessage = (found.sendMessage) ? found.sendMessage : function ('
  +') { return window.Store.sendMessage.apply(this, arguments); };'#10'    retu'
  +'rn found;'#10'}'#10#10'window.WAPI.getChatByName = function(name, done) {'
  +#10'    const found = window.Store.Chat.find((chat) => chat.name === name);'
  +#10'    if (done !== undefined) done(found);'#10'    return found;'#10'};'#10
  +#10'window.WAPI.sendImageFromDatabasePicBot = function (picId, chatId, capti'
  +'on) {'#10'    var chatDatabase = window.WAPI.getChatByName(''DATABASEPICBOT'
  +''');'#10'    var msgWithImg = chatDatabase.msgs.find((msg) => msg.caption ='
  +'= picId);'#10#10'    if (msgWithImg === undefined) {'#10'        return fal'
  +'se;'#10'    }'#10'    var chatSend = WAPI.getChat(chatId);'#10'    if (chat'
  +'Send === undefined) {'#10'        return false;'#10'    }'#10'    const old'
  +'Caption = msgWithImg.caption;'#10#10'    msgWithImg.id.id = window.WAPI.get'
  +'NewId();'#10'    msgWithImg.id.remote = chatId;'#10'    msgWithImg.t = Math'
  +'.ceil(new Date().getTime() / 1000);'#10'    msgWithImg.to = chatId;'#10#10
  +'    if (caption !== undefined && caption !== '''') {'#10'        msgWithImg'
  +'.caption = caption;'#10'    } else {'#10'        msgWithImg.caption = '''';'
  +#10'    }'#10#10'    msgWithImg.collection.send(msgWithImg).then(function (e'
  +') {'#10'        msgWithImg.caption = oldCaption;'#10'    });'#10#10'    ret'
  +'urn true;'#10'};'#10#10'window.WAPI.getGeneratedUserAgent = function (usera'
  +'gent) {'#10'    if (!useragent.includes(''WhatsApp'')) return ''WhatsApp/0.'
  +'4.315 '' + useragent;'#10'    return useragent.replace(useragent.match(/Wha'
  +'tsApp\/([.\d])*/g)[0].match(/[.\d]*/g).find(x => x), window.Debug.VERSION)'
  +#10'}'#10#10'window.WAPI.getWAVersion = function () {'#10'    return window.'
  +'Debug.VERSION;'#10'}'#10#10'/**'#10' * Automatically sends a link with the '
  +'auto generated link preview. You can also add a custom message to be added.'
  +#10' * @param chatId '#10' * @param url string A link, for example for youtu'
  +'be. e.g https://www.youtube.com/watch?v=61O-Galzc5M'#10' * @param text stri'
  +'ng Custom text as body of the message, this needs to include the link or it'
  +' will be appended after the link.'#10' */'#10'window.WAPI.sendLinkWithAutoP'
  +'review = async function (chatId, url, text) {'#10'    var chatSend = WAPI.g'
  +'etChat(chatId);'#10'    if (chatSend === undefined) {'#10'        return fa'
  +'lse;'#10'    }'#10'    const linkPreview = await Store.WapQuery.queryLinkPr'
  +'eview(url);'#10'    return (await chatSend.sendMessage(text.includes(url) ?'
  ,' text : `${url}\n${text}`, {linkPreview}))==''success'''#10'}'#10#10'window'
  +'.WAPI.sendMessageWithThumb = function (thumb, url, title, description, text'
  +', chatId) {'#10'    var chatSend = WAPI.getChat(chatId);'#10'    if (chatSe'
  +'nd === undefined) {'#10'        return false;'#10'    }'#10'    var linkPre'
  +'view = {'#10'        canonicalUrl: url,'#10'        description: descriptio'
  +'n,'#10'        matchedText: url,'#10'        title: title,'#10'        thum'
  +'bnail: thumb // Thumbnail max size allowed: 200x200'#10'    };'#10'    chat'
  +'Send.sendMessage(text.includes(url) ? text : `${url}\n${text}`, { linkPrevi'
  +'ew: linkPreview, mentionedJidList: [], quotedMsg: null, quotedMsgAdminGroup'
  +'Jid: null });'#10'    return true;'#10'};'#10#10#10'window.WAPI.getNewId = '
  +'function() {'#10'    var text = "";'#10'    var possible = "ABCDEFGHIJKLMNO'
  +'PQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";'#10#10'    for (var i = 0'
  +'; i < 20; i++)'#10'        text += possible.charAt(Math.floor(Math.random()'
  +' * possible.length));'#10'    return text;'#10'};'#10#10'window.WAPI.getCha'
  +'tById = function(id, done) {'#10'    let found = WAPI.getChat(id);'#10'    '
  +'if (found) {'#10'        found = WAPI._serializeChatObj(found);'#10'    } e'
  +'lse {'#10'        found = false;'#10'    }'#10#10'    if (done !== undefine'
  +'d) done(found);'#10'    return found;'#10'};'#10#10'/**'#10' * Retorno toda'
  +'s as mensagens nao lidas de um bate-papo solicitado e as marca como lidas.'
  +#10' *'#10' * :param id: chat id'#10' * :type id: string'#10' *'#10' * :para'
  +'m includeMe: indicates if user messages have to be included'#10' * :type in'
  +'cludeMe: boolean'#10' *'#10' * :param includeNotifications: indicates if no'
  +'tifications have to be included'#10' * :type includeNotifications: boolean'
  +#10' *'#10' * :param done: callback passed by selenium'#10' * :type done: fu'
  +'nction'#10' *'#10' * :returns: list of unread messages from asked chat'#10
  +' * :rtype: object'#10' */'#10'window.WAPI.getUnreadMessagesInChat = functio'
  +'n(id, includeMe, includeNotifications, done) {'#10'    // get chat and its '
  +'messages'#10'    let chat = WAPI.getChat(id);'#10'    let messages = chat.m'
  +'sgs._models;'#10#10'    // initialize result list'#10'    let output = [];'
  +#10#10'    // look for unread messages, newest is at the end of array'#10'  '
  +'  for (let i = messages.length - 1; i >= 0; i--) {'#10'        // system me'
  +'ssage: skip it'#10'        if (i === "remove") {'#10'            continue;'
  +#10'        }'#10#10'        // get message'#10'        let messageObj = mes'
  +'sages[i];'#10#10'        // found a read message: stop looking for others'
  +#10'        if (typeof(messageObj.isNewMsg) !== "boolean" || messageObj.isNe'
  +'wMsg === false) {'#10'            continue;'#10'        } else {'#10'      '
  +'      messageObj.isNewMsg = false;'#10'            // process it'#10'      '
  +'      let message = WAPI.processMessageObj(messageObj,'#10'                '
  +'includeMe,'#10'                includeNotifications);'#10#10'            //'
  +' save processed message on result list'#10'            if (message)'#10'   '
  +'             output.push(message);'#10'        }'#10'    }'#10'    // callb'
  +'ack was passed: run it'#10'    if (done !== undefined) done(output);'#10'  '
  +'  // return result list'#10'    return output;'#10'};'#10#10'/**'#10' * Loa'
  +'d more messages in chat object from store by ID'#10' *'#10' * @param id ID '
  +'of chat'#10' * @param done Optional callback function for async execution'
  +#10' * @returns None'#10' */'#10'window.WAPI.loadEarlierMessages = function('
  +'id, done) {'#10'    const found = WAPI.getChat(id);'#10'    if (done !== un'
  +'defined) {'#10'        found.loadEarlierMsgs().then(function() {'#10'      '
  +'      done()'#10'        });'#10'    } else {'#10'        found.loadEarlier'
  +'Msgs();'#10'    }'#10'};'#10#10'/**'#10' * Load more messages in chat objec'
  +'t from store by ID'#10' *'#10' * @param id ID of chat'#10' * @param done Op'
  +'tional callback function for async execution'#10' * @returns None'#10' */'
  +#10'window.WAPI.loadAllEarlierMessages = function(id, done) {'#10'    const '
  +'found = WAPI.getChat(id);'#10'    x = function() {'#10'        if (!found.m'
  +'sgs.msgLoadState.noEarlierMsgs) {'#10'            found.loadEarlierMsgs().t'
  +'hen(x);'#10'        } else if (done) {'#10'            done();'#10'        '
  +'}'#10'    };'#10'    x();'#10'};'#10#10'window.WAPI.asyncLoadAllEarlierMess'
  +'ages = function(id, done) {'#10'    done();'#10'    window.WAPI.loadAllEarl'
  +'ierMessages(id);'#10'};'#10#10'window.WAPI.areAllMessagesLoaded = function('
  +'id, done) {'#10'    const found = WAPI.getChat(id);'#10'    if (!found.msgs'
  +'.msgLoadState.noEarlierMsgs) {'#10'        if (done) done(false);'#10'     '
  +'   return false'#10'    }'#10'    if (done) done(true);'#10'    return true'
  +#10'};'#10#10'/**'#10' * Load more messages in chat object from store by ID '
  +'till a particular date'#10' *'#10' * @param id ID of chat'#10' * @param las'
  ,'tMessage UTC timestamp of last message to be loaded'#10' * @param done Opti'
  +'onal callback function for async execution'#10' * @returns None'#10' */'#10
  +#10'window.WAPI.loadEarlierMessagesTillDate = function(id, lastMessage, done'
  +') {'#10'    const found = WAPI.getChat(id);'#10'    x = function() {'#10'  '
  +'      if (found.msgs.models[0].t > lastMessage) {'#10'            found.loa'
  +'dEarlierMsgs().then(x);'#10'        } else {'#10'            done();'#10'  '
  +'      }'#10'    };'#10'    x();'#10'};'#10#10'/**'#10' * Fetches all group '
  +'metadata objects from store'#10' *'#10' * @param done Optional callback fun'
  +'ction for async execution'#10' * @returns {Array|*} List of group metadata'
  +#10' */'#10'window.WAPI.getAllGroupMetadata = function(done) {'#10'    const'
  +' groupData = window.Store.GroupMetadata.map((groupData) => groupData.all);'
  +#10#10'    if (done !== undefined) done(groupData);'#10'    return groupData'
  +';'#10'};'#10#10'/**'#10' * Fetches group metadata object from store by ID'
  +#10' *'#10' * @param id ID of group'#10' * @param done Optional callback fun'
  +'ction for async execution'#10' * @returns {T|*} Group metadata object'#10' '
  +'*/'#10' '#10'/* Deprecated 02/06/2020'#10'window.WAPI.getGroupMetadata = as'
  +'ync function(id, done) {'#10'    let output = window.Store.GroupMetadata.ge'
  +'t(id);'#10#10'    if (output !== undefined) {'#10'        if (output.stale)'
  +' {'#10'            await output.update();'#10'        }'#10'    }'#10#10'  '
  +'  if (done !== undefined) done(output);'#10'    return output;'#10#10'}; */'
  +#10#10'window.WAPI.getGroupMetadata = async function (id) {'#10'    return w'
  +'indow.Store.GroupMetadata.find(id);'#10'};'#10#10'/**'#10' * Fetches group '
  +'participants'#10' *'#10' * @param id ID of group'#10' * @returns {Promise.<'
  +'*>} Yields group metadata'#10' * @private'#10' */'#10'window.WAPI._getGroup'
  +'Participants = async function(id) {'#10'    const metadata = await WAPI.get'
  +'GroupMetadata(id);'#10'    return metadata.participants;'#10'};'#10#10'/**'
  +#10' * Fetches IDs of group participants'#10' *'#10' * @param id ID of group'
  +#10' * @param done Optional callback function for async execution'#10' * @re'
  +'turns {Promise.<Array|*>} Yields list of IDs'#10' */'#10#10'/*'#10'window.W'
  +'API.getGroupParticipantIDs = async function (id) {'#10'    return (await WA'
  +'PI._getGroupParticipants(id))'#10'        .map((participant) => participant'
  +'.id);'#10'}; */'#10#10#10'window.WAPI.getGroupParticipantIDs = async functi'
  +'on(id, done) {'#10'    const output = (await WAPI._getGroupParticipants(id)'
  +')'#10'        .map((participant) => participant.id);'#10#10'    if (done !='
  +'= undefined) done(output);'#10#9'getAllGroupContacts(JSON.stringify(output)'
  +');'#10#9#9'   '#10#9'return output;'#10'};'#10#10'window.WAPI.getGroupAdmin'
  +'s = async function(id, done) {'#10'    const output = (await WAPI._getGroup'
  +'Participants(id))'#10'        .filter((participant) => participant.isAdmin)'
  +#10'        .map((admin) => admin.id);'#10#10'    if (done !== undefined) do'
  +'ne(output);'#10#9'let arrGroupAdm = [];'#10#9'let arr = output;'#10#9'arr.f'
  +'orEach((v , i) => {'#10#9#9'arrGroupAdm.push(arr[i][''_serialized'']);'#10#9
  +'})'#10#9'SetConsoleMessage("getAllGroupAdmins", JSON.stringify(arrGroupAdm)'
  +');'#10#9#10'    return output;'#10'};'#10#10'/**'#10' * Gets object represe'
  +'nting the logged in user'#10' *'#10' * @returns {Array|*|$q.all}'#10' */'#10
  +'window.WAPI.getMe = function(done) {'#10'    const rawMe = window.Store.Con'
  +'tact.get(window.Store.Conn.me);'#10#10'    if (done !== undefined) done(raw'
  +'Me.all);'#10'    return rawMe.all;'#10'};'#10#10'window.WAPI.isLoggedIn = f'
  +'unction(done) {'#10'    // Contact always exists when logged in'#10'    con'
  +'st isLogged = window.Store.Contact && window.Store.Contact.checksum !== und'
  +'efined;'#10#10'    if (done !== undefined) done(isLogged);'#10'    return i'
  +'sLogged;'#10'};'#10#10'//Funcao para saber o status do servico - Mike 26/02'
  +'/2020'#10'window.WAPI.isConnected = function (done) {'#10'    const isConne'
  +'cted = document.querySelector(''*[data-icon="alert-phone"]'') !== null ? fa'
  +'lse : true;'#10#10'    if (done !== undefined) done(isConnected);'#10#9'Set'
  +'ConsoleMessage("GetCheckIsConnected", JSON.stringify(isConnected));'#10'   '
  +' return isConnected;'#10'};'#10#10'window.WAPI.teste = function (url) {'#10
  +#9'convertImgToBase64URL(url, function(base64Img){'#10#9#9'SetConsoleMessage'
  +'("GetProfilePicThumb", JSON.stringify(base64Img));'#10#9'});'#10'};'#10#10
  +'window.WAPI.processMessageObj = function(messageObj, includeMe, includeNoti'
  +'fications) {'#10'    if (messageObj.isNotification) {'#10'        if (inclu'
  +'deNotifications)'#10'            return WAPI._serializeMessageObj(messageOb'
  +'j);'#10'        else'#10'            return;'#10'        // System message'
  +#10'        // (i.e. "Messages you send to this chat and calls are now secur'
  +'ed with end-to-end encryption...")'#10'    } else if (messageObj.id.fromMe '
  ,'=== false || includeMe) {'#10'        return WAPI._serializeMessageObj(mess'
  +'ageObj);'#10'    }'#10#10'    SetConsoleMessage("processMessageObj", JSON.s'
  +'tringify(messageObj));'#10'    return;'#10'};'#10#10'window.WAPI.getAllMess'
  +'agesInChat = function(id, includeMe, includeNotifications, done) {'#10'    '
  +'const chat = WAPI.getChat(id);'#10'    let output = [];'#10'    const messa'
  +'ges = chat.msgs._models;'#10#10'    for (const i in messages) {'#10'       '
  +' if (i === "remove") {'#10'            continue;'#10'        }'#10'        '
  +'const messageObj = messages[i];'#10#10'        //Miro Emidio - 05/Dez/2019 '
  +'Alterado para funcionamento em WHATS empresarial/pessoal'#10'        let me'
  +'ssage = WAPI.processMessageObj(messageObj, includeMe, false) //includeNotif'
  +'ications'#10'        if (message)'#10'            output.push(message);'#10
  +'    }'#10'    if (done !== undefined) done(output);'#10'    return output;'
  +#10'};'#10#10'window.WAPI.getAllMessageIdsInChat = function(id, includeMe, i'
  +'ncludeNotifications, done) {'#10'    const chat = WAPI.getChat(id);'#10'   '
  +' let output = [];'#10'    const messages = chat.msgs._models;'#10#10'    fo'
  +'r (const i in messages) {'#10'        if ((i === "remove") || (!includeMe &'
  +'& messages[i].isMe) || (!includeNotifications && messages[i].isNotification'
  +')) {'#10'            continue;'#10'        }'#10'        output.push(messag'
  +'es[i].id._serialized);'#10'    }'#10'    if (done !== undefined) done(outpu'
  +'t);'#10'    return output;'#10'};'#10#10'window.WAPI.getMessageById = funct'
  +'ion(id, done) {'#10'    let result = false;'#10'    try {'#10'        let m'
  +'sg = window.Store.Msg.get(id);'#10'        if (msg) {'#10'            resul'
  +'t = WAPI.processMessageObj(msg, true, true);'#10'        }'#10'    } catch '
  +'(err) {}'#10#10'    if (done !== undefined) {'#10'        done(result);'#10
  +'    } else {'#10'        return result;'#10'    }'#10'};'#10#10'window.WAPI'
  +'.ReplyMessage = function(idMessage, message, done) {'#10'    var messageObj'
  +'ect = window.Store.Msg.get(idMessage);'#10'    if (messageObject === undefi'
  +'ned) {'#10'        if (done !== undefined) done(false);'#10'        return '
  +'false;'#10'    }'#10'    messageObject = messageObject.value();'#10#10'    '
  +'const chat = WAPI.getChat(messageObject.chat.id)'#10'    if (chat !== undef'
  +'ined) {'#10'        if (done !== undefined) {'#10'            chat.sendMess'
  +'age(message, null, messageObject).then(function() {'#10'                fun'
  +'ction sleep(ms) {'#10'                    return new Promise(resolve => set'
  +'Timeout(resolve, ms));'#10'                }'#10#10'                var tri'
  +'als = 0;'#10#10'                function check() {'#10'                    '
  +'for (let i = chat.msgs.models.length - 1; i >= 0; i--) {'#10'              '
  +'          let msg = chat.msgs.models[i];'#10#10'                        if '
  +'(!msg.senderObj.isMe || msg.body != message) {'#10'                        '
  +'    continue;'#10'                        }'#10'                        don'
  +'e(WAPI._serializeMessageObj(msg));'#10'                        return True;'
  +#10'                    }'#10'                    trials += 1;'#10'         '
  +'           console.log(trials);'#10'                    if (trials > 30) {'
  +#10'                        done(true);'#10'                        return;'
  +#10'                    }'#10'                    sleep(500).then(check);'#10
  +'                }'#10'                check();'#10'            });'#10'    '
  +'        return true;'#10'        } else {'#10'            chat.sendMessage('
  +'message, null, messageObject);'#10'            return true;'#10'        }'
  +#10'    } else {'#10'        if (done !== undefined) done(false);'#10'      '
  +'  return false;'#10'    }'#10'};'#10#10'//Funcao desativada em 27/11/2019 b'
  +'y Mike'#10'/*window.WAPI.sendMessageToID = function (id, message, done) {'
  +#10'try {'#10'window.getContact = (id) => {'#10'return Store.WapQuery.queryE'
  +'xist(id);'#10'}'#10'window.getContact(id).then(contact => {'#10'if (contact'
  +'.status === 404) {'#10'done(true);'#10'} else {'#10'Store.Chat.find(contact'
  +'.jid).then(chat => {'#10'chat.sendMessage(message);'#10'return true;'#10'})'
  +'.catch(reject => {'#10'if (WAPI.sendMessage(id, message)) {'#10'done(true);'
  +#10'return true;'#10'}else{'#10'done(false);'#10'return false;'#10'}'#10'});'
  +#10'}'#10'});'#10'} catch (e) {'#10'if (window.Store.Chat.length === 0)'#10
  +'return false;'#10#10'firstChat = Store.Chat.models[0];'#10'var originalID ='
  +' firstChat.id;'#10'firstChat.id = typeof originalID === "string" ? id : new'
  +' window.Store.UserConstructor(id, { intentionallyUsePrivateConstructor: tru'
  +'e });'#10'if (done !== undefined) {'#10'firstChat.sendMessage(message).then'
  +'(function () {'#10'firstChat.id = originalID;'#10'done(true);'#10'});'#10'r'
  +'eturn true;'#10'} else {'#10'firstChat.sendMessage(message);'#10'firstChat.'
  +'id = originalID;'#10'return true;'#10'}'#10'}'#10'if (done !== undefined) d'
  ,'one(false);'#10'return false;'#10'} */'#10#10'window.WAPI.sendMessage = fun'
  +'ction(id, message, done) {'#10'    var chat = WAPI.getChat(id);'#10'    if '
  +'(chat !== undefined) {'#10'        if (done !== undefined) {'#10'          '
  +'  chat.sendMessage(message).then(function() {'#10'                function '
  +'sleep(ms) {'#10'                    return new Promise(resolve => setTimeou'
  +'t(resolve, ms));'#10'                }'#10#10'                var trials = '
  +'0;'#10#10'                function check() {'#10'                    for (l'
  +'et i = chat.msgs.models.length - 1; i >= 0; i--) {'#10'                    '
  +'    let msg = chat.msgs.models[i];'#10#10'                        if (!msg.'
  +'senderObj.isMe || msg.body != message) {'#10'                            co'
  +'ntinue;'#10'                        }'#10'                        done(WAPI'
  +'._serializeMessageObj(msg));'#10'                        return True;'#10' '
  +'                   }'#10'                    trials += 1;'#10'             '
  +'       console.log(trials);'#10'                    if (trials > 30) {'#10
  +'                        done(true);'#10'                        return;'#10
  +'                    }'#10'                    sleep(500).then(check);'#10' '
  +'               }'#10'                check();'#10'            });'#10'     '
  +'       return true;'#10'        } else {'#10'            chat.sendMessage(m'
  +'essage);'#10'            return true;'#10'        }'#10'    } else {'#10'  '
  +'      if (done !== undefined) done(false);'#10'        return false;'#10'  '
  +'  }'#10'};'#10#10'window.WAPI.sendMessage2 = function(id, message, done) {'
  +#10'    var chat = WAPI.getChat(id);'#10'    if (chat !== undefined) {'#10' '
  +'       try {'#10'            if (done !== undefined) {'#10'                '
  +'chat.sendMessage(message).then(function() {'#10'                    done(tr'
  +'ue);'#10'                });'#10'            } else {'#10'                c'
  +'hat.sendMessage(message);'#10'            }'#10'            return true;'#10
  +'        } catch (error) {'#10'            if (done !== undefined) done(fals'
  +'e)'#10'            return false;'#10'        }'#10'    }'#10'    if (done !'
  +'== undefined) done(false)'#10'    return false;'#10'};'#10#10'//Funcao adic'
  +'ionada em 18/06/2020 by Mike'#10'window.WAPI.sendSeen = async function (id)'
  +' {'#10'    if (!id) return false;'#10'    var chat = window.WAPI.getChat(id'
  +');'#10'    if (chat !== undefined) {'#10'            await Store.ReadSeen.s'
  +'endSeen(chat, false);'#10'            return true;'#10'    }'#10'    return'
  +' false;'#10'};'#10#10'/*'#10'//Apos receber uma mensagem, e nao responder, '
  +'essa funcao nao funciona de forma isolada'#10'window.WAPI.sendSeen = functi'
  +'on(id, done) {'#10'    var chat = window.WAPI.getChat(id);'#10'    if (chat'
  +' !== undefined) {'#10'        if (done !== undefined) {'#10'            Sto'
  +'re.SendSeen(Store.Chat.models[0], false).then(function() {'#10'            '
  +'    done(true);'#10'            });'#10'            return true;'#10'      '
  +'  } else {'#10'            Store.SendSeen(Store.Chat.models[0], false);'#10
  +'            return true;'#10'        }'#10'    }'#10'    if (done !== undef'
  +'ined) done();'#10'    return false;'#10'}; */'#10#10'/*'#10'//Alterado em 2'
  +'0/02/2020 Creditos: by Lucas'#10'//Apos receber uma mensagem, e nao respond'
  +'er, essa funcao funciona de forma isolada'#10'window.WAPI.sendSeen = functi'
  +'on(id, done) {'#10'    var chat = window.WAPI.getChat(id);'#10'    if (chat'
  +' !== undefined) {'#10'        if (done !== undefined) {'#10'            Sto'
  +'re.SendSeen(Store.Chat.models[0], false).then(function() {'#10'            '
  +'    done(true);'#10'            });'#10'            return true;'#10'      '
  +'  } else {'#10'            Store.SendSeen(Store.Chat.models[0], false);'#10
  +'            return true;'#10'        }'#10'    }'#10'    if (done !== undef'
  +'ined) done();'#10'    return false;'#10'}; */'#10#10'function isChatMessage'
  +'(message) {'#10'    if (message.isSentByMe) {'#10'        return false;'#10
  +'    }'#10'    if (message.isNotification) {'#10'        return false;'#10' '
  +'   }'#10'    if (!message.isUserCreatedType) {'#10'        return false;'#10
  +'    }'#10'    return true;'#10'}'#10#10'window.WAPI.getUnreadMessages = fun'
  +'ction(includeMe, includeNotifications, use_unread_count, done) {'#10'    co'
  +'nst chats = window.Store.Chat.models;'#10'    let output = [];'#10#10'    f'
  +'or (let chat in chats) {'#10'        if (isNaN(chat)) {'#10'            con'
  +'tinue;'#10'        }'#10#10'        let messageGroupObj = chats[chat];'#10
  +'        let messageGroup = WAPI._serializeChatObj(messageGroupObj);'#10#10
  +'        messageGroup.messages = [];'#10#10'        const messages = message'
  +'GroupObj.msgs._models;'#10'        for (let i = messages.length - 1; i >= 0'
  +'; i--) {'#10'            let messageObj = messages[i];'#10'            if ('
  +'typeof(messageObj.isNewMsg) != "boolean" || messageObj.isNewMsg === false) '
  ,'{'#10'                continue;'#10'            } else {'#10'              '
  +'  messageObj.isNewMsg = false;'#10'                //Miro Emidio - 05/Dez/2'
  +'019 Alterado para funcionamento em WHATS empresarial/pessoal'#10'          '
  +'      let message = WAPI.processMessageObj(messageObj, includeMe, false); /'
  +'/includeNotifications);// MUDAR PARA "FALSE" AQUI'#10'                if (m'
  +'essage) {'#10'                    messageGroup.messages.push(message);'#10
  +'                }'#10'            }'#10'        }'#10#10'        if (messag'
  +'eGroup.messages.length > 0) {'#10'            output.push(messageGroup);'#10
  +'        } else { // no messages with isNewMsg true'#10'            if (use_'
  +'unread_count) {'#10'                let n = messageGroupObj.unreadCount; //'
  +' usara o atributo unreadCount para buscar as ultimas n mensagens do remeten'
  +'te'#10'                for (let i = messages.length - 1; i >= 0; i--) {'#10
  +'                    let messageObj = messages[i];'#10'                    i'
  +'f (n > 0) {'#10'                        if (!messageObj.isSentByMe) {'#10' '
  +'                           let message = WAPI.processMessageObj(messageObj,'
  +' includeMe, includeNotifications);'#10'                            messageG'
  +'roup.messages.unshift(message);'#10'                            n -= 1;'#10
  +'                        }'#10'                    } else if (n === -1) { //'
  +' chat was marked as unread so will fetch last message as unread'#10'       '
  +'                 if (!messageObj.isSentByMe) {'#10'                        '
  +'    let message = WAPI.processMessageObj(messageObj, includeMe, includeNoti'
  +'fications);'#10'                            messageGroup.messages.unshift(m'
  +'essage);'#10'                            break;'#10'                       '
  +' }'#10'                    } else { // unreadCount = 0'#10'                '
  +'        break;'#10'                    }'#10'                }'#10'        '
  +'        if (messageGroup.messages.length > 0) {'#10'                    mes'
  +'sageGroupObj.unreadCount = 0; // reset unread counter'#10'                 '
  +'   output.push(messageGroup);'#10'                }'#10'            }'#10' '
  +'       }'#10'    }'#10'    if (done !== undefined) {'#10'        done(outpu'
  +'t);'#10#10'    }'#10#9'contactID = chats.id;'#10'    SetConsoleMessage("get'
  +'UnreadMessages", JSON.stringify(output));'#10'    return output;'#10'};'#10
  +#10'window.WAPI.getGroupOwnerID = async function(id, done) {'#10'    const o'
  +'utput = (await WAPI.getGroupMetadata(id)).owner.id;'#10'    if (done !== un'
  +'defined) {'#10'        done(output);'#10'    }'#10#10'    SetConsoleMessage'
  +'("getGroupOwnerID", JSON.stringify(output));'#10#10'    return output;'#10
  +#10'};'#10#10'window.WAPI.getCommonGroups = async function(id, done) {'#10' '
  +'   let output = [];'#10#10'    groups = window.WAPI.getAllGroups();'#10#10
  +'    for (let idx in groups) {'#10'        try {'#10'            participant'
  +'s = await window.WAPI.getGroupParticipantIDs(groups[idx].id);'#10'         '
  +'   if (participants.filter((participant) => participant == id).length) {'#10
  +'                output.push(groups[idx]);'#10'            }'#10'        } c'
  +'atch (err) {'#10'            console.log("Error in group:");'#10'          '
  +'  console.log(groups[idx]);'#10'            console.log(err);'#10'        }'
  +#10'    }'#10#10'    if (done !== undefined) {'#10'        done(output);'#10
  +'    }'#10'    return output;'#10'};'#10#10'window.WAPI.getProfilePicSmallFr'
  +'omId = function(id, done) {'#10'    window.Store.ProfilePicThumb.find(id).t'
  +'hen(function(d) {'#10'        if (d.img !== undefined) {'#10'            wi'
  +'ndow.WAPI.downloadFileWithCredentials(d.img, done);'#10'        } else {'#10
  +'            done(false);'#10'        }'#10'    }, function(e) {'#10'       '
  +' done(false);'#10'    })'#10'};'#10#10'window.WAPI.getProfilePicFromId = fu'
  +'nction(id, done) {'#10'    window.Store.ProfilePicThumb.find(id).then(funct'
  +'ion(d) {'#10'        if (d.imgFull !== undefined) {'#10'            window.'
  +'WAPI.downloadFileWithCredentials(d.imgFull, done);'#10'        } else {'#10
  +'            done(false);'#10'        }'#10'    }, function(e) {'#10'       '
  +' done(false);'#10'    })'#10'};'#10#10'window.WAPI.downloadFileWithCredenti'
  +'als = function(url, done) {'#10'    let xhr = new XMLHttpRequest();'#10#10
  +'    xhr.onload = function() {'#10'        if (xhr.readyState == 4) {'#10'  '
  +'          if (xhr.status == 200) {'#10'                let reader = new Fil'
  +'eReader();'#10'                reader.readAsDataURL(xhr.response);'#10'    '
  +'            reader.onload = function(e) {'#10'                    done(read'
  +'er.result.substr(reader.result.indexOf('','') + 1))'#10'                };'
  +#10'            } else {'#10'                console.error(xhr.statusText);'
  +#10'            }'#10'        } else {'#10'            console.log(err);'#10
  +'            done(false);'#10'        }'#10'    };'#10#10'    xhr.open("GET"'
  ,', url, true);'#10'    xhr.withCredentials = true;'#10'    xhr.responseType '
  +'= ''blob'';'#10'    xhr.send(null);'#10'};'#10#10'window.WAPI.downloadFile '
  +'= function(url, done) {'#10'    let xhr = new XMLHttpRequest();'#10#10'    '
  +'xhr.onload = function() {'#10'        if (xhr.readyState == 4) {'#10'      '
  +'      if (xhr.status == 200) {'#10'                let reader = new FileRea'
  +'der();'#10'                reader.readAsDataURL(xhr.response);'#10'        '
  +'        reader.onload = function(e) {'#10'                    done(reader.r'
  +'esult.substr(reader.result.indexOf('','') + 1))'#10'                };'#10
  +'            } else {'#10'                console.error(xhr.statusText);'#10
  +'            }'#10'        } else {'#10'            console.log(err);'#10'  '
  +'          done(false);'#10'        }'#10'    };'#10#10'    xhr.open("GET", '
  +'url, true);'#10'    xhr.responseType = ''blob'';'#10'    xhr.send(null);'#10
  +'};'#10#10'window.WAPI.getBatteryLevel = function(done) {'#10'    if (window'
  +'.Store.Conn.plugged) {'#10'        if (done !== undefined) {'#10'          '
  +'  done(100);'#10'        }'#10'        output = 100;'#10'        return Set'
  +'ConsoleMessage("getBatteryLevel", JSON.stringify(output));'#10'    }'#10'  '
  +'  output = window.Store.Conn.battery;'#10'    if (done !== undefined) {'#10
  +'        done(output);'#10'    }'#10'    SetConsoleMessage("getBatteryLevel"'
  +', JSON.stringify(output));'#10'    return output;'#10'};'#10#10'window.WAPI'
  +'.deleteConversation = async function (chatId) {'#10'    let userId = new wi'
  +'ndow.Store.UserConstructor(chatId, { intentionallyUsePrivateConstructor: tr'
  +'ue });'#10'    let conversation = WAPI.getChat(userId);'#10'    if (!conver'
  +'sation) {'#10'        return false;'#10'    }'#10'    return await window.S'
  +'tore.sendDelete(conversation, false).then(() => {'#10'        return true;'
  +#10'    }).catch(() => {'#10'        return false;'#10'    });'#10'};'#10#10
  +'window.WAPI.deleteMessage = function(chatId, messageArray, revoke = false, '
  +'done) {'#10'    let userId = new window.Store.UserConstructor(chatId, {'#10
  +'        intentionallyUsePrivateConstructor: true'#10'    });'#10'    let co'
  +'nversation = WAPI.getChat(userId);'#10#10'    if (!conversation) {'#10'    '
  +'    if (done !== undefined) {'#10'            done(false);'#10'        }'#10
  +'        return false;'#10'    }'#10#10'    if (!Array.isArray(messageArray)'
  +') {'#10'        messageArray = [messageArray];'#10'    }'#10#10'    if (rev'
  +'oke) {'#10'        conversation.sendRevokeMsgs(messageArray, conversation);'
  +#10'    } else {'#10'        conversation.sendDeleteMsgs(messageArray, conve'
  +'rsation);'#10'    }'#10#10'    if (done !== undefined) {'#10'        done(t'
  +'rue);'#10'    }'#10#10'    return true;'#10'};'#10#10'window.WAPI.checkNumb'
  +'erStatus = function(id, done) {'#10'    window.Store.WapQuery.queryExist(id'
  +').then((result) => {'#10'        if (done !== undefined) {'#10'            '
  +'if (result.jid === undefined) throw 404;'#10'            done(window.WAPI._'
  +'serializeNumberStatusObj(result));'#10'        }'#10'    }).catch((e) => {'
  +#10'        if (done !== undefined) {'#10'            done(window.WAPI._seri'
  +'alizeNumberStatusObj({'#10'                status: e,'#10'                j'
  +'id: id'#10'            }));'#10'        }'#10'    });'#10#10'    return tru'
  +'e;'#10'};'#10#10'/**'#10' * New messages observable functions.'#10' */'#10
  +'window.WAPI._newMessagesQueue = [];'#10'window.WAPI._newMessagesBuffer = (s'
  +'essionStorage.getItem(''saved_msgs'') != null) ? JSON.parse(sessionStorage.'
  +'getItem(''saved_msgs'')) : [];'#10'window.WAPI._newMessagesDebouncer = null'
  +';'#10'window.WAPI._newMessagesCallbacks = [];'#10#10'window.Store.Msg.off('
  +'''add'');'#10'sessionStorage.removeItem(''saved_msgs'');'#10#10'window.WAPI'
  +'._newMessagesListener = window.Store.Msg.on(''add'', (newMessage) => {'#10
  +'    if (newMessage && newMessage.isNewMsg && !newMessage.isSentByMe) {'#10
  +'        let message = window.WAPI.processMessageObj(newMessage, false, fals'
  +'e);'#10'        if (message) {'#10'            window.WAPI._newMessagesQueu'
  +'e.push(message);'#10'            window.WAPI._newMessagesBuffer.push(messag'
  +'e);'#10'        }'#10#10'        // Starts debouncer time to don t call a c'
  +'allback for each message if more than one message arrives'#10'        // in'
  +' the same second'#10'        if (!window.WAPI._newMessagesDebouncer && wind'
  +'ow.WAPI._newMessagesQueue.length > 0) {'#10'            window.WAPI._newMes'
  +'sagesDebouncer = setTimeout(() => {'#10'                let queuedMessages '
  +'= window.WAPI._newMessagesQueue;'#10#10'                window.WAPI._newMes'
  +'sagesDebouncer = null;'#10'                window.WAPI._newMessagesQueue = '
  +'[];'#10#10'                let removeCallbacks = [];'#10#10'               '
  +' window.WAPI._newMessagesCallbacks.forEach(function(callbackObj) {'#10'    '
  +'                if (callbackObj.callback !== undefined) {'#10'             '
  ,'           callbackObj.callback(queuedMessages);'#10'                    }'
  +#10'                    if (callbackObj.rmAfterUse === true) {'#10'         '
  +'               removeCallbacks.push(callbackObj);'#10'                    }'
  +#10'                });'#10#10'                // Remove removable callbacks'
  +'.'#10'                removeCallbacks.forEach(function(rmCallbackObj) {'#10
  +'                    let callbackIndex = window.WAPI._newMessagesCallbacks.i'
  +'ndexOf(rmCallbackObj);'#10'                    window.WAPI._newMessagesCall'
  +'backs.splice(callbackIndex, 1);'#10'                });'#10'            }, '
  +'1000);'#10'        }'#10'    }'#10'});'#10#10'window.WAPI._unloadInform = ('
  +'event) => {'#10'    // Save in the buffer the ungot unreaded messages'#10' '
  +'   window.WAPI._newMessagesBuffer.forEach((message) => {'#10'        Object'
  +'.keys(message).forEach(key => message[key] === undefined ? delete message[k'
  +'ey] : '''');'#10'    });'#10'    sessionStorage.setItem("saved_msgs", JSON.'
  +'stringify(window.WAPI._newMessagesBuffer));'#10#10'    // Inform callbacks '
  +'that the page will be reloaded.'#10'    window.WAPI._newMessagesCallbacks.f'
  +'orEach(function(callbackObj) {'#10'        if (callbackObj.callback !== und'
  +'efined) {'#10'            callbackObj.callback({'#10'                status'
  +': -1,'#10'                message: ''page will be reloaded, wait and regist'
  +'er callback again.'''#10'            });'#10'        }'#10'    });'#10'};'
  +#10#10'window.addEventListener("unload", window.WAPI._unloadInform, false);'
  +#10'window.addEventListener("beforeunload", window.WAPI._unloadInform, false'
  +');'#10'window.addEventListener("pageunload", window.WAPI._unloadInform, fal'
  +'se);'#10#10'/**'#10' * Registers a callback to be called when a new message'
  +' arrives the WAPI.'#10' * @param rmCallbackAfterUse - Boolean - Specify if '
  +'the callback need to be executed only once'#10' * @param done - function - '
  +'Callback function to be called when a new message arrives.'#10' * @returns '
  +'{boolean}'#10' */'#10'window.WAPI.waitNewMessages = function(rmCallbackAfte'
  +'rUse = true, done) {'#10'    window.WAPI._newMessagesCallbacks.push({'#10' '
  +'       callback: done,'#10'        rmAfterUse: rmCallbackAfterUse'#10'    }'
  +');'#10'    return true;'#10'};'#10#10'/**'#10' * Reads buffered new message'
  +'s.'#10' * @param done - function - Callback function to be called contained'
  +' the buffered messages.'#10' * @returns {Array}'#10' */'#10'window.WAPI.get'
  +'BufferedNewMessages = function(done) {'#10'    let bufferedMessages = windo'
  +'w.WAPI._newMessagesBuffer;'#10'    window.WAPI._newMessagesBuffer = [];'#10
  +'    if (done !== undefined) {'#10'        done(bufferedMessages);'#10'    }'
  +#10'    return bufferedMessages;'#10'};'#10'/** End new messages observable '
  +'functions **/'#10#10'window.WAPI.sendImage = function(imgBase64, chatid, fi'
  +'lename, caption, done) {'#10'    //var idUser = new window.Store.UserConstr'
  +'uctor(chatid);'#10'    var idUser = new window.Store.UserConstructor(chatid'
  +', {'#10'        intentionallyUsePrivateConstructor: true'#10'    });'#10#9
  +#10'    // create new chat'#10'    return Store.Chat.find(idUser).then((chat'
  +') => {'#10'        var mediaBlob = window.WAPI.base64ImageToFile(imgBase64,'
  +' filename);'#10'        var mc = new Store.MediaCollection(chat);'#10'     '
  +'   '#10#9#9'//Deprecated  - Mike Lustosa 19/02/2020'#10#9#9'/*mc.processFil'
  +'es([mediaBlob], chat, 1).then(() => {'#10'            var media = mc.models'
  +'[0];'#10'            media.sendToChat(chat, {'#10'                caption: '
  +'caption'#10'            });'#10'            if (done !== undefined) done(tr'
  +'ue);'#10'        });*/'#10#10#9#9'//New - Mike Lustosa 19/02/2020'#10#9#9'm'
  +'c.processAttachments([{file: mediaBlob}, 1], chat, 1).then(() => {'#10#9#9#9
  +'let media = mc.models[0];'#10#9#9#9'media.sendToChat(chat, {caption:caption'
  +'});'#10#9#9#9'if (done !== undefined) done(true);'#10#9#9'});'#10'    });'
  +#10'}'#10#10'//Fun'#195#131#198#146#195#134#226#128#153#195#131#226#128#160
  +#195#162#226#130#172#226#132#162#195#131#198#146#195#162#226#130#172#194#160
  +#195#131#194#162#195#162#226#128#154#194#172#195#162#226#128#158#194#162#195
  +#131#198#146#195#134#226#128#153#195#131#194#162#195#162#226#128#154#194#172
  +#195#130#194#160#195#131#198#146#195#130#194#162#195#131#194#162#195#162#226
  +#130#172#197#161#195#130#194#172#195#131#194#162#195#162#226#130#172#197#190
  +#195#130#194#162#195#131#198#146#195#134#226#128#153#195#131#226#128#160#195
  +#162#226#130#172#226#132#162#195#131#198#146#195#130#194#162#195#131#194#162
  +#195#162#226#130#172#197#161#195#130#194#172#195#131#226#128#154#195#130#194
  +#160#195#131#198#146#195#134#226#128#153#195#131#226#128#154#195#130#194#162
  +#195#131#198#146#195#130#194#162#195#131#194#162#195#162#226#128#154#194#172
  +#195#133#194#161#195#131#226#128#154#195#130#194#172#195#131#198#146#195#130
  +#194#162#195#131#194#162#195#162#226#128#154#194#172#195#133#194#190#195#131
  ,#226#128#154#195#130#194#162#195#131#198#146#195#134#226#128#153#195#131#226
  +#128#160#195#162#226#130#172#226#132#162#195#131#198#146#195#162#226#130#172
  +#194#160#195#131#194#162#195#162#226#128#154#194#172#195#162#226#128#158#194
  +#162#195#131#198#146#195#134#226#128#153#195#131#226#128#154#195#130#194#162
  +#195#131#198#146#195#130#194#162#195#131#194#162#195#162#226#128#154#194#172
  +#195#133#194#161#195#131#226#128#154#195#130#194#172' '#195#131#198#146#195
  +#134#226#128#153#195#131#226#128#160#195#162#226#130#172#226#132#162#195#131
  +#198#146#195#162#226#130#172#197#161#195#131#226#128#154#195#130#194#162#195
  +#131#198#146#195#134#226#128#153#195#131#226#128#154#195#130#194#162#195#131
  +#198#146#195#130#194#162#195#131#194#162#195#162#226#130#172#197#161#195#130
  +#194#172#195#131#226#128#166#195#130#194#161#195#131#198#146#195#162#226#130
  +#172#197#161#195#131#226#128#154#195#130#194#172#195#131#198#146#195#134#226
  +#128#153#195#131#226#128#154#195#130#194#162#195#131#198#146#195#130#194#162
  +#195#131#194#162#195#162#226#130#172#197#161#195#130#194#172#195#131#226#128
  +#166#195#130#194#190#195#131#198#146#195#162#226#130#172#197#161#195#131#226
  +#128#154#195#130#194#162#195#131#198#146#195#134#226#128#153#195#131#226#128
  +#160#195#162#226#130#172#226#132#162#195#131#198#146#195#162#226#130#172#194
  +#160#195#131#194#162#195#162#226#128#154#194#172#195#162#226#128#158#194#162
  +#195#131#198#146#195#134#226#128#153#195#131#194#162#195#162#226#128#154#194
  +#172#195#130#194#160#195#131#198#146#195#130#194#162#195#131#194#162#195#162
  +#226#130#172#197#161#195#130#194#172#195#131#194#162#195#162#226#130#172#197
  +#190#195#130#194#162#195#131#198#146#195#134#226#128#153#195#131#226#128#160
  +#195#162#226#130#172#226#132#162#195#131#198#146#195#162#226#130#172#197#161
  +#195#131#226#128#154#195#130#194#162#195#131#198#146#195#134#226#128#153#195
  +#131#226#128#154#195#130#194#162#195#131#198#146#195#130#194#162#195#131#194
  +#162#195#162#226#130#172#197#161#195#130#194#172#195#131#226#128#166#195#130
  +#194#161#195#131#198#146#195#162#226#130#172#197#161#195#131#226#128#154#195
  +#130#194#172' '#195#131#198#146#195#134#226#128#153#195#131#226#128#160#195
  +#162#226#130#172#226#132#162#195#131#198#146#195#162#226#130#172#194#160#195
  +#131#194#162#195#162#226#128#154#194#172#195#162#226#128#158#194#162#195#131
  +#198#146#195#134#226#128#153#195#131#194#162#195#162#226#128#154#194#172#195
  +#133#194#161#195#131#198#146#195#162#226#130#172#197#161#195#131#226#128#154
  +#195#130#194#162#195#131#198#146#195#134#226#128#153#195#131#226#128#160#195
  +#162#226#130#172#226#132#162#195#131#198#146#195#162#226#130#172#197#161#195
  +#131#226#128#154#195#130#194#162#195#131#198#146#195#134#226#128#153#195#131
  +#226#128#154#195#130#194#162#195#131#198#146#195#130#194#162#195#131#194#162
  +#195#162#226#128#154#194#172#195#133#194#161#195#131#226#128#154#195#130#194
  +#172#195#131#198#146#195#162#226#130#172#194#166#195#131#226#128#154#195#130
  +#194#161#195#131#198#146#195#134#226#128#153#195#131#194#162#195#162#226#128
  +#154#194#172#195#133#194#161#195#131#198#146#195#162#226#130#172#197#161#195
  +#131#226#128#154#195#130#194#172#195#131#198#146#195#134#226#128#153#195#131
  +#226#128#160#195#162#226#130#172#226#132#162#195#131#198#146#195#162#226#130
  +#172#197#161#195#131#226#128#154#195#130#194#162#195#131#198#146#195#134#226
  +#128#153#195#131#226#128#154#195#130#194#162#195#131#198#146#195#130#194#162
  +#195#131#194#162#195#162#226#128#154#194#172#195#133#194#161#195#131#226#128
  +#154#195#130#194#172#195#131#198#146#195#162#226#130#172#194#166#195#131#226
  +#128#154#195#130#194#190#195#131#198#146#195#134#226#128#153#195#131#194#162
  +#195#162#226#128#154#194#172#195#133#194#161#195#131#198#146#195#162#226#130
  +#172#197#161#195#131#226#128#154#195#130#194#162#195#131#198#146#195#134#226
  +#128#153#195#131#226#128#160#195#162#226#130#172#226#132#162#195#131#198#146
  +#195#162#226#130#172#194#160#195#131#194#162#195#162#226#128#154#194#172#195
  +#162#226#128#158#194#162#195#131#198#146#195#134#226#128#153#195#131#194#162
  +#195#162#226#128#154#194#172#195#130#194#160#195#131#198#146#195#130#194#162
  +#195#131#194#162#195#162#226#130#172#197#161#195#130#194#172#195#131#194#162
  +#195#162#226#130#172#197#190#195#130#194#162#195#131#198#146#195#134#226#128
  +#153#195#131#226#128#160#195#162#226#130#172#226#132#162#195#131#198#146#195
  +#130#194#162#195#131#194#162#195#162#226#130#172#197#161#195#130#194#172#195
  +#131#226#128#154#195#130#194#160#195#131#198#146#195#134#226#128#153#195#131
  +#226#128#154#195#130#194#162#195#131#198#146#195#130#194#162#195#131#194#162
  +#195#162#226#128#154#194#172#195#133#194#161#195#131#226#128#154#195#130#194
  +#172#195#131#198#146#195#130#194#162#195#131#194#162#195#162#226#128#154#194
  +#172#195#133#194#190#195#131#226#128#154#195#130#194#162#195#131#198#146#195
  +#134#226#128#153#195#131#226#128#160#195#162#226#130#172#226#132#162#195#131
  +#198#146#195#162#226#130#172#194#160#195#131#194#162#195#162#226#128#154#194
  ,#172#195#162#226#128#158#194#162#195#131#198#146#195#134#226#128#153#195#131
  +#194#162#195#162#226#128#154#194#172#195#133#194#161#195#131#198#146#195#162
  +#226#130#172#197#161#195#131#226#128#154#195#130#194#162#195#131#198#146#195
  +#134#226#128#153#195#131#226#128#160#195#162#226#130#172#226#132#162#195#131
  +#198#146#195#162#226#130#172#197#161#195#131#226#128#154#195#130#194#162#195
  +#131#198#146#195#134#226#128#153#195#131#226#128#154#195#130#194#162#195#131
  +#198#146#195#130#194#162#195#131#194#162#195#162#226#128#154#194#172#195#133
  +#194#161#195#131#226#128#154#195#130#194#172#195#131#198#146#195#162#226#130
  +#172#194#166#195#131#226#128#154#195#130#194#161#195#131#198#146#195#134#226
  +#128#153#195#131#194#162#195#162#226#128#154#194#172#195#133#194#161#195#131
  +#198#146#195#162#226#130#172#197#161#195#131#226#128#154#195#130#194#172#195
  +#131#198#146#195#134#226#128#153#195#131#226#128#160#195#162#226#130#172#226
  +#132#162#195#131#198#146#195#130#194#162#195#131#194#162#195#162#226#130#172
  +#197#161#195#130#194#172#195#131#226#128#154#195#130#194#166#195#131#198#146
  +#195#134#226#128#153#195#131#194#162#195#162#226#128#154#194#172#195#133#194
  +#161#195#131#198#146#195#162#226#130#172#197#161#195#131#226#128#154#195#130
  +#194#161#195#131#198#146#195#134#226#128#153#195#131#226#128#160#195#162#226
  +#130#172#226#132#162#195#131#198#146#195#162#226#130#172#194#160#195#131#194
  +#162#195#162#226#128#154#194#172#195#162#226#128#158#194#162#195#131#198#146
  +#195#134#226#128#153#195#131#194#162#195#162#226#128#154#194#172#195#130#194
  +#160#195#131#198#146#195#130#194#162#195#131#194#162#195#162#226#130#172#197
  +#161#195#130#194#172#195#131#194#162#195#162#226#130#172#197#190#195#130#194
  +#162#195#131#198#146#195#134#226#128#153#195#131#226#128#160#195#162#226#130
  +#172#226#132#162#195#131#198#146#195#162#226#130#172#197#161#195#131#226#128
  +#154#195#130#194#162#195#131#198#146#195#134#226#128#153#195#131#226#128#154
  +#195#130#194#162#195#131#198#146#195#130#194#162#195#131#194#162#195#162#226
  +#130#172#197#161#195#130#194#172#195#131#226#128#166#195#130#194#161#195#131
  +#198#146#195#162#226#130#172#197#161#195#131#226#128#154#195#130#194#172#195
  +#131#198#146#195#134#226#128#153#195#131#194#162#195#162#226#128#154#194#172
  +#195#130#194#166#195#131#198#146#195#162#226#130#172#197#161#195#131#226#128
  +#154#195#130#194#161#195#131#198#146#195#134#226#128#153#195#131#226#128#160
  +#195#162#226#130#172#226#132#162#195#131#198#146#195#162#226#130#172#194#160
  +#195#131#194#162#195#162#226#128#154#194#172#195#162#226#128#158#194#162#195
  +#131#198#146#195#134#226#128#153#195#131#226#128#154#195#130#194#162#195#131
  +#198#146#195#130#194#162#195#131#194#162#195#162#226#128#154#194#172#195#133
  +#194#161#195#131#226#128#154#195#130#194#172#195#131#198#146#195#162#226#130
  +#172#194#166#195#131#226#128#154#195#130#194#161#195#131#198#146#195#134#226
  +#128#153#195#131#226#128#160#195#162#226#130#172#226#132#162#195#131#198#146
  +#195#130#194#162#195#131#194#162#195#162#226#130#172#197#161#195#130#194#172
  +#195#131#226#128#166#195#130#194#161#195#131#198#146#195#134#226#128#153#195
  +#131#194#162#195#162#226#128#154#194#172#195#133#194#161#195#131#198#146#195
  +#162#226#130#172#197#161#195#131#226#128#154#195#130#194#167#195#131#198#146
  +#195#134#226#128#153#195#131#226#128#160#195#162#226#130#172#226#132#162#195
  +#131#198#146#195#162#226#130#172#194#160#195#131#194#162#195#162#226#128#154
  +#194#172#195#162#226#128#158#194#162#195#131#198#146#195#134#226#128#153#195
  +#131#194#162#195#162#226#128#154#194#172#195#130#194#160#195#131#198#146#195
  +#130#194#162#195#131#194#162#195#162#226#130#172#197#161#195#130#194#172#195
  +#131#194#162#195#162#226#130#172#197#190#195#130#194#162#195#131#198#146#195
  +#134#226#128#153#195#131#226#128#160#195#162#226#130#172#226#132#162#195#131
  +#198#146#195#130#194#162#195#131#194#162#195#162#226#130#172#197#161#195#130
  +#194#172#195#131#226#128#154#195#130#194#160#195#131#198#146#195#134#226#128
  +#153#195#131#226#128#154#195#130#194#162#195#131#198#146#195#130#194#162#195
  +#131#194#162#195#162#226#128#154#194#172#195#133#194#161#195#131#226#128#154
  +#195#130#194#172#195#131#198#146#195#130#194#162#195#131#194#162#195#162#226
  +#128#154#194#172#195#133#194#190#195#131#226#128#154#195#130#194#162#195#131
  +#198#146#195#134#226#128#153#195#131#226#128#160#195#162#226#130#172#226#132
  +#162#195#131#198#146#195#162#226#130#172#194#160#195#131#194#162#195#162#226
  +#128#154#194#172#195#162#226#128#158#194#162#195#131#198#146#195#134#226#128
  +#153#195#131#226#128#154#195#130#194#162#195#131#198#146#195#130#194#162#195
  +#131#194#162#195#162#226#128#154#194#172#195#133#194#161#195#131#226#128#154
  +#195#130#194#172' '#195#131#198#146#195#134#226#128#153#195#131#226#128#160
  +#195#162#226#130#172#226#132#162#195#131#198#146#195#162#226#130#172#197#161
  +#195#131#226#128#154#195#130#194#162#195#131#198#146#195#134#226#128#153#195
  +#131#226#128#154#195#130#194#162#195#131#198#146#195#130#194#162#195#131#194
  ,#162#195#162#226#130#172#197#161#195#130#194#172#195#131#226#128#166#195#130
  +#194#161#195#131#198#146#195#162#226#130#172#197#161#195#131#226#128#154#195
  +#130#194#172#195#131#198#146#195#134#226#128#153#195#131#226#128#154#195#130
  +#194#162#195#131#198#146#195#130#194#162#195#131#194#162#195#162#226#130#172
  +#197#161#195#130#194#172#195#131#226#128#166#195#130#194#190#195#131#198#146
  +#195#162#226#130#172#197#161#195#131#226#128#154#195#130#194#162#195#131#198
  +#146#195#134#226#128#153#195#131#226#128#160#195#162#226#130#172#226#132#162
  +#195#131#198#146#195#162#226#130#172#194#160#195#131#194#162#195#162#226#128
  +#154#194#172#195#162#226#128#158#194#162#195#131#198#146#195#134#226#128#153
  +#195#131#194#162#195#162#226#128#154#194#172#195#130#194#160#195#131#198#146
  +#195#130#194#162#195#131#194#162#195#162#226#130#172#197#161#195#130#194#172
  +#195#131#194#162#195#162#226#130#172#197#190#195#130#194#162#195#131#198#146
  +#195#134#226#128#153#195#131#226#128#160#195#162#226#130#172#226#132#162#195
  +#131#198#146#195#162#226#130#172#197#161#195#131#226#128#154#195#130#194#162
  +#195#131#198#146#195#134#226#128#153#195#131#226#128#154#195#130#194#162#195
  +#131#198#146#195#130#194#162#195#131#194#162#195#162#226#130#172#197#161#195
  +#130#194#172#195#131#226#128#166#195#130#194#161#195#131#198#146#195#162#226
  +#130#172#197#161#195#131#226#128#154#195#130#194#172' '#195#131#198#146#195
  +#134#226#128#153#195#131#226#128#160#195#162#226#130#172#226#132#162#195#131
  +#198#146#195#162#226#130#172#194#160#195#131#194#162#195#162#226#128#154#194
  +#172#195#162#226#128#158#194#162#195#131#198#146#195#134#226#128#153#195#131
  +#194#162#195#162#226#128#154#194#172#195#133#194#161#195#131#198#146#195#162
  +#226#130#172#197#161#195#131#226#128#154#195#130#194#162#195#131#198#146#195
  +#134#226#128#153#195#131#226#128#160#195#162#226#130#172#226#132#162#195#131
  +#198#146#195#162#226#130#172#197#161#195#131#226#128#154#195#130#194#162#195
  +#131#198#146#195#134#226#128#153#195#131#226#128#154#195#130#194#162#195#131
  +#198#146#195#130#194#162#195#131#194#162#195#162#226#128#154#194#172#195#133
  +#194#161#195#131#226#128#154#195#130#194#172#195#131#198#146#195#162#226#130
  +#172#194#166#195#131#226#128#154#195#130#194#161#195#131#198#146#195#134#226
  +#128#153#195#131#194#162#195#162#226#128#154#194#172#195#133#194#161#195#131
  +#198#146#195#162#226#130#172#197#161#195#131#226#128#154#195#130#194#172#195
  +#131#198#146#195#134#226#128#153#195#131#226#128#160#195#162#226#130#172#226
  +#132#162#195#131#198#146#195#162#226#130#172#197#161#195#131#226#128#154#195
  +#130#194#162#195#131#198#146#195#134#226#128#153#195#131#226#128#154#195#130
  +#194#162#195#131#198#146#195#130#194#162#195#131#194#162#195#162#226#128#154
  +#194#172#195#133#194#161#195#131#226#128#154#195#130#194#172#195#131#198#146
  +#195#162#226#130#172#194#166#195#131#226#128#154#195#130#194#190#195#131#198
  +#146#195#134#226#128#153#195#131#194#162#195#162#226#128#154#194#172#195#133
  +#194#161#195#131#198#146#195#162#226#130#172#197#161#195#131#226#128#154#195
  +#130#194#162#195#131#198#146#195#134#226#128#153#195#131#226#128#160#195#162
  +#226#130#172#226#132#162#195#131#198#146#195#162#226#130#172#194#160#195#131
  +#194#162#195#162#226#128#154#194#172#195#162#226#128#158#194#162#195#131#198
  +#146#195#134#226#128#153#195#131#194#162#195#162#226#128#154#194#172#195#130
  +#194#160#195#131#198#146#195#130#194#162#195#131#194#162#195#162#226#130#172
  +#197#161#195#130#194#172#195#131#194#162#195#162#226#130#172#197#190#195#130
  +#194#162#195#131#198#146#195#134#226#128#153#195#131#226#128#160#195#162#226
  +#130#172#226#132#162#195#131#198#146#195#130#194#162#195#131#194#162#195#162
  +#226#130#172#197#161#195#130#194#172#195#131#226#128#154#195#130#194#160#195
  +#131#198#146#195#134#226#128#153#195#131#226#128#154#195#130#194#162#195#131
  +#198#146#195#130#194#162#195#131#194#162#195#162#226#128#154#194#172#195#133
  +#194#161#195#131#226#128#154#195#130#194#172#195#131#198#146#195#130#194#162
  +#195#131#194#162#195#162#226#128#154#194#172#195#133#194#190#195#131#226#128
  +#154#195#130#194#162#195#131#198#146#195#134#226#128#153#195#131#226#128#160
  +#195#162#226#130#172#226#132#162#195#131#198#146#195#162#226#130#172#194#160
  +#195#131#194#162#195#162#226#128#154#194#172#195#162#226#128#158#194#162#195
  +#131#198#146#195#134#226#128#153#195#131#194#162#195#162#226#128#154#194#172
  +#195#133#194#161#195#131#198#146#195#162#226#130#172#197#161#195#131#226#128
  +#154#195#130#194#162#195#131#198#146#195#134#226#128#153#195#131#226#128#160
  +#195#162#226#130#172#226#132#162#195#131#198#146#195#162#226#130#172#197#161
  +#195#131#226#128#154#195#130#194#162#195#131#198#146#195#134#226#128#153#195
  +#131#226#128#154#195#130#194#162#195#131#198#146#195#130#194#162#195#131#194
  +#162#195#162#226#128#154#194#172#195#133#194#161#195#131#226#128#154#195#130
  +#194#172#195#131#198#146#195#162#226#130#172#194#166#195#131#226#128#154#195
  +#130#194#161#195#131#198#146#195#134#226#128#153#195#131#194#162#195#162#226
  ,#128#154#194#172#195#133#194#161#195#131#198#146#195#162#226#130#172#197#161
  +#195#131#226#128#154#195#130#194#172#195#131#198#146#195#134#226#128#153#195
  +#131#226#128#160#195#162#226#130#172#226#132#162#195#131#198#146#195#130#194
  +#162#195#131#194#162#195#162#226#130#172#197#161#195#130#194#172#195#131#226
  +#128#154#195#130#194#166#195#131#198#146#195#134#226#128#153#195#131#194#162
  +#195#162#226#128#154#194#172#195#133#194#161#195#131#198#146#195#162#226#130
  +#172#197#161#195#131#226#128#154#195#130#194#161#195#131#198#146#195#134#226
  +#128#153#195#131#226#128#160#195#162#226#130#172#226#132#162#195#131#198#146
  +#195#162#226#130#172#194#160#195#131#194#162#195#162#226#128#154#194#172#195
  +#162#226#128#158#194#162#195#131#198#146#195#134#226#128#153#195#131#194#162
  +#195#162#226#128#154#194#172#195#130#194#160#195#131#198#146#195#130#194#162
  +#195#131#194#162#195#162#226#130#172#197#161#195#130#194#172#195#131#194#162
  +#195#162#226#130#172#197#190#195#130#194#162#195#131#198#146#195#134#226#128
  +#153#195#131#226#128#160#195#162#226#130#172#226#132#162#195#131#198#146#195
  +#162#226#130#172#197#161#195#131#226#128#154#195#130#194#162#195#131#198#146
  +#195#134#226#128#153#195#131#226#128#154#195#130#194#162#195#131#198#146#195
  +#130#194#162#195#131#194#162#195#162#226#130#172#197#161#195#130#194#172#195
  +#131#226#128#166#195#130#194#161#195#131#198#146#195#162#226#130#172#197#161
  +#195#131#226#128#154#195#130#194#172#195#131#198#146#195#134#226#128#153#195
  +#131#194#162#195#162#226#128#154#194#172#195#130#194#166#195#131#198#146#195
  +#162#226#130#172#197#161#195#131#226#128#154#195#130#194#161#195#131#198#146
  +#195#134#226#128#153#195#131#226#128#160#195#162#226#130#172#226#132#162#195
  +#131#198#146#195#162#226#130#172#194#160#195#131#194#162#195#162#226#128#154
  +#194#172#195#162#226#128#158#194#162#195#131#198#146#195#134#226#128#153#195
  +#131#226#128#154#195#130#194#162#195#131#198#146#195#130#194#162#195#131#194
  +#162#195#162#226#128#154#194#172#195#133#194#161#195#131#226#128#154#195#130
  +#194#172#195#131#198#146#195#162#226#130#172#194#166#195#131#226#128#154#195
  +#130#194#161#195#131#198#146#195#134#226#128#153#195#131#226#128#160#195#162
  +#226#130#172#226#132#162#195#131#198#146#195#130#194#162#195#131#194#162#195
  +#162#226#130#172#197#161#195#130#194#172#195#131#226#128#166#195#130#194#161
  +#195#131#198#146#195#134#226#128#153#195#131#194#162#195#162#226#128#154#194
  +#172#195#133#194#161#195#131#198#146#195#162#226#130#172#197#161#195#131#226
  +#128#154#195#130#194#163'o criada em 03/12/2019 para enviar msg para contato'
  +'s e grupos - Mike'#10'window.WAPI.sendMessageToID = function(chatid, msgTex'
  +'t) {'#10'    var idUser = new window.Store.UserConstructor(chatid, {'#10'  '
  +'      intentionallyUsePrivateConstructor: true'#10'    });'#10'    return S'
  +'tore.Chat.find(idUser).then((chatid) => {'#10'        var mc = new Store.Se'
  +'ndTextMsgToChat(chatid, msgText);'#10'        return true;'#10'    });'#10
  +'}'#10#10'window.WAPI.base64ImageToFile = function(b64Data, filename) {'#10
  +'    var arr = b64Data.split('','');'#10'    var mime = arr[0].match(/:(.*?)'
  +';/)[1];'#10'    var bstr = atob(arr[1]);'#10'    var n = bstr.length;'#10' '
  +'   var u8arr = new Uint8Array(n);'#10#10'    while (n--) {'#10'        u8ar'
  +'r[n] = bstr.charCodeAt(n);'#10'    }'#10#10'    return new File([u8arr], fi'
  +'lename, {'#10'        type: mime'#10'    });'#10'};'#10#10'/**'#10' * Send '
  +'contact card to a specific chat using the chat ids'#10' *'#10' * @param {st'
  +'ring} to ''000000000000@c.us'''#10' * @param {string|array} contact ''11111'
  +'1111111@c.us'' | [''222222222222@c.us'', ''333333333333@c.us, ... ''nnnnnnn'
  +'nnnnn@c.us'']'#10' */'#10'window.WAPI.sendContact = function(to, contact) {'
  +#10'    if (!Array.isArray(contact)) {'#10'        contact = [contact];'#10
  +'    }'#10'    contact = contact.map((c) => {'#10'        return WAPI.getCha'
  +'t(c).__x_contact;'#10'    });'#10#10'    if (contact.length > 1) {'#10'    '
  +'    window.WAPI.getChat(to).sendContactList(contact);'#10'    } else if (co'
  +'ntact.length === 1) {'#10'        window.WAPI.getChat(to).sendContact(conta'
  +'ct[0]);'#10'    }'#10'};'#10#10'/**'#10' * Create an chat ID based in a clo'
  +'ned one'#10' *'#10' * @param {string} chatId ''000000000000@c.us'''#10' */'
  +#10'window.WAPI.getNewMessageId = function(chatId) {'#10'    var newMsgId = '
  +'Store.Msg.models[0].__x_id.clone();'#10#10'    newMsgId.fromMe = true;'#10
  +'    newMsgId.id = WAPI.getNewId().toUpperCase();'#10'    newMsgId.remote = '
  +'chatId;'#10'    newMsgId._serialized = `${newMsgId.fromMe}_${newMsgId.remot'
  +'e}_${newMsgId.id}`'#10#10'    return newMsgId;'#10'};'#10#10'/**'#10' * Sen'
  +'d Customized VCard without the necessity of contact be a Whatsapp Contact'
  +#10' *'#10' * @param {string} chatId ''000000000000@c.us'''#10' * @param {ob'
  +'ject|array} vcard { displayName: ''Contact Name'', vcard: ''BEGIN:VCARD\nVE'
  +'RSION:3.0\nN:;Contact Name;;;\nEND:VCARD'' } | [{ displayName: ''Contact Na'
  ,'me 1'', vcard: ''BEGIN:VCARD\nVERSION:3.0\nN:;Contact Name 1;;;\nEND:VCARD'
  +''' }, { displayName: ''Contact Name 2'', vcard: ''BEGIN:VCARD\nVERSION:3.0\'
  +'nN:;Contact Name 2;;;\nEND:VCARD'' }]'#10' */'#10'window.WAPI.sendVCard = f'
  +'unction(chatId, vcard) {'#10'    var chat = Store.Chat.get(chatId);'#10'   '
  +' var tempMsg = Object.create(Store.Msg.models.filter(msg => msg.__x_isSentB'
  +'yMe)[0]);'#10'    var newId = window.WAPI.getNewMessageId(chatId);'#10#10' '
  +'   var extend = {'#10'        ack: 0,'#10'        id: newId,'#10'        lo'
  +'cal: !0,'#10'        self: "out",'#10'        t: parseInt(new Date().getTim'
  +'e() / 1000),'#10'        to: chatId,'#10'        isNewMsg: !0,'#10'    };'
  +#10#10'    if (Array.isArray(vcard)) {'#10'        Object.assign(extend, {'
  +#10'            type: "multi_vcard",'#10'            vcardList: vcard'#10'  '
  +'      });'#10#10'        delete extend.body;'#10'    } else {'#10'        O'
  +'bject.assign(extend, {'#10'            type: "vcard",'#10'            subty'
  +'pe: vcard.displayName,'#10'            body: vcard.vcard'#10'        });'#10
  +#10'        delete extend.vcardList;'#10'    }'#10#10'    Object.assign(temp'
  +'Msg, extend);'#10#10'    chat.addAndSendMsg(tempMsg);'#10'};'#10'/**'#10' *'
  +' Block contact'#10' * @param {string} id ''000000000000@c.us'''#10' * @para'
  +'m {*} done - function - Callback function to be called when a new message a'
  +'rrives.'#10' */'#10'window.WAPI.contactBlock = function(id, done) {'#10'   '
  +'     const contact = window.Store.Contact.get(id);'#10'        if (contact '
  +'!== undefined) {'#10'            contact.setBlock(!0);'#10'            done'
  +'(true);'#10'            return true;'#10'        }'#10'        done(false);'
  +#10'        return false;'#10'    }'#10'    /**'#10'     * unBlock contact'
  +#10'     * @param {string} id ''000000000000@c.us'''#10'     * @param {*} do'
  +'ne - function - Callback function to be called when a new message arrives.'
  +#10'     */'#10'window.WAPI.contactUnblock = function(id, done) {'#10'    co'
  +'nst contact = window.Store.Contact.get(id);'#10'    if (contact !== undefin'
  +'ed) {'#10'        contact.setBlock(!1);'#10'        done(true);'#10'       '
  +' return true;'#10'    }'#10'    done(false);'#10'    return false;'#10'}'#10
  +#10#10'/** Joins a group via the invite link, code, or message'#10' * @param'
  +' link This param is the string which includes the invite link or code. The '
  +'following work:'#10' * - Follow this link to join my WA group: https://chat'
  +'.whatsapp.com/DHTGJUfFJAV9MxOpZO1fBZ'#10' * - https://chat.whatsapp.com/DHT'
  +'GJUfFJAV9MxOpZO1fBZ'#10' * - DHTGJUfFJAV9MxOpZO1fBZ'#10' * @returns Promise'
  +'<string | boolean> Either false if it didn''t work, or the group id.'#10' *'
  +'/'#10'window.WAPI.joinGroupViaLink = async function(link){'#10'    let code'
  +' = link;'#10'    //is it a link? if not, assume it''s a code, otherwise, pr'
  +'ocess the link to get the code.'#10'    if(link.includes(''chat.whatsapp.co'
  +'m'')) {'#10'        if(!link.match(/chat.whatsapp.com\/([\w\d]*)/g).length)'
  +' return false;'#10'        code = link.match(/chat.whatsapp.com\/([\w\d]*)/'
  +'g)[0].replace(''chat.whatsapp.com\/'','''');'#10'    }'#10'    const group '
  +'= await Store.GroupInvite.joinGroupViaInvite(code);'#10'    if(!group.id) r'
  +'eturn false;'#10'    return group.id._serialized'#10'}'#10#10'/**'#10' * Ad'
  +'d participant to Group'#10' * @param {*} idGroup ''0000000000-00000000@g.us'
  +''''#10' * @param {*} idParticipant ''000000000000@c.us'''#10' */'#10'window'
  +'.WAPI.addParticipant = async function (idGroup, idParticipant) {'#10'    co'
  +'nst chat = Store.Chat.get(idGroup);'#10'    const add = Store.Contact.get(i'
  +'dParticipant);'#10'    await window.Store.Participants.addParticipants(chat'
  +', [add]);'#10'    return true;'#10'}'#10#10#10'/**'#10' * Remove participan'
  +'t of Group'#10' * @param {*} idGroup ''0000000000-00000000@g.us'''#10' * @p'
  +'aram {*} idParticipant ''000000000000@c.us'''#10' */'#10'window.WAPI.remove'
  +'Participant = async function (idGroup, idParticipant) {'#10'    const chat '
  +'= Store.Chat.get(idGroup);'#10'    const rm = chat.groupMetadata.participan'
  +'ts.get(idParticipant);'#10'    await window.Store.Participants.removePartic'
  +'ipants(chat, [rm]);'#10'    return true;'#10'}'#10#10'/**'#10' * Promote Pa'
  +'rticipant to Admin in Group'#10' * @param {*} idGroup ''0000000000-00000000'
  +'@g.us'''#10' * @param {*} idParticipant ''000000000000@c.us'''#10' */'#10'w'
  +'indow.WAPI.promoteParticipant = async function (idGroup, idParticipant) {'
  +#10'    const chat = Store.Chat.get(idGroup);'#10'    const promote = chat.g'
  +'roupMetadata.participants.get(idParticipant);'#10'    await window.Store.Pa'
  +'rticipants.promoteParticipants(chat, [promote]);'#10'    return true;'#10'}'
  +#10#10'/**'#10' * Demote Admin of Group'#10' * @param {*} idGroup ''00000000'
  +'00-00000000@g.us'''#10' * @param {*} idParticipant ''000000000000@c.us'''#10
  +' */'#10'window.WAPI.demoteParticipant = async function (idGroup, idParticip'
  ,'ant) {'#10'    await window.Store.WapQuery.demoteParticipants(idGroup, [idP'
  +'articipant])'#10'    const chat = Store.Chat.get(idGroup);'#10'    const de'
  +'mote = chat.groupMetadata.participants.get(idParticipant);'#10'    await wi'
  +'ndow.Store.Participants.demoteParticipants(chat, [demote])'#10'    return t'
  +'rue'#10'   '#10'}'#10#10'//Nova funcao alternativa para enviar mensagens(Na'
  +'o envia para grupos)'#10'//Criada em 27/11/2019 Mike'#10'window.WAPI.sendMe'
  +'ssageToID2 = function(id, msgText) {'#10'    try {'#10'        window.Store'
  +'.WapQuery.queryExist(id).then(function(e) {'#10'            if (e.status =='
  +'= 200) {'#10'                window.Store.Chat.find(e.jid).then((chat) => {'
  +#10'                    try {'#10'                        window.Store.SendT'
  +'extMsgToChat(chat, msgText);'#10'                        return true;'#10' '
  +'                   } catch (e) {'#10'                        return false;'
  +#10'                    }'#10'                });'#10'                return'
  +' true;'#10'            } else {'#10'                return false;'#10'     '
  +'       }'#10'        });'#10'    } catch (e) {'#10'        return false;'#10
  +'    }'#10'}'#10#10'//Validar numero whatsapp 12/02/2020'#10'window.WAPI.isV'
  +'alidNumber = async function (phoneId) {'#10'    isValid = window.Store.WapQ'
  +'uery.queryExist(phoneId).then(result => {'#10'        return result.jid !=='
  +' undefined;'#10'    }).catch((e) => {'#10'        return false;'#10'    });'
  +#10#10'    return isValid;'#10'};'#10#10'/** 28/04/2020 - Mike'#10' * Send l'
  +'ocation'#10' *'#10' * @param {string} chatId ''558199999999@c.us'''#10' * @'
  +'param {string} lat latitude'#10' * @param {string} lng longitude'#10' * @pa'
  +'ram {string} loc Texto link para a localizacao'#10' */'#10' '#10' '#10'wind'
  +'ow.WAPI.sendLocation = async function (chatId, lat, lng, loc) {'#10'    var'
  +' chat = Store.Chat.get(chatId);'#10'    if(!chat) return false;'#10'    var'
  +' tempMsg = Object.create(Store.Msg.models.filter(msg => msg.__x_isSentByMe '
  +'&& !msg.quotedMsg)[0]);'#10'    var newId = window.WAPI.getNewMessageId(cha'
  +'tId);'#10'    var extend = {'#10'        ack: 0,'#10'        id: newId,'#10
  +'        local: !0,'#10'        self: "out",'#10'        t: parseInt(new Dat'
  +'e().getTime() / 1000),'#10'        to: chatId,'#10'        isNewMsg: !0,'#10
  +'        type: "location",'#10'        lat,'#10'        lng,'#10'        loc'
  +','#10'        clientUrl:undefined,'#10'        directPath:undefined,'#10'  '
  +'      filehash:undefined,'#10'        uploadhash:undefined,'#10'        med'
  +'iaKey:undefined,'#10'        isQuotedMsgAvailable:false,'#10'        invis:'
  +'false,'#10'        mediaKeyTimestamp:undefined,'#10'        mimetype:undefi'
  +'ned,'#10'        height:undefined,'#10'        width:undefined,'#10'       '
  +' ephemeralStartTimestamp:undefined,'#10'        body:undefined,'#10'       '
  +' mediaData:undefined,'#10'        isQuotedMsgAvailable: false'#10'    };'#10
  +'    Object.assign(tempMsg, extend);'#10'    return await Promise.all(Store.'
  +'addAndSendMsgToChat(chat, tempMsg))'#10'};'#10#10'// Novas Funcoes incluida'
  +'s por Marcelo Santos'#10#10'window.WAPI.quickClean = function (ob) {return '
  +'JSON.parse(JSON.stringify(ob))};'#10#10'window.WAPI.setMyName = async funct'
  +'ion (newName) {'#10'    if(!Store.Versions.default[11].BinaryProtocol) Stor'
  +'e.Versions.default[11].BinaryProtocol=new Store.bp(11);'#10'    return awai'
  +'t Store.Versions.default[11].setPushname(newName);'#10'}'#10#10'window.WAPI'
  +'.clearChat = async function (id) {'#10'    return await Store.ChatUtil.send'
  +'Clear(Store.Chat.get(id),true);'#10'}'#10#10'window.WAPI.setMyStatus = func'
  +'tion (newStatus) {'#10'    return Store.MyStatus.setMyStatus(newStatus)'#10
  +'}'#10#10'window.WAPI.revokeGroupInviteLink = async function (chatId) {'#10
  +'    var chat = Store.Chat.get(chatId);'#10'    if(!chat.isGroup) return fal'
  +'se;'#10'    await Store.GroupInvite.revokeGroupInvite(chat);'#10'    return'
  +' true;'#10'}'#10#10'function SetConsoleMessageString(jsName, StringValue) {'
  +#10'    Obj = {'#10'        name: jsName,'#10'        result: StringValue'#10
  +'    }'#10'    console.log(JSON.stringify(Obj));'#10'}'#10#10#10'window.WAPI'
  +'.getGroupInviteLink = async function (chatId) {'#10'    var chat = Store.Ch'
  +'at.get(chatId);'#10'    if(!chat.isGroup) return false;'#10'    await Store'
  +'.GroupInvite.queryGroupInviteCode(chat);'#10'    SetConsoleMessageString("G'
  +'etGroupInviteLink", `https://chat.whatsapp.com/${chat.inviteCode}`);'#10#9
  +'return `https://chat.whatsapp.com/${chat.inviteCode}`'#10'}'#10#10'/**'#10
  +' * Returns an object with all of your host device details'#10' */'#10'windo'
  +'w.WAPI.getMe = function(){'#10'   '#9#10#9'vMe = {...WAPI.quickClean({'#10
  +'        ...Store.Contact.get(Store.Me.wid).attributes,'#10'        ...Store'
  +'.Me.attributes'#10'    }),'#10'    me:Store.Me.me};'#10' '#10'  SetConsoleM'
  +'essage("GetMe", JSON.stringify(vMe)); '#10'  '#10'  return vMe;'#10'    '#10
  ,'}'#10#10'window.WAPI.getStatus = async (id) => {'#10' SetConsoleMessage("Ge'
  +'tStatusMessage", JSON.stringify(await Store.MyStatus.getStatus(id)));'#9' '
  +#10' //return status; '#10'}'#10#10'window.WAPI.checkNumberStatus = async fu'
  +'nction (id) {'#10'    try {'#10'        const result = await window.Store.W'
  +'apQuery.queryExist(id);'#10'        if (result.jid === undefined) throw 404'
  +';'#10'        const data = window.WAPI._serializeNumberStatusObj(result);'
  +#10'        if (data.status == 200) data.numberExists = true'#10'      SetCo'
  +'nsoleMessage("NewCheckIsValidNumber",    JSON.stringify({ id : id, valid : '
  +'data.numberExists}));     '#10#9' return data;'#10#9#9#10'    } catch (e) {'
  +#10'            SetConsoleMessage("NewCheckIsValidNumber", JSON.stringify({ '
  +'id : id,  valid : false}));'#10#9#9#9'return window.WAPI._serializeNumberSt'
  +'atusObj({'#10'                status: e,'#10'                jid: id'#10'  '
  +'          });'#10'    }'#10'};'#10
]);
