LazarusResources.Add('twbot','PNG',[
  #137'PNG'#13#10#26#10#0#0#0#13'IHDR'#0#0#0' '#0#0#0' '#8#6#0#0#0'szz'#244#0#0
  +#5#214'IDATx'#218#173'V'#13'P'#141'Y'#24'~'#238#189#221'n'#127#148'Td7Vvk'
  +#149'Jk'#16#153#168#236#152#205#10#139'mg'#237#170#221#193#16#219'f'#252#21
  +'Y;'#137';'#202'$Z'#204' K'#180#133'm'#253#172#252#132#152'X'#148'R]#Bn'#137
  +'h'#187#253'G'#185#127#223#190'_'#223#221'J'#238#159'8'#211'['#211'y'#207'w'
  +#158#231#188#231#188#207#251#242#160'{'#240#174'%'#6'M'#180#235'crI'#173'T'#0
  +#12'C'#6#3'C'#179#128'G?'#2'a'#135#185#204'?&'#162#25#185'N'#16'='#187#9'/'
  +#137'''G'#13's'#243#138'u'#10#142#211'l'#206'7'#130#128#146'L'#4#213#11')'
  +#202'R'#151#215#187#135#159#26'F'#19#141#189'!`q-!'#240#168#203#164'o'#130'l'
  +#189#252#209'"Y@'#171'M'#245'|'#194'FH'#1#19'koX|'#188#30#210#195#203#176'|['
  +#246#244'c'#215#171'r{K'#160'oAb'#224'u'#215#25'+'#221#204'l'#248'h'#175#220
  +'A'#1'0'#211#241#9#11#174#2'C'#174'>'#238#201#144#21#158'DN'#230#190#131'!'
  +#241'y'#191#144#179#186#183'W`['#154#28'X'#247#201#188#237'P'#191#188#1'ym6'
  +#17#208#21#1#21#160#150#195'l'#240'b(^'#152'Brp'#205'#'#159#168#220#233#228
  +#168'$k'#133#158#215#163#139#0'oc'#168#167#247#172#241'N'#133#174#11#246#162
  +'M'#154'L$'#158#16#1#161#246#211#171#21#16#218#142#135#208'n*'#30#166#175#196
  +#23'QY'#19#203#159#183#150#146#179#129'c'#167'{'#232'" 8'#17#227#27#238#233
  +#229#177'}'#200#204#181'h{'#176#129#203#2#158'@'#11#190#146#166'-a'#238#188
  +#12#213'9'#251'p'#244#200#241#184#200#20#201'n'#242'<''S'#192#192#208'E@t.'
  +#214'7'#222#251#243'Y'#17'v#'#253#209'^'#177'C'#19#254#158'Y'#160#230'B?d'#17
  +'Z'#159'='#197#173#244#205'E'#147'b'#174'}K'#142#199'd/'#13#129#235'#`us'#139
  +'_'#190'k'#240#210#225#22#246'VP'#212'di'#194#223'}'#185#230#213#219#140#163
  +#151'?'#6#165#191'G'#192'}'#241#217#209#228'(''k'#226#216#245#158'@'#191#219
  +'I~'#245#174#161'b'#240#20#229'P6'#221#162#149'&'#221#150#179#224'j'#240#132
  +'6'#16'9'#133'A'#154#25#139#141#187#207#135#165'\'#168'<O'#206#127#193#137
  +#129'QC+'#129#224#177#142'C'#197#161'#'#30#185#205'O'#134#252#249'I:h]'#143
  +#251'g:'#238'^'#228'8'#23#178#210#127#144#157#182';u'#238#214#146'Xr'#208'K'
  +#197'+c'#193'u'#17#224#239'\'#228#21'8'#197#223';'#219'y'#198#10'"p'#164#227
  +#180#175#223'?'#167'x'#166#3'C '#217#17'Nn'#21#241#19#232#12'('#143#207''''
  +#191#9'<~'#186#244#134',k'#251'Bx!'#214'g'#139'G'#192#180#8#135#145#1'P'#200
  +#206#244#8#255#255#28'T'#224#155#127#4#129#245'g'#196#141#21#255#158'[1'#156
  +#177#145#19'8'#160'"s5'#134#206#222'g'#11'.5'#245#18#176#188#186'il'#182#231
  +'WK'#198'[9'#218'C'#217'\HS&Z'#150#177#0#234'. -~'#1'e'#14#191#159#15#26#203
  +#239#161#248#244#145'\'#255#213'9'#179#201'Qk'#136#128'M'#209#22#159'j'#143
  +#31#197#230'|'#200#160'n'#151'v'#222'?'#163#181'"2Z'#254'g(h'#150#20#29#31'4'
  +#221'/'#192#213#140']W'#190#220'T'#178#148#28#180#25'Z'#12#17#176'+'#217':'
  +#174#214'3r?'#137'h'#1'II'#11'{'#137#156#16#169#148'P'#147'1j'#6#186#19'H'#13
  +#129#208#26#176#246#194#227#236'Td'#157'8'#187'3|O'#217'^rT'#129'+JJC'#4#28
  +'J'#182#249#213'0'#212#3'p@'#154'3'#17#176#200#218#9#238'a'#209'P7'#229#225
  +'MQ'#226'N'#206'7'#181#167'26'#28'U'#231'R'#240'G'#198#25'q'#212#193#7'i'#224
  +#10'R'#11#180#164#167'6'#2#253#200#134'j'#254'v'#174'['#30#236#228#179'z'#237
  +#170#13#246'n.`'#218#164'x3+('#236'"'#7'z.'#142'(;'#186#25#7'N'#150'D'#137
  +#255#146#30''''#199'3p'#5'I'#171'0i#'#192'j'#174'%Y'#247#202'c'#150#151#224
  +'{c'#212#252'M'#142#2#230#9'E'#163#29#175#137#18#155#4'fN'#244#203#146#192#19
  +#176'$17'#228#162#164#158#212#11'5d/'#160'G'#21#245#149#227#206'1u'#148#157
  +#227#246'5s'#170#157#167#133#210'Y'#202#208'Q'#248';w'#160'H'#152#127#0'ys+n'
  +#165#198#213#198'e'#148'/'#205'*'#148#229#131'S'#196'6'#24'h'#228#140'! '#200
  +#249#213'c'#239#152#239#214#132'Y'#14#176'"'#25'i'#232#250#140#207#130#15#134
  +#162'Q'#134#162#212#248#186#177#171#174#179'=@'#149#6#252#149'!pc'#9'X'#221
  +#222'5'#165'e'#196'BR'#218#230#135#20'LMy'#23#144#168#153#15'@'#195#189'"'#20
  +#255#185'G'#26#176#161't.'#184#6'D'#6#174#12#27#4'7'#134#0'/-'#242#211'9'#1
  +'3'#191'><p'#180'/'#5#180#134#155'5a'#193#7#161#241#238#13'\>'#148'ref'#194
  +#189#21#224'Jp'#29#140#232#1#222#134#128'(7'#214#243#226#132#136#205#190'<'
  +#30#189'%'#21#149'x'#129'y'#199#201'+N'#31'@'#254#229'+'#167'B'#146#238#175#7
  +'W'#132#26#222#22#220#24#2#214#229#153#243#26#157#131#190#7#218#169#193#225
  +#19#184'E'#127'T'#158'N'#197#161#140#28'qLze'#6#173'y'#10'N`T'#134#225#222
  +#142#0#255'T'#148'K'#212#196#31'"7Z'#13#26#132#142'LbD'#184#147#158#136#191
  +'s'#31#138#163#211'*S'#193#181']-'#189#5'7D'#192#162#232'7'#191#250#145#11
  +#215#137#160#164'l"U,MO'#198#146#164#252#144#203'w'#154#139#193#9#140#222#28
  +#127#23#2#188'u'#179'?'#244#252'yeXq'#255'Q'#147#168'%'#171#132'$-'#25#209
  +#135'*B'#206'K'#26'o'#130#19#152#246'w'#5#215'G@'#152#179'~'#248'q'#255#152
  +#196' '#149#236#25#242#246''''#201'|'#163'%'#179#192#165#25#11'nT'#142#191#11
  +#129#190#5#241#158'Ml'#229#147'+'#153#166#9#235#238#6#161'+'#199#229#239#11
  +'\'#31#1#170#167#24'B'#198'v0'#236'=?A'#151#192#188#215#161#139'@'#247#130'$'
  ,#215#144'x'#239#224#236#248#15'=-??'#19'MA'#226#0#0#0#0'IEND'#174'B`'#130
]);
LazarusResources.Add('wbot','JS',[
  '//Version_JS;Version_TInjectMin;Version_CEF4Min'#10'//1.0.0.9;1.0.0.9;78.3.0'
  +#10'//'#10'//'#10'//Fonte: https://gist.github.com/phpRajat/a6422922efae3291'
  +'4f4dbd1082f3f412'#10#10'var contactID;'#10#10'function getAllGroupContacts('
  +'Contacts) {'#10#9'SetConsoleMessage("GetAllGroupContacts", JSON.stringify(C'
  +'ontacts));'#9#10'}'#10#10'function getMyNumber() {'#10'    SetConsoleMessag'
  +'e(''getMyNumber'', localStorage.getItem(''last-wid''));'#10'    return true'
  +';'#10'}'#10#10'function convertImgToBase64URL(url, callback, outputFormat){'
  +#10#9'var img = new Image();'#10'    img.crossOrigin = ''Anonymous'';'#10'  '
  +'  img.onload = function(){'#10'        var canvas = document.createElement('
  +'''CANVAS''),'#10'        ctx = canvas.getContext(''2d''), dataURL;'#10'    '
  +'    canvas.height = img.height;'#10'        canvas.width = img.width;'#10' '
  +'       ctx.drawImage(img, 0, 0);'#10'        dataURL = canvas.toDataURL(out'
  +'putFormat);'#10'        callback(dataURL);'#10'        canvas = null; '#10
  +'    };'#10'    img.src = url;'#10'};'#10#10'function SetConsoleMessage(jsNa'
  +'me, resultValue) {'#10'    Obj = {'#10'        name: jsName,'#10'        re'
  +'sult: ''{"result":'' + resultValue + ''}'''#10'    }'#10'    console.log(JS'
  +'ON.stringify(Obj));'#10'}'#10#10'var intervalMonitor;'#10'var isLoggedStatu'
  +'s = false;'#10#10'function startMonitor(intervalSeconds = 0) {'#10'    isLo'
  +'ggedStatus = WAPI.isLoggedIn();'#10'    if (intervalSeconds >= 1) {'#10'   '
  +'     intervalMonitor = window.setInterval(monitorUnReadMessages, intervalSe'
  +'conds * 1000);'#10'    }'#10'}'#10#10'function stopMonitor() {'#10'    wind'
  +'ow.clearInterval(intervalMonitor)'#10'}'#10#10'function removeElementsByCla'
  +'ss(elementClass) {'#10'    var elements = document.getElementsByClassName(e'
  +'lementClass);'#10'    if (typeof elements !== ''undefined'' && elements.len'
  +'gth > 0) {'#10'        for (var i = 0; i < elements.length; i++) {'#10'    '
  +'        elements[i].parentNode.removeChild(elements[i]);'#10'        }'#10
  +'    }'#10'}'#10#10'function moveElementsToParentParentElement(elementClass)'
  +' {'#10'    var elements = document.getElementsByClassName(elementClass);'#10
  +'    if (typeof elements !== ''undefined'' && elements.length > 0) {'#10'   '
  +'     for (var i = 0; i < elements.length; i++) {'#10'            var elemen'
  +'t = elements[i];'#10'            element.parentNode.parentNode.appendChild('
  +'element);'#10'        }'#10'    }'#10'}'#10#10'function monitorUnReadMessag'
  +'es() {'#10'    var currentStatus = WAPI.isLoggedIn();'#10'    if (currentSt'
  +'atus != isLoggedStatus) {'#10'        isLoggedStatus = WAPI.isLoggedIn();'
  +#10'        SetConsoleMessage("OnChangeConnect", JSON.stringify(isLoggedStat'
  +'us));'#10'    }'#10#10'    if (isLoggedStatus) {'#10'        WAPI.getUnread'
  +'Messages(includeMe = "true", includeNotifications = "true", use_unread_coun'
  +'t = "true");'#10'    }'#10'}'#10#10'if (!window.Store) {'#10'    (function '
  +'() {'#10'        function getStore(modules) {'#10'            let foundCoun'
  +'t = 0;'#10'            let neededObjects = ['#10#9#9#9#9'{ id: "Store", con'
  +'ditions: (module) => (module.Chat && module.Msg) ? module : null },'#10'   '
  +'             { id: "MediaCollection", conditions: (module) => (module.defau'
  +'lt && module.default.prototype && module.default.prototype.processAttachmen'
  +'ts) ? module.default : null },'#10'                { id: "MediaProcess", co'
  +'nditions: (module) => (module.BLOB) ? module : null },'#10'                '
  +'{ id: "Wap", conditions: (module) => (module.createGroup) ? module : null }'
  +','#10'                { id: "ServiceWorker", conditions: (module) => (modul'
  +'e.default && module.default.killServiceWorker) ? module : null },'#10'     '
  +'           { id: ''Presence'', conditions: (value) => (value.default && val'
  +'ue.default.Presence) ? value.default : null },'#10'                { id: "S'
  +'tate", conditions: (module) => (module.STATE && module.STREAM) ? module : n'
  +'ull },'#10'                { id: "WapDelete", conditions: (module) => (modu'
  +'le.sendConversationDelete && module.sendConversationDelete.length == 2) ? m'
  +'odule : null },'#10'                { id: "Conn", conditions: (module) => ('
  +'module.default && module.default.ref && module.default.refTTL) ? module.def'
  +'ault : null },'#10'                { id: "WapQuery", conditions: (module) ='
  +'> (module.queryExist) ? module : ((module.default && module.default.queryEx'
  +'ist) ? module.default : null) },'#10'                { id: "CryptoLib", con'
  +'ditions: (module) => (module.decryptE2EMedia) ? module : null },'#10'      '
  +'          { id: "OpenChat", conditions: (module) => (module.default && modu'
  +'le.default.prototype && module.default.prototype.openChat) ? module.default'
  +' : null },'#10'                { id: "UserConstructor", conditions: (module'
  +') => (module.default && module.default.prototype && module.default.prototyp'
  +'e.isServer && module.default.prototype.isUser) ? module.default : null },'
  ,#10'                { id: "SendTextMsgToChat", conditions: (module) => (modu'
  +'le.sendTextMsgToChat) ? module.sendTextMsgToChat : null },'#10#9#9#9#9'{ id'
  +': "ReadSeen", conditions: (module) => (module.sendSeen) ? module : null },'
  +#10'                { id: "sendDelete", conditions: (module) => (module.send'
  +'Delete) ? module.sendDelete : null },'#10#9#9#9#9'{ id: "MediaUpload", cond'
  +'itions: (module) => (module.default && module.default.mediaUpload) ? module'
  +'.default : null },'#10'                { id: "Archive", conditions: (module'
  +') => (module.setArchive) ? module : null },'#10#9#9#9#9'{ id: "Block", cond'
  +'itions: (module) => (module.blockContact && module.unblockContact) ? module'
  +' : null },'#10'                { id: "ChatUtil", conditions: (module) => (m'
  +'odule.sendClear) ? module : null },'#10#9#9#9#9'{ id: "GroupInvite", condit'
  +'ions: (module) => (module.queryGroupInviteCode) ? module : null },'#10#9'  '
  +'          { id: "addAndSendMsgToChat", conditions: (module) => (module.addA'
  +'ndSendMsgToChat) ? module.addAndSendMsgToChat : null },'#10#9#9#9#9'{ id: "'
  +'sendMsgToChat", conditions: (module) => (module.sendMsgToChat) ? module.sen'
  +'dMsgToChat : null },'#10'                { id: "Catalog", conditions: (modu'
  +'le) => (module.Catalog) ? module.Catalog : null },'#10'                //{ '
  +'id: "bp", conditions: (module) => (module.default&&module.default.toString('
  +').includes(''bp_unknown_version'')) ? module.default : null },'#10'        '
  +'        { id: "MsgKey", conditions: (module) => (module.default&&module.def'
  +'ault.toString().includes(''MsgKey error: obj is null/undefined'')) ? module'
  +'.default : null },'#10#9#9#9#9'{ id: "Parser", conditions: (module) => (mod'
  +'ule.convertToTextWithoutSpecialEmojis) ? module.default : null },'#10'     '
  +'           { id: "Builders", conditions: (module) => (module.TemplateMessag'
  +'e && module.HydratedFourRowTemplate) ? module : null },'#10'               '
  +' { id: "Me", conditions: (module) => (module.PLATFORMS && module.Conn) ? mo'
  +'dule.default : null },'#10'                { id: "CallUtils", conditions: ('
  +'module) => (module.sendCallEnd && module.parseCall) ? module : null },'#10#9
  +#9#9#9'{ id: "Identity", conditions: (module) => (module.queryIdentity && mo'
  +'dule.updateIdentity) ? module : null },'#10'                { id: "MyStatus'
  +'", conditions: (module) => (module.getStatus && module.setMyStatus) ? modul'
  +'e : null },'#10'                { id: "ChatStates", conditions: (module) =>'
  +' (module.sendChatStatePaused && module.sendChatStateRecording && module.sen'
  +'dChatStateComposing) ? module : null },'#10'                { id: "GroupAct'
  +'ions", conditions: (module) => (module.sendExitGroup && module.localExitGro'
  +'up) ? module : null },'#10'                { id: "Features", conditions: (m'
  +'odule) => (module.FEATURE_CHANGE_EVENT && module.features) ? module : null '
  +'},'#10#9#9#9#9'{ id: "MessageUtils", conditions: (module) => (module.storeM'
  +'essages && module.appendMessage) ? module : null },'#10'                { i'
  +'d: "WebMessageInfo", conditions: (module) => (module.WebMessageInfo && modu'
  +'le.WebFeatures) ? module.WebMessageInfo : null },'#10'                { id:'
  +' "createMessageKey", conditions: (module) => (module.createMessageKey && mo'
  +'dule.createDeviceSentMessage) ? module.createMessageKey : null },'#10'     '
  +'           { id: "Participants", conditions: (module) => (module.addPartici'
  +'pants && module.removeParticipants && module.promoteParticipants && module.'
  +'demoteParticipants) ? module : null },'#10#9#9#9#9'{ id: "WidFactory", cond'
  +'itions: (module) => (module.numberToWid && module.createWid && module.creat'
  +'eWidFromWidLike) ? module : null },'#10'                { id: "Base", condi'
  +'tions: (module) => (module.setSubProtocol && module.binSend && module.actio'
  +'nNode) ? module : null },'#10'                { id: "Base2", conditions: (m'
  +'odule) => (module.supportsFeatureFlags && module.parseMsgStubProto && modul'
  +'e.binSend && module.subscribeLiveLocation) ? module : null },'#10'         '
  +'       { id: "Versions", conditions: (module) => (module.loadProtoVersions '
  +'&& module.default["15"] && module.default["16"] && module.default["17"]) ? '
  +'module : null },'#10#9#9'        { id: "Sticker", conditions: (module) => ('
  +'module.default && module.default.Sticker) ? module.default.Sticker : null }'
  +','#10'                { id: "MediaUpload", conditions: (module) => (module.'
  +'default && module.default.mediaUpload) ? module.default : null },'#10'     '
  +'           { id: "UploadUtils", conditions: (module) => (module.default && '
  +'module.default.encryptAndUpload) ? module.default : null }'#10#10'         '
  +'   ];'#10'            for (let idx in modules) {'#10'                if ((t'
  +'ypeof modules[idx] === "object") && (modules[idx] !== null)) {'#10'        '
  +'            let first = Object.values(modules[idx])[0];'#10'               '
  +'     if ((typeof first === "object") && (first.exports)) {'#10'            '
  ,'            for (let idx2 in modules[idx]) {'#10'                          '
  +'  let module = modules(idx2);'#10'                            if (!module) '
  +'{'#10'                                continue;'#10'                       '
  +'     }'#10'                            neededObjects.forEach((needObj) => {'
  +#10'                                if (!needObj.conditions || needObj.found'
  +'edModule)'#10'                                    return;'#10'             '
  +'                   let neededModule = needObj.conditions(module);'#10'     '
  +'                           if (neededModule !== null) {'#10'               '
  +'                     foundCount++;'#10'                                    '
  +'needObj.foundedModule = neededModule;'#10'                                }'
  +#10'                            });'#10'                            if (foun'
  +'dCount == neededObjects.length) {'#10'                                break'
  +';'#10'                            }'#10'                        }'#10#10'  '
  +'                      let neededStore = neededObjects.find((needObj) => nee'
  +'dObj.id === "Store");'#10'                        window.Store = neededStor'
  +'e.foundedModule ? neededStore.foundedModule : {};'#10'                     '
  +'   neededObjects.splice(neededObjects.indexOf(neededStore), 1);'#10'       '
  +'                 neededObjects.forEach((needObj) => {'#10'                 '
  +'           if (needObj.foundedModule) {'#10'                               '
  +' window.Store[needObj.id] = needObj.foundedModule;'#10'                    '
  +'        }'#10'                        });'#10'                        windo'
  +'w.Store.sendMessage = function (e) {'#10'                            return'
  +' window.Store.SendTextMsgToChat(this, ...arguments);'#10'                  '
  +'      };'#10'                    }'#10'                }'#10'            }'
  +#10#10'            if (window.Store.Presence) {'#10'                for (con'
  +'st prop in window.Store.Presence) {'#10'                    if (prop === "P'
  +'resence") {'#10'                        continue;'#10'                    }'
  +#10'                    window.Store[prop] = window.Store.Presence[prop] || '
  +'window.Store[prop];'#10'                }'#10'            }'#10#10'        '
  +'    return window.Store;'#10'        }'#10#10'        if (typeof webpackJso'
  +'np === ''function'') {'#10'            webpackJsonp([], {''parasite'': (x, '
  +'y, z) => getStore(z)}, [''parasite'']);'#10'        } else {'#10'          '
  +'  webpackJsonp.push(['#10'                [''parasite''],'#10'             '
  +'   {'#10'                    parasite: function (o, e, t) {'#10'           '
  +'             getStore(t);'#10'                    }'#10'                },'
  +#10'                [[''parasite'']]'#10'            ]);'#10'        }'#10#10
  +'    })();'#10'}'#10' '#10'//window.WAPI = {};'#10'//window._WAPI = {};'#10
  +#10'window.WAPI = {'#10'    lastRead: {}'#10'};'#10#10#10'window.WAPI._seria'
  +'lizeRawObj = (obj) => {'#10'    if (obj && obj.toJSON) {'#10'        return'
  +' obj.toJSON();'#10'    }'#10'    return {}'#10'};'#10#10'/**'#10' * Seriali'
  +'zes a chat object'#10' *'#10' * @param rawChat Chat object'#10' * @returns '
  +'{{}}'#10' */'#10#10'window.WAPI._serializeChatObj = (obj) => {'#10'    if ('
  +'obj == undefined) {'#10'        return null;'#10'    }'#10'    return Objec'
  +'t.assign(window.WAPI._serializeRawObj(obj), {'#10'        kind: obj.kind,'
  +#10'        isGroup: obj.isGroup,'#10'        formattedTitle: obj.formattedT'
  +'itle,'#10'        contact: obj[''contact''] ? window.WAPI._serializeContact'
  +'Obj(obj[''contact'']) : null,'#10'        groupMetadata: obj["groupMetadata'
  +'"] ? window.WAPI._serializeRawObj(obj["groupMetadata"]) : null,'#10'       '
  +' presence: obj["presence"] ? window.WAPI._serializeRawObj(obj["presence"]) '
  +': null,'#10'        msgs: null'#10'    });'#10'};'#10#10'window.WAPI._seria'
  +'lizeContactObj = (obj) => {'#10'    if (obj == undefined) {'#10'        ret'
  +'urn null;'#10'    }'#10'    return Object.assign(window.WAPI._serializeRawO'
  +'bj(obj), {'#10'        formattedName: obj.formattedName,'#10'        isHigh'
  +'LevelVerified: obj.isHighLevelVerified,'#10'        isMe: obj.isMe,'#10'   '
  +'     isMyContact: obj.isMyContact,'#10'        isPSA: obj.isPSA,'#10'      '
  +'  isUser: obj.isUser,'#10'        isVerified: obj.isVerified,'#10'        i'
  +'sWAContact: obj.isWAContact,'#10'        profilePicThumbObj: obj.profilePic'
  +'Thumb ? WAPI._serializeProfilePicThumb(obj.profilePicThumb) : {},'#10'     '
  +'   statusMute: obj.statusMute,'#10'        msgs: null'#10'    });'#10'};'#10
  +#10'window.WAPI._serializeMessageObj = (obj) => {'#10'    if (obj == undefin'
  +'ed) {'#10'        return null;'#10'    }'#10'    const _chat = obj[''chat'''
  +'] ? WAPI._serializeChatObj(obj[''chat'']) : {};'#10'    if(obj.quotedMsg) o'
  +'bj.quotedMsgObj();'#10'    return Object.assign(window.WAPI._serializeRawOb'
  +'j(obj), {'#10'        id: obj.id._serialized,'#10'        //add 02/06/2020 '
  ,'mike -->'#10#9#9'quotedParticipant: obj.quotedParticipant? obj.quotedPartic'
  +'ipant._serialized ? obj.quotedParticipant._serialized : undefined : undefin'
  +'ed,'#10'        author: obj.author? obj.author._serialized ? obj.author._se'
  +'rialized : undefined : undefined,'#10'        chatId: obj.chatId? obj.chatI'
  +'d._serialized ? obj.chatId._serialized : undefined : undefined,'#10'       '
  +' to: obj.to? obj.to._serialized ? obj.to._serialized : undefined : undefine'
  +'d,'#10'        fromMe: obj.id.fromMe,'#10#9#9'//add 02/06/2020 mike <--'#10
  +#9#9#10#9#9'sender: obj["senderObj"] ? WAPI._serializeContactObj(obj["sender'
  +'Obj"]) : null,'#10'        timestamp: obj["t"],'#10'        content: obj["b'
  +'ody"],'#10'        isGroupMsg: obj.isGroupMsg,'#10'        isLink: obj.isLi'
  +'nk,'#10'        isMMS: obj.isMMS,'#10'        isMedia: obj.isMedia,'#10'   '
  +'     isNotification: obj.isNotification,'#10'        isPSA: obj.isPSA,'#10
  +'        type: obj.type,'#10'        chat: _chat,'#10'        isOnline: _cha'
  +'t.isOnline,'#10'        lastSeen: _chat.lastSeen,'#10'        chatId: obj.i'
  +'d.remote,'#10'        quotedMsgObj: WAPI._serializeMessageObj(obj[''_quoted'
  +'MsgObj'']),'#10'        mediaData: window.WAPI._serializeRawObj(obj[''media'
  +'Data'']),'#10'        reply: body => window.WAPI.reply(_chat.id._serialized'
  +', body, obj)'#10'    });'#10'};'#10#10'window.WAPI._serializeNumberStatusOb'
  +'j = (obj) => {'#10'    if (obj == undefined) {'#10'        return null;'#10
  +'    }'#10#10'    return Object.assign({}, {'#10'        id: obj.jid,'#10'  '
  +'      status: obj.status,'#10'        isBusiness: (obj.biz === true),'#10' '
  +'       canReceiveMessage: (obj.status === 200)'#10'    });'#10'};'#10#10'wi'
  +'ndow.WAPI._serializeProfilePicThumb = (obj) => {'#10'    if (obj == undefin'
  +'ed) {'#10'        return null;'#10'    }'#10#10'    return Object.assign({}'
  +', {'#10'        eurl: obj.eurl,'#10'        id: obj.id,'#10'        img: ob'
  +'j.img,'#10'        imgFull: obj.imgFull,'#10'        raw: obj.raw,'#10'    '
  +'    tag: obj.tag'#10'    });'#10'}'#10#10'window.WAPI.createGroup = async f'
  +'unction (name, contactsId) {'#10'    if (!Array.isArray(contactsId)) {'#10
  +'        contactsId = [contactsId];'#10'    }'#10#10'    return await window'
  +'.Store.WapQuery.createGroup(name, contactsId);;'#10'};'#10#10'window.WAPI.l'
  +'eaveGroup = function(groupId) {'#10'    groupId = typeof groupId == "string'
  +'" ? groupId : groupId._serialized;'#10'    var group = WAPI.getChat(groupId'
  +');'#10'    return Store.GroupActions.sendExitGroup(group)'#10'};'#10#10#10
  +'window.WAPI.getAllContacts = function(done) {'#10'    const contacts = wind'
  +'ow.Store.Contact.map((contact) => WAPI._serializeContactObj(contact));'#10
  +#10'    if (done !== undefined) done(contacts);'#10#10'    SetConsoleMessage'
  +'("getAllContacts", JSON.stringify(contacts));'#10#10'    return contacts;'
  +#10'};'#10#10'/**'#10' * Fetches all contact objects from store, filters the'
  +'m'#10' *'#10' * @param done Optional callback function for async execution'
  +#10' * @returns {Array|*} List of contacts'#10' */'#10'window.WAPI.getMyCont'
  +'acts = function(done) {'#10'    const contacts = window.Store.Contact.filte'
  +'r((contact) => contact.isMyContact === true).map((contact) => WAPI._seriali'
  +'zeContactObj(contact));'#10'    if (done !== undefined) done(contacts);'#10
  +'    return contacts;'#10'};'#10#10'/**'#10' * Fetches contact object from s'
  +'tore by ID'#10' *'#10' * @param id ID of contact'#10' * @param done Optiona'
  +'l callback function for async execution'#10' * @returns {T|*} Contact objec'
  +'t'#10' */'#10'window.WAPI.getContact = function(id, done) {'#10'    const f'
  +'ound = window.Store.Contact.get(id);'#10#10'    if (done !== undefined) don'
  +'e(window.WAPI._serializeContactObj(found))'#10'    return window.WAPI._seri'
  +'alizeContactObj(found);'#10'};'#10#10'/**'#10' * Fetches all chat objects f'
  +'rom store'#10' *'#10' * @param done Optional callback function for async ex'
  +'ecution'#10' * @returns {Array|*} List of chats'#10' */'#10'window.WAPI.get'
  +'AllChats = function(done) {'#10'    const chats = window.Store.Chat.map((ch'
  +'at) => WAPI._serializeChatObj(chat));'#10#10'    if (done !== undefined) do'
  +'ne(chats);'#10#10'    SetConsoleMessage("getAllChats", JSON.stringify(chats'
  +'));'#10#10'    return chats;'#10'};'#10#10'window.WAPI.haveNewMsg = functio'
  +'n(chat) {'#10'    return chat.unreadCount > 0;'#10'};'#10#10'window.WAPI.ge'
  +'tAllChatsWithNewMsg = function(done) {'#10'    const chats = window.Store.C'
  +'hat.filter(window.WAPI.haveNewMsg).map((chat) => WAPI._serializeChatObj(cha'
  +'t));'#10#10'    if (done !== undefined) done(chats);'#10'    return chats;'
  +#10'};'#10#10'/**'#10' * Fetches all chat IDs from store'#10' *'#10' * @para'
  +'m done Optional callback function for async execution'#10' * @returns {Arra'
  +'y|*} List of chat id''s'#10' */'#10'window.WAPI.getAllChatIds = function(do'
  +'ne) {'#10'    const chatIds = window.Store.Chat.map((chat) => chat.id._seri'
  ,'alized || chat.id);'#10#10'    if (done !== undefined) done(chatIds);'#10' '
  +'   return chatIds;'#10'};'#10#10'window.WAPI.getAllNewMessages = async func'
  +'tion () {'#10'    return JSON.stringify(WAPI.getAllChatsWithNewMsg().map(c '
  +'=> WAPI.getChat(c.id._serialized)).map(c => c.msgs._models.filter(x => x.is'
  +'NewMsg)) || [])'#10'}'#10#10#10'/**'#10' * Fetches all groups objects from '
  +'store'#10' *'#10' * @param done Optional callback function for async execut'
  +'ion'#10' * @returns {Array|*} List of chats'#10' */'#10' '#10' '#10'window.'
  +'WAPI.getAllGroups = function(done) {'#10'    let groups = window.Store.Chat'
  +'.filter((chat) => chat.isGroup);'#10#10#9'if (done !== undefined) done(grou'
  +'ps);'#10#9#10#10#9'let arrGroups = [];'#10#9'let arr = groups;'#10#9'arr.fo'
  +'rEach((v , i) => {'#10#9#9'arrGroups.push(arr[i][''id''][''_serialized'']+'
  +''' ''+arr[i][''formattedTitle'']);'#10#9'})'#10#9#10#9'SetConsoleMessage("g'
  +'etAllGroups", JSON.stringify(arrGroups));'#10#9#10#9'//return groups;'#10'}'
  +'; '#10#10'//01/06/2020'#10'window.WAPI.getAllGroupsList = function(done) {'
  +#10'    const contacts = window.Store.Contact.map((contact) => WAPI._seriali'
  +'zeContactObj(contact));'#10#10'    if (done !== undefined) done(contacts);'
  +#10#10'    SetConsoleMessage("getAllGroups", JSON.stringify(contacts));'#10
  +#10'    return contacts;'#10'};'#10#10'/**'#10' * Sets the chat state'#10' *'
  +' '#10' * @param {0|1|2} chatState The state you want to set for the chat. C'
  +'an be TYPING (1), RECRDING (2) or PAUSED (3);'#10' * returns {boolean}'#10
  +' */'#10'window.WAPI.sendChatstate = async function (state, chatId) {'#10'  '
  +'  switch(state) {'#10'        case 0:'#10'            await window.Store.Ch'
  +'atStates.sendChatStateComposing(chatId);'#10'            break;'#10'       '
  +' case 1:'#10'            await window.Store.ChatStates.sendChatStateRecordi'
  +'ng(chatId);'#10'            break;'#10'        case 2:'#10'            awai'
  +'t window.Store.ChatStates.sendChatStatePaused(chatId);'#10'            brea'
  +'k;'#10'        default:'#10'            return false'#10'    }'#10'    retu'
  +'rn true;'#10'};'#10#10'/**'#10' * Fetches chat object from store by ID'#10
  +' *'#10' * @param id ID of chat'#10' * @returns {T|*} Chat object'#10' */'#10
  +'window.WAPI.getChat = function (id) {'#10'    id = typeof id == "string" ? '
  +'id : id._serialized;'#10'    const found = window.Store.Chat.get(id);'#10' '
  +'   if (found) found.sendMessage = (found.sendMessage) ? found.sendMessage :'
  +' function () { return window.Store.sendMessage.apply(this, arguments); };'
  +#10'    return found;'#10'}'#10#10'window.WAPI.getChatByName = function(name'
  +', done) {'#10'    const found = window.Store.Chat.find((chat) => chat.name '
  +'=== name);'#10'    if (done !== undefined) done(found);'#10'    return foun'
  +'d;'#10'};'#10#10'window.WAPI.sendImageFromDatabasePicBot = function (picId,'
  +' chatId, caption) {'#10'    var chatDatabase = window.WAPI.getChatByName('''
  +'DATABASEPICBOT'');'#10'    var msgWithImg = chatDatabase.msgs.find((msg) =>'
  +' msg.caption == picId);'#10#10'    if (msgWithImg === undefined) {'#10'    '
  +'    return false;'#10'    }'#10'    var chatSend = WAPI.getChat(chatId);'#10
  +'    if (chatSend === undefined) {'#10'        return false;'#10'    }'#10' '
  +'   const oldCaption = msgWithImg.caption;'#10#10'    msgWithImg.id.id = win'
  +'dow.WAPI.getNewId();'#10'    msgWithImg.id.remote = chatId;'#10'    msgWith'
  +'Img.t = Math.ceil(new Date().getTime() / 1000);'#10'    msgWithImg.to = cha'
  +'tId;'#10#10'    if (caption !== undefined && caption !== '''') {'#10'      '
  +'  msgWithImg.caption = caption;'#10'    } else {'#10'        msgWithImg.cap'
  +'tion = '''';'#10'    }'#10#10'    msgWithImg.collection.send(msgWithImg).th'
  +'en(function (e) {'#10'        msgWithImg.caption = oldCaption;'#10'    });'
  +#10#10'    return true;'#10'};'#10#10'window.WAPI.getGeneratedUserAgent = fu'
  +'nction (useragent) {'#10'    if (!useragent.includes(''WhatsApp'')) return '
  +'''WhatsApp/0.4.315 '' + useragent;'#10'    return useragent.replace(userage'
  +'nt.match(/WhatsApp\/([.\d])*/g)[0].match(/[.\d]*/g).find(x => x), window.De'
  +'bug.VERSION)'#10'}'#10#10'window.WAPI.getWAVersion = function () {'#10'    '
  +'return window.Debug.VERSION;'#10'}'#10#10'/**'#10' * Automatically sends a '
  +'link with the auto generated link preview. You can also add a custom messag'
  +'e to be added.'#10' * @param chatId '#10' * @param url string A link, for e'
  +'xample for youtube. e.g https://www.youtube.com/watch?v=61O-Galzc5M'#10' * '
  +'@param text string Custom text as body of the message, this needs to includ'
  +'e the link or it will be appended after the link.'#10' */'#10'window.WAPI.s'
  +'endLinkWithAutoPreview = async function (chatId, url, text) {'#10'    var c'
  +'hatSend = WAPI.getChat(chatId);'#10'    if (chatSend === undefined) {'#10' '
  +'       return false;'#10'    }'#10'    const linkPreview = await Store.WapQ'
  +'uery.queryLinkPreview(url);'#10'    return (await chatSend.sendMessage(text'
  ,'.includes(url) ? text : `${url}\n${text}`, {linkPreview}))==''success'''#10
  +'}'#10#10'window.WAPI.sendMessageWithThumb = function (thumb, url, title, de'
  +'scription, text, chatId) {'#10'    var chatSend = WAPI.getChat(chatId);'#10
  +'    if (chatSend === undefined) {'#10'        return false;'#10'    }'#10' '
  +'   var linkPreview = {'#10'        canonicalUrl: url,'#10'        descripti'
  +'on: description,'#10'        matchedText: url,'#10'        title: title,'#10
  +'        thumbnail: thumb // Thumbnail max size allowed: 200x200'#10'    };'
  +#10'    chatSend.sendMessage(text.includes(url) ? text : `${url}\n${text}`, '
  +'{ linkPreview: linkPreview, mentionedJidList: [], quotedMsg: null, quotedMs'
  +'gAdminGroupJid: null });'#10'    return true;'#10'};'#10#10#10'window.WAPI.'
  +'getNewId = function() {'#10'    var text = "";'#10'    var possible = "ABCD'
  +'EFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";'#10#10'    for'
  +' (var i = 0; i < 20; i++)'#10'        text += possible.charAt(Math.floor(Ma'
  +'th.random() * possible.length));'#10'    return text;'#10'};'#10#10'window.'
  +'WAPI.getChatById = function(id, done) {'#10'    let found = WAPI.getChat(id'
  +');'#10'    if (found) {'#10'        found = WAPI._serializeChatObj(found);'
  +#10'    } else {'#10'        found = false;'#10'    }'#10#10'    if (done !='
  +'= undefined) done(found);'#10'    return found;'#10'};'#10#10'/**'#10' * Re'
  +'torno todas as mensagens nao lidas de um bate-papo solicitado e as marca co'
  +'mo lidas.'#10' *'#10' * :param id: chat id'#10' * :type id: string'#10' *'
  +#10' * :param includeMe: indicates if user messages have to be included'#10
  +' * :type includeMe: boolean'#10' *'#10' * :param includeNotifications: indi'
  +'cates if notifications have to be included'#10' * :type includeNotification'
  +'s: boolean'#10' *'#10' * :param done: callback passed by selenium'#10' * :t'
  +'ype done: function'#10' *'#10' * :returns: list of unread messages from ask'
  +'ed chat'#10' * :rtype: object'#10' */'#10'window.WAPI.getUnreadMessagesInCh'
  +'at = function(id, includeMe, includeNotifications, done) {'#10'    // get c'
  +'hat and its messages'#10'    let chat = WAPI.getChat(id);'#10'    let messa'
  +'ges = chat.msgs._models;'#10#10'    // initialize result list'#10'    let o'
  +'utput = [];'#10#10'    // look for unread messages, newest is at the end of'
  +' array'#10'    for (let i = messages.length - 1; i >= 0; i--) {'#10'       '
  +' // system message: skip it'#10'        if (i === "remove") {'#10'         '
  +'   continue;'#10'        }'#10#10'        // get message'#10'        let me'
  +'ssageObj = messages[i];'#10#10'        // found a read message: stop lookin'
  +'g for others'#10'        if (typeof(messageObj.isNewMsg) !== "boolean" || m'
  +'essageObj.isNewMsg === false) {'#10'            continue;'#10'        } els'
  +'e {'#10'            messageObj.isNewMsg = false;'#10'            // process'
  +' it'#10'            let message = WAPI.processMessageObj(messageObj,'#10'  '
  +'              includeMe,'#10'                includeNotifications);'#10#10
  +'            // save processed message on result list'#10'            if (me'
  +'ssage)'#10'                output.push(message);'#10'        }'#10'    }'#10
  +'    // callback was passed: run it'#10'    if (done !== undefined) done(out'
  +'put);'#10'    // return result list'#10'    return output;'#10'};'#10#10'/*'
  +'*'#10' * Load more messages in chat object from store by ID'#10' *'#10' * @'
  +'param id ID of chat'#10' * @param done Optional callback function for async'
  +' execution'#10' * @returns None'#10' */'#10'window.WAPI.loadEarlierMessages'
  +' = function(id, done) {'#10'    const found = WAPI.getChat(id);'#10'    if '
  +'(done !== undefined) {'#10'        found.loadEarlierMsgs().then(function() '
  +'{'#10'            done()'#10'        });'#10'    } else {'#10'        found'
  +'.loadEarlierMsgs();'#10'    }'#10'};'#10#10'/**'#10' * Load more messages i'
  +'n chat object from store by ID'#10' *'#10' * @param id ID of chat'#10' * @p'
  +'aram done Optional callback function for async execution'#10' * @returns No'
  +'ne'#10' */'#10'window.WAPI.loadAllEarlierMessages = function(id, done) {'#10
  +'    const found = WAPI.getChat(id);'#10'    x = function() {'#10'        if'
  +' (!found.msgs.msgLoadState.noEarlierMsgs) {'#10'            found.loadEarli'
  +'erMsgs().then(x);'#10'        } else if (done) {'#10'            done();'#10
  +'        }'#10'    };'#10'    x();'#10'};'#10#10'window.WAPI.asyncLoadAllEar'
  +'lierMessages = function(id, done) {'#10'    done();'#10'    window.WAPI.loa'
  +'dAllEarlierMessages(id);'#10'};'#10#10'window.WAPI.areAllMessagesLoaded = f'
  +'unction(id, done) {'#10'    const found = WAPI.getChat(id);'#10'    if (!fo'
  +'und.msgs.msgLoadState.noEarlierMsgs) {'#10'        if (done) done(false);'
  +#10'        return false'#10'    }'#10'    if (done) done(true);'#10'    ret'
  +'urn true'#10'};'#10#10'/**'#10' * Load more messages in chat object from st'
  +'ore by ID till a particular date'#10' *'#10' * @param id ID of chat'#10' * '
  ,'@param lastMessage UTC timestamp of last message to be loaded'#10' * @param'
  +' done Optional callback function for async execution'#10' * @returns None'
  +#10' */'#10#10'window.WAPI.loadEarlierMessagesTillDate = function(id, lastMe'
  +'ssage, done) {'#10'    const found = WAPI.getChat(id);'#10'    x = function'
  +'() {'#10'        if (found.msgs.models[0].t > lastMessage) {'#10'          '
  +'  found.loadEarlierMsgs().then(x);'#10'        } else {'#10'            don'
  +'e();'#10'        }'#10'    };'#10'    x();'#10'};'#10#10'/**'#10' * Fetches'
  +' all group metadata objects from store'#10' *'#10' * @param done Optional c'
  +'allback function for async execution'#10' * @returns {Array|*} List of grou'
  +'p metadata'#10' */'#10'window.WAPI.getAllGroupMetadata = function(done) {'
  +#10'    const groupData = window.Store.GroupMetadata.map((groupData) => grou'
  +'pData.all);'#10#10'    if (done !== undefined) done(groupData);'#10'    ret'
  +'urn groupData;'#10'};'#10#10'/**'#10' * Fetches group metadata object from '
  +'store by ID'#10' *'#10' * @param id ID of group'#10' * @param done Optional'
  +' callback function for async execution'#10' * @returns {T|*} Group metadata'
  +' object'#10' */'#10' '#10'/* Deprecated 02/06/2020'#10'window.WAPI.getGroup'
  +'Metadata = async function(id, done) {'#10'    let output = window.Store.Gro'
  +'upMetadata.get(id);'#10#10'    if (output !== undefined) {'#10'        if ('
  +'output.stale) {'#10'            await output.update();'#10'        }'#10'  '
  +'  }'#10#10'    if (done !== undefined) done(output);'#10'    return output;'
  +#10#10'}; */'#10#10'window.WAPI.getGroupMetadata = async function (id) {'#10
  +'    return window.Store.GroupMetadata.find(id);'#10'};'#10#10'/**'#10' * Fe'
  +'tches group participants'#10' *'#10' * @param id ID of group'#10' * @return'
  +'s {Promise.<*>} Yields group metadata'#10' * @private'#10' */'#10'window.WA'
  +'PI._getGroupParticipants = async function(id) {'#10'    const metadata = aw'
  +'ait WAPI.getGroupMetadata(id);'#10'    return metadata.participants;'#10'};'
  +#10#10'/**'#10' * Fetches IDs of group participants'#10' *'#10' * @param id '
  +'ID of group'#10' * @param done Optional callback function for async executi'
  +'on'#10' * @returns {Promise.<Array|*>} Yields list of IDs'#10' */'#10#10'/*'
  +#10'window.WAPI.getGroupParticipantIDs = async function (id) {'#10'    retur'
  +'n (await WAPI._getGroupParticipants(id))'#10'        .map((participant) => '
  +'participant.id);'#10'}; */'#10#10#10'window.WAPI.getGroupParticipantIDs = a'
  +'sync function(id, done) {'#10'    const output = (await WAPI._getGroupParti'
  +'cipants(id))'#10'        .map((participant) => participant.id);'#10#10'    '
  +'if (done !== undefined) done(output);'#10#9'getAllGroupContacts(JSON.string'
  +'ify(output));'#10#9#9'   '#10#9'return output;'#10'};'#10#10'window.WAPI.ge'
  +'tGroupAdmins = async function(id, done) {'#10'    const output = (await WAP'
  +'I._getGroupParticipants(id))'#10'        .filter((participant) => participa'
  +'nt.isAdmin)'#10'        .map((admin) => admin.id);'#10#10'    if (done !== '
  +'undefined) done(output);'#10#9'let arrGroupAdm = [];'#10#9'let arr = output'
  +';'#10#9'arr.forEach((v , i) => {'#10#9#9'arrGroupAdm.push(arr[i][''_seriali'
  +'zed'']);'#10#9'})'#10#9'SetConsoleMessage("getAllGroupAdmins", JSON.stringi'
  +'fy(arrGroupAdm));'#10#9#10'    return output;'#10'};'#10#10'/**'#10' * Gets'
  +' object representing the logged in user'#10' *'#10' * @returns {Array|*|$q.'
  +'all}'#10' */'#10'window.WAPI.getMe = function(done) {'#10'    const rawMe ='
  +' window.Store.Contact.get(window.Store.Conn.me);'#10#10'    if (done !== un'
  +'defined) done(rawMe.all);'#10'    return rawMe.all;'#10'};'#10#10'window.WA'
  +'PI.isLoggedIn = function(done) {'#10'    // Contact always exists when logg'
  +'ed in'#10'    const isLogged = window.Store.Contact && window.Store.Contact'
  +'.checksum !== undefined;'#10#10'    if (done !== undefined) done(isLogged);'
  +#10'    return isLogged;'#10'};'#10#10'//Funcao para saber o status do servi'
  +'co - Mike 26/02/2020'#10'window.WAPI.isConnected = function (done) {'#10'  '
  +'  const isConnected = document.querySelector(''*[data-icon="alert-phone"]'''
  +') !== null ? false : true;'#10#10'    if (done !== undefined) done(isConnec'
  +'ted);'#10#9'SetConsoleMessage("GetCheckIsConnected", JSON.stringify(isConne'
  +'cted));'#10'    return isConnected;'#10'};'#10#10'window.WAPI.teste = funct'
  +'ion (url) {'#10#9'convertImgToBase64URL(url, function(base64Img){'#10#9#9'S'
  +'etConsoleMessage("GetProfilePicThumb", JSON.stringify(base64Img));'#10#9'})'
  +';'#10'};'#10#10'window.WAPI.processMessageObj = function(messageObj, includ'
  +'eMe, includeNotifications) {'#10'    if (messageObj.isNotification) {'#10' '
  +'       if (includeNotifications)'#10'            return WAPI._serializeMess'
  +'ageObj(messageObj);'#10'        else'#10'            return;'#10'        //'
  +' System message'#10'        // (i.e. "Messages you send to this chat and ca'
  +'lls are now secured with end-to-end encryption...")'#10'    } else if (mess'
  ,'ageObj.id.fromMe === false || includeMe) {'#10'        return WAPI._seriali'
  +'zeMessageObj(messageObj);'#10'    }'#10#10'    SetConsoleMessage("processMe'
  +'ssageObj", JSON.stringify(messageObj));'#10'    return;'#10'};'#10#10'windo'
  +'w.WAPI.getAllMessagesInChat = function(id, includeMe, includeNotifications,'
  +' done) {'#10'    const chat = WAPI.getChat(id);'#10'    let output = [];'#10
  +'    const messages = chat.msgs._models;'#10#10'    for (const i in messages'
  +') {'#10'        if (i === "remove") {'#10'            continue;'#10'       '
  +' }'#10'        const messageObj = messages[i];'#10#10'        //Miro Emidio'
  +' - 05/Dez/2019 Alterado para funcionamento em WHATS empresarial/pessoal'#10
  +'        let message = WAPI.processMessageObj(messageObj, includeMe, false) '
  +'//includeNotifications'#10'        if (message)'#10'            output.push'
  +'(message);'#10'    }'#10'    if (done !== undefined) done(output);'#10'    '
  +'return output;'#10'};'#10#10'window.WAPI.getAllMessageIdsInChat = function('
  +'id, includeMe, includeNotifications, done) {'#10'    const chat = WAPI.getC'
  +'hat(id);'#10'    let output = [];'#10'    const messages = chat.msgs._model'
  +'s;'#10#10'    for (const i in messages) {'#10'        if ((i === "remove") '
  +'|| (!includeMe && messages[i].isMe) || (!includeNotifications && messages[i'
  +'].isNotification)) {'#10'            continue;'#10'        }'#10'        ou'
  +'tput.push(messages[i].id._serialized);'#10'    }'#10'    if (done !== undef'
  +'ined) done(output);'#10'    return output;'#10'};'#10#10'window.WAPI.getMes'
  +'sageById = function(id, done) {'#10'    let result = false;'#10'    try {'
  +#10'        let msg = window.Store.Msg.get(id);'#10'        if (msg) {'#10' '
  +'           result = WAPI.processMessageObj(msg, true, true);'#10'        }'
  +#10'    } catch (err) {}'#10#10'    if (done !== undefined) {'#10'        do'
  +'ne(result);'#10'    } else {'#10'        return result;'#10'    }'#10'};'#10
  +#10'window.WAPI.ReplyMessage = function(idMessage, message, done) {'#10'    '
  +'var messageObject = window.Store.Msg.get(idMessage);'#10'    if (messageObj'
  +'ect === undefined) {'#10'        if (done !== undefined) done(false);'#10' '
  +'       return false;'#10'    }'#10'    messageObject = messageObject.value('
  +');'#10#10'    const chat = WAPI.getChat(messageObject.chat.id)'#10'    if ('
  +'chat !== undefined) {'#10'        if (done !== undefined) {'#10'           '
  +' chat.sendMessage(message, null, messageObject).then(function() {'#10'     '
  +'           function sleep(ms) {'#10'                    return new Promise('
  +'resolve => setTimeout(resolve, ms));'#10'                }'#10#10'         '
  +'       var trials = 0;'#10#10'                function check() {'#10'      '
  +'              for (let i = chat.msgs.models.length - 1; i >= 0; i--) {'#10
  +'                        let msg = chat.msgs.models[i];'#10#10'             '
  +'           if (!msg.senderObj.isMe || msg.body != message) {'#10'          '
  +'                  continue;'#10'                        }'#10'             '
  +'           done(WAPI._serializeMessageObj(msg));'#10'                      '
  +'  return True;'#10'                    }'#10'                    trials += '
  +'1;'#10'                    console.log(trials);'#10'                    if '
  +'(trials > 30) {'#10'                        done(true);'#10'               '
  +'         return;'#10'                    }'#10'                    sleep(50'
  +'0).then(check);'#10'                }'#10'                check();'#10'    '
  +'        });'#10'            return true;'#10'        } else {'#10'         '
  +'   chat.sendMessage(message, null, messageObject);'#10'            return t'
  +'rue;'#10'        }'#10'    } else {'#10'        if (done !== undefined) don'
  +'e(false);'#10'        return false;'#10'    }'#10'};'#10#10'//Funcao desati'
  +'vada em 27/11/2019 by Mike'#10'/*window.WAPI.sendMessageToID = function (id'
  +', message, done) {'#10'try {'#10'window.getContact = (id) => {'#10'return S'
  +'tore.WapQuery.queryExist(id);'#10'}'#10'window.getContact(id).then(contact '
  +'=> {'#10'if (contact.status === 404) {'#10'done(true);'#10'} else {'#10'Sto'
  +'re.Chat.find(contact.jid).then(chat => {'#10'chat.sendMessage(message);'#10
  +'return true;'#10'}).catch(reject => {'#10'if (WAPI.sendMessage(id, message)'
  +') {'#10'done(true);'#10'return true;'#10'}else{'#10'done(false);'#10'return'
  +' false;'#10'}'#10'});'#10'}'#10'});'#10'} catch (e) {'#10'if (window.Store.'
  +'Chat.length === 0)'#10'return false;'#10#10'firstChat = Store.Chat.models[0'
  +'];'#10'var originalID = firstChat.id;'#10'firstChat.id = typeof originalID '
  +'=== "string" ? id : new window.Store.UserConstructor(id, { intentionallyUse'
  +'PrivateConstructor: true });'#10'if (done !== undefined) {'#10'firstChat.se'
  +'ndMessage(message).then(function () {'#10'firstChat.id = originalID;'#10'do'
  +'ne(true);'#10'});'#10'return true;'#10'} else {'#10'firstChat.sendMessage(m'
  +'essage);'#10'firstChat.id = originalID;'#10'return true;'#10'}'#10'}'#10'if'
  ,' (done !== undefined) done(false);'#10'return false;'#10'} */'#10#10'window'
  +'.WAPI.sendMessage = function(id, message, done) {'#10'    var chat = WAPI.g'
  +'etChat(id);'#10'    if (chat !== undefined) {'#10'        if (done !== unde'
  +'fined) {'#10'            chat.sendMessage(message).then(function() {'#10'  '
  +'              function sleep(ms) {'#10'                    return new Promi'
  +'se(resolve => setTimeout(resolve, ms));'#10'                }'#10#10'      '
  +'          var trials = 0;'#10#10'                function check() {'#10'   '
  +'                 for (let i = chat.msgs.models.length - 1; i >= 0; i--) {'
  +#10'                        let msg = chat.msgs.models[i];'#10#10'          '
  +'              if (!msg.senderObj.isMe || msg.body != message) {'#10'       '
  +'                     continue;'#10'                        }'#10'          '
  +'              done(WAPI._serializeMessageObj(msg));'#10'                   '
  +'     return True;'#10'                    }'#10'                    trials '
  +'+= 1;'#10'                    console.log(trials);'#10'                    '
  +'if (trials > 30) {'#10'                        done(true);'#10'            '
  +'            return;'#10'                    }'#10'                    sleep'
  +'(500).then(check);'#10'                }'#10'                check();'#10' '
  +'           });'#10'            return true;'#10'        } else {'#10'      '
  +'      chat.sendMessage(message);'#10'            return true;'#10'        }'
  +#10'    } else {'#10'        if (done !== undefined) done(false);'#10'      '
  +'  return false;'#10'    }'#10'};'#10#10'window.WAPI.sendMessage2 = function'
  +'(id, message, done) {'#10'    var chat = WAPI.getChat(id);'#10'    if (chat'
  +' !== undefined) {'#10'        try {'#10'            if (done !== undefined)'
  +' {'#10'                chat.sendMessage(message).then(function() {'#10'    '
  +'                done(true);'#10'                });'#10'            } else '
  +'{'#10'                chat.sendMessage(message);'#10'            }'#10'    '
  +'        return true;'#10'        } catch (error) {'#10'            if (done'
  +' !== undefined) done(false)'#10'            return false;'#10'        }'#10
  +'    }'#10'    if (done !== undefined) done(false)'#10'    return false;'#10
  +'};'#10#10'//Funcao adicionada em 18/06/2020 by Mike'#10'window.WAPI.sendSee'
  +'n = async function (id) {'#10'    if (!id) return false;'#10'    var chat ='
  +' window.WAPI.getChat(id);'#10'    if (chat !== undefined) {'#10'           '
  +' await Store.ReadSeen.sendSeen(chat, false);'#10'            return true;'
  +#10'    }'#10'    return false;'#10'};'#10#10'/*'#10'//Apos receber uma mens'
  +'agem, e nao responder, essa funcao nao funciona de forma isolada'#10'window'
  +'.WAPI.sendSeen = function(id, done) {'#10'    var chat = window.WAPI.getCha'
  +'t(id);'#10'    if (chat !== undefined) {'#10'        if (done !== undefined'
  +') {'#10'            Store.SendSeen(Store.Chat.models[0], false).then(functi'
  +'on() {'#10'                done(true);'#10'            });'#10'            '
  +'return true;'#10'        } else {'#10'            Store.SendSeen(Store.Chat'
  +'.models[0], false);'#10'            return true;'#10'        }'#10'    }'#10
  +'    if (done !== undefined) done();'#10'    return false;'#10'}; */'#10#10
  +'/*'#10'//Alterado em 20/02/2020 Creditos: by Lucas'#10'//Apos receber uma m'
  +'ensagem, e nao responder, essa funcao funciona de forma isolada'#10'window.'
  +'WAPI.sendSeen = function(id, done) {'#10'    var chat = window.WAPI.getChat'
  +'(id);'#10'    if (chat !== undefined) {'#10'        if (done !== undefined)'
  +' {'#10'            Store.SendSeen(Store.Chat.models[0], false).then(functio'
  +'n() {'#10'                done(true);'#10'            });'#10'            r'
  +'eturn true;'#10'        } else {'#10'            Store.SendSeen(Store.Chat.'
  +'models[0], false);'#10'            return true;'#10'        }'#10'    }'#10
  +'    if (done !== undefined) done();'#10'    return false;'#10'}; */'#10#10
  +'function isChatMessage(message) {'#10'    if (message.isSentByMe) {'#10'   '
  +'     return false;'#10'    }'#10'    if (message.isNotification) {'#10'    '
  +'    return false;'#10'    }'#10'    if (!message.isUserCreatedType) {'#10' '
  +'       return false;'#10'    }'#10'    return true;'#10'}'#10#10'window.WAP'
  +'I.getUnreadMessages = function(includeMe, includeNotifications, use_unread_'
  +'count, done) {'#10'    const chats = window.Store.Chat.models;'#10'    let '
  +'output = [];'#10#10'    for (let chat in chats) {'#10'        if (isNaN(cha'
  +'t)) {'#10'            continue;'#10'        }'#10#10'        let messageGro'
  +'upObj = chats[chat];'#10'        let messageGroup = WAPI._serializeChatObj('
  +'messageGroupObj);'#10#10'        messageGroup.messages = [];'#10#10'       '
  +' const messages = messageGroupObj.msgs._models;'#10'        for (let i = me'
  +'ssages.length - 1; i >= 0; i--) {'#10'            let messageObj = messages'
  +'[i];'#10'            if (typeof(messageObj.isNewMsg) != "boolean" || messag'
  ,'eObj.isNewMsg === false) {'#10'                continue;'#10'            } '
  +'else {'#10'                messageObj.isNewMsg = false;'#10'               '
  +' //Miro Emidio - 05/Dez/2019 Alterado para funcionamento em WHATS empresari'
  +'al/pessoal'#10'                let message = WAPI.processMessageObj(message'
  +'Obj, includeMe, false); //includeNotifications);// MUDAR PARA "FALSE" AQUI'
  +#10'                if (message) {'#10'                    messageGroup.mess'
  +'ages.push(message);'#10'                }'#10'            }'#10'        }'
  +#10#10'        if (messageGroup.messages.length > 0) {'#10'            outpu'
  +'t.push(messageGroup);'#10'        } else { // no messages with isNewMsg tru'
  +'e'#10'            if (use_unread_count) {'#10'                let n = messa'
  +'geGroupObj.unreadCount; // usara o atributo unreadCount para buscar as ulti'
  +'mas n mensagens do remetente'#10'                for (let i = messages.leng'
  +'th - 1; i >= 0; i--) {'#10'                    let messageObj = messages[i]'
  +';'#10'                    if (n > 0) {'#10'                        if (!mes'
  +'sageObj.isSentByMe) {'#10'                            let message = WAPI.pr'
  +'ocessMessageObj(messageObj, includeMe, includeNotifications);'#10'         '
  +'                   messageGroup.messages.unshift(message);'#10'            '
  +'                n -= 1;'#10'                        }'#10'                 '
  +'   } else if (n === -1) { // chat was marked as unread so will fetch last m'
  +'essage as unread'#10'                        if (!messageObj.isSentByMe) {'
  +#10'                            let message = WAPI.processMessageObj(message'
  +'Obj, includeMe, includeNotifications);'#10'                            mess'
  +'ageGroup.messages.unshift(message);'#10'                            break;'
  +#10'                        }'#10'                    } else { // unreadCoun'
  +'t = 0'#10'                        break;'#10'                    }'#10'    '
  +'            }'#10'                if (messageGroup.messages.length > 0) {'
  +#10'                    messageGroupObj.unreadCount = 0; // reset unread cou'
  +'nter'#10'                    output.push(messageGroup);'#10'               '
  +' }'#10'            }'#10'        }'#10'    }'#10'    if (done !== undefined'
  +') {'#10'        done(output);'#10#10'    }'#10#9'contactID = chats.id;'#10
  +'    SetConsoleMessage("getUnreadMessages", JSON.stringify(output));'#10'   '
  +' return output;'#10'};'#10#10'window.WAPI.getGroupOwnerID = async function('
  +'id, done) {'#10'    const output = (await WAPI.getGroupMetadata(id)).owner.'
  +'id;'#10'    if (done !== undefined) {'#10'        done(output);'#10'    }'
  +#10#10'    SetConsoleMessage("getGroupOwnerID", JSON.stringify(output));'#10
  +#10'    return output;'#10#10'};'#10#10'window.WAPI.getCommonGroups = async '
  +'function(id, done) {'#10'    let output = [];'#10#10'    groups = window.WA'
  +'PI.getAllGroups();'#10#10'    for (let idx in groups) {'#10'        try {'
  +#10'            participants = await window.WAPI.getGroupParticipantIDs(grou'
  +'ps[idx].id);'#10'            if (participants.filter((participant) => parti'
  +'cipant == id).length) {'#10'                output.push(groups[idx]);'#10' '
  +'           }'#10'        } catch (err) {'#10'            console.log("Error'
  +' in group:");'#10'            console.log(groups[idx]);'#10'            con'
  +'sole.log(err);'#10'        }'#10'    }'#10#10'    if (done !== undefined) {'
  +#10'        done(output);'#10'    }'#10'    return output;'#10'};'#10#10'win'
  +'dow.WAPI.getProfilePicSmallFromId = function(id, done) {'#10'    window.Sto'
  +'re.ProfilePicThumb.find(id).then(function(d) {'#10'        if (d.img !== un'
  +'defined) {'#10'            window.WAPI.downloadFileWithCredentials(d.img, d'
  +'one);'#10'        } else {'#10'            done(false);'#10'        }'#10' '
  +'   }, function(e) {'#10'        done(false);'#10'    })'#10'};'#10#10'windo'
  +'w.WAPI.getProfilePicFromId = function(id, done) {'#10'    window.Store.Prof'
  +'ilePicThumb.find(id).then(function(d) {'#10'        if (d.imgFull !== undef'
  +'ined) {'#10'            window.WAPI.downloadFileWithCredentials(d.imgFull, '
  +'done);'#10'        } else {'#10'            done(false);'#10'        }'#10
  +'    }, function(e) {'#10'        done(false);'#10'    })'#10'};'#10#10'wind'
  +'ow.WAPI.downloadFileWithCredentials = function(url, done) {'#10'    let xhr'
  +' = new XMLHttpRequest();'#10#10'    xhr.onload = function() {'#10'        i'
  +'f (xhr.readyState == 4) {'#10'            if (xhr.status == 200) {'#10'    '
  +'            let reader = new FileReader();'#10'                reader.readA'
  +'sDataURL(xhr.response);'#10'                reader.onload = function(e) {'
  +#10'                    done(reader.result.substr(reader.result.indexOf('','
  +''') + 1))'#10'                };'#10'            } else {'#10'             '
  +'   console.error(xhr.statusText);'#10'            }'#10'        } else {'#10
  +'            console.log(err);'#10'            done(false);'#10'        }'#10
  ,'    };'#10#10'    xhr.open("GET", url, true);'#10'    xhr.withCredentials ='
  +' true;'#10'    xhr.responseType = ''blob'';'#10'    xhr.send(null);'#10'};'
  +#10#10'window.WAPI.downloadFile = function(url, done) {'#10'    let xhr = ne'
  +'w XMLHttpRequest();'#10#10'    xhr.onload = function() {'#10'        if (xh'
  +'r.readyState == 4) {'#10'            if (xhr.status == 200) {'#10'         '
  +'       let reader = new FileReader();'#10'                reader.readAsData'
  +'URL(xhr.response);'#10'                reader.onload = function(e) {'#10'  '
  +'                  done(reader.result.substr(reader.result.indexOf('','') + '
  +'1))'#10'                };'#10'            } else {'#10'                con'
  +'sole.error(xhr.statusText);'#10'            }'#10'        } else {'#10'    '
  +'        console.log(err);'#10'            done(false);'#10'        }'#10'  '
  +'  };'#10#10'    xhr.open("GET", url, true);'#10'    xhr.responseType = ''bl'
  +'ob'';'#10'    xhr.send(null);'#10'};'#10#10'window.WAPI.getBatteryLevel = f'
  +'unction(done) {'#10'    if (window.Store.Conn.plugged) {'#10'        if (do'
  +'ne !== undefined) {'#10'            done(100);'#10'        }'#10'        ou'
  +'tput = 100;'#10'        return SetConsoleMessage("getBatteryLevel", JSON.st'
  +'ringify(output));'#10'    }'#10'    output = window.Store.Conn.battery;'#10
  +'    if (done !== undefined) {'#10'        done(output);'#10'    }'#10'    S'
  +'etConsoleMessage("getBatteryLevel", JSON.stringify(output));'#10'    return'
  +' output;'#10'};'#10#10'window.WAPI.deleteConversation = async function (cha'
  +'tId) {'#10'    let userId = new window.Store.UserConstructor(chatId, { inte'
  +'ntionallyUsePrivateConstructor: true });'#10'    let conversation = WAPI.ge'
  +'tChat(userId);'#10'    if (!conversation) {'#10'        return false;'#10' '
  +'   }'#10'    return await window.Store.sendDelete(conversation, false).then'
  +'(() => {'#10'        return true;'#10'    }).catch(() => {'#10'        retu'
  +'rn false;'#10'    });'#10'};'#10#10'window.WAPI.deleteMessage = function(ch'
  +'atId, messageArray, revoke = false, done) {'#10'    let userId = new window'
  +'.Store.UserConstructor(chatId, {'#10'        intentionallyUsePrivateConstru'
  +'ctor: true'#10'    });'#10'    let conversation = WAPI.getChat(userId);'#10
  +#10'    if (!conversation) {'#10'        if (done !== undefined) {'#10'     '
  +'       done(false);'#10'        }'#10'        return false;'#10'    }'#10#10
  +'    if (!Array.isArray(messageArray)) {'#10'        messageArray = [message'
  +'Array];'#10'    }'#10#10'    if (revoke) {'#10'        conversation.sendRev'
  +'okeMsgs(messageArray, conversation);'#10'    } else {'#10'        conversat'
  +'ion.sendDeleteMsgs(messageArray, conversation);'#10'    }'#10#10'    if (do'
  +'ne !== undefined) {'#10'        done(true);'#10'    }'#10#10'    return tru'
  +'e;'#10'};'#10#10'window.WAPI.checkNumberStatus = function(id, done) {'#10' '
  +'   window.Store.WapQuery.queryExist(id).then((result) => {'#10'        if ('
  +'done !== undefined) {'#10'            if (result.jid === undefined) throw 4'
  +'04;'#10'            done(window.WAPI._serializeNumberStatusObj(result));'#10
  +'        }'#10'    }).catch((e) => {'#10'        if (done !== undefined) {'
  +#10'            done(window.WAPI._serializeNumberStatusObj({'#10'           '
  +'     status: e,'#10'                jid: id'#10'            }));'#10'      '
  +'  }'#10'    });'#10#10'    return true;'#10'};'#10#10'/**'#10' * New messag'
  +'es observable functions.'#10' */'#10'window.WAPI._newMessagesQueue = [];'#10
  +'window.WAPI._newMessagesBuffer = (sessionStorage.getItem(''saved_msgs'') !='
  +' null) ? JSON.parse(sessionStorage.getItem(''saved_msgs'')) : [];'#10'windo'
  +'w.WAPI._newMessagesDebouncer = null;'#10'window.WAPI._newMessagesCallbacks '
  +'= [];'#10#10'window.Store.Msg.off(''add'');'#10'sessionStorage.removeItem('
  +'''saved_msgs'');'#10#10'window.WAPI._newMessagesListener = window.Store.Msg'
  +'.on(''add'', (newMessage) => {'#10'    if (newMessage && newMessage.isNewMs'
  +'g && !newMessage.isSentByMe) {'#10'        let message = window.WAPI.proces'
  +'sMessageObj(newMessage, false, false);'#10'        if (message) {'#10'     '
  +'       window.WAPI._newMessagesQueue.push(message);'#10'            window.'
  +'WAPI._newMessagesBuffer.push(message);'#10'        }'#10#10'        // Star'
  +'ts debouncer time to don t call a callback for each message if more than on'
  +'e message arrives'#10'        // in the same second'#10'        if (!window'
  +'.WAPI._newMessagesDebouncer && window.WAPI._newMessagesQueue.length > 0) {'
  +#10'            window.WAPI._newMessagesDebouncer = setTimeout(() => {'#10' '
  +'               let queuedMessages = window.WAPI._newMessagesQueue;'#10#10' '
  +'               window.WAPI._newMessagesDebouncer = null;'#10'              '
  +'  window.WAPI._newMessagesQueue = [];'#10#10'                let removeCall'
  +'backs = [];'#10#10'                window.WAPI._newMessagesCallbacks.forEac'
  +'h(function(callbackObj) {'#10'                    if (callbackObj.callback '
  ,'!== undefined) {'#10'                        callbackObj.callback(queuedMes'
  +'sages);'#10'                    }'#10'                    if (callbackObj.r'
  +'mAfterUse === true) {'#10'                        removeCallbacks.push(call'
  +'backObj);'#10'                    }'#10'                });'#10#10'        '
  +'        // Remove removable callbacks.'#10'                removeCallbacks.'
  +'forEach(function(rmCallbackObj) {'#10'                    let callbackIndex'
  +' = window.WAPI._newMessagesCallbacks.indexOf(rmCallbackObj);'#10'          '
  +'          window.WAPI._newMessagesCallbacks.splice(callbackIndex, 1);'#10' '
  +'               });'#10'            }, 1000);'#10'        }'#10'    }'#10'})'
  +';'#10#10'window.WAPI._unloadInform = (event) => {'#10'    // Save in the bu'
  +'ffer the ungot unreaded messages'#10'    window.WAPI._newMessagesBuffer.for'
  +'Each((message) => {'#10'        Object.keys(message).forEach(key => message'
  +'[key] === undefined ? delete message[key] : '''');'#10'    });'#10'    sess'
  +'ionStorage.setItem("saved_msgs", JSON.stringify(window.WAPI._newMessagesBuf'
  +'fer));'#10#10'    // Inform callbacks that the page will be reloaded.'#10' '
  +'   window.WAPI._newMessagesCallbacks.forEach(function(callbackObj) {'#10'  '
  +'      if (callbackObj.callback !== undefined) {'#10'            callbackObj'
  +'.callback({'#10'                status: -1,'#10'                message: '''
  +'page will be reloaded, wait and register callback again.'''#10'            '
  +'});'#10'        }'#10'    });'#10'};'#10#10'window.addEventListener("unload'
  +'", window.WAPI._unloadInform, false);'#10'window.addEventListener("beforeun'
  +'load", window.WAPI._unloadInform, false);'#10'window.addEventListener("page'
  +'unload", window.WAPI._unloadInform, false);'#10#10'/**'#10' * Registers a c'
  +'allback to be called when a new message arrives the WAPI.'#10' * @param rmC'
  +'allbackAfterUse - Boolean - Specify if the callback need to be executed onl'
  +'y once'#10' * @param done - function - Callback function to be called when '
  +'a new message arrives.'#10' * @returns {boolean}'#10' */'#10'window.WAPI.wa'
  +'itNewMessages = function(rmCallbackAfterUse = true, done) {'#10'    window.'
  +'WAPI._newMessagesCallbacks.push({'#10'        callback: done,'#10'        r'
  +'mAfterUse: rmCallbackAfterUse'#10'    });'#10'    return true;'#10'};'#10#10
  +'/**'#10' * Reads buffered new messages.'#10' * @param done - function - Cal'
  +'lback function to be called contained the buffered messages.'#10' * @return'
  +'s {Array}'#10' */'#10'window.WAPI.getBufferedNewMessages = function(done) {'
  +#10'    let bufferedMessages = window.WAPI._newMessagesBuffer;'#10'    windo'
  +'w.WAPI._newMessagesBuffer = [];'#10'    if (done !== undefined) {'#10'     '
  +'   done(bufferedMessages);'#10'    }'#10'    return bufferedMessages;'#10'}'
  +';'#10'/** End new messages observable functions **/'#10#10'window.WAPI.send'
  +'Image = function(imgBase64, chatid, filename, caption, done) {'#10'    //va'
  +'r idUser = new window.Store.UserConstructor(chatid);'#10'    var idUser = n'
  +'ew window.Store.UserConstructor(chatid, {'#10'        intentionallyUsePriva'
  +'teConstructor: true'#10'    });'#10#9#10'    // create new chat'#10'    ret'
  +'urn Store.Chat.find(idUser).then((chat) => {'#10'        var mediaBlob = wi'
  +'ndow.WAPI.base64ImageToFile(imgBase64, filename);'#10'        var mc = new '
  +'Store.MediaCollection(chat);'#10'        '#10#9#9'//Deprecated  - Mike Lust'
  +'osa 19/02/2020'#10#9#9'/*mc.processFiles([mediaBlob], chat, 1).then(() => {'
  +#10'            var media = mc.models[0];'#10'            media.sendToChat(c'
  +'hat, {'#10'                caption: caption'#10'            });'#10'       '
  +'     if (done !== undefined) done(true);'#10'        });*/'#10#10#9#9'//New'
  +' - Mike Lustosa 19/02/2020'#10#9#9'mc.processAttachments([{file: mediaBlob}'
  +', 1], chat, 1).then(() => {'#10#9#9#9'let media = mc.models[0];'#10#9#9#9'm'
  +'edia.sendToChat(chat, {caption:caption});'#10#9#9#9'if (done !== undefined)'
  +' done(true);'#10#9#9'});'#10'    });'#10'}'#10#10#10'window.WAPI.sendMessag'
  +'eToID = function(chatid, msgText) {'#10'    var idUser = new window.Store.U'
  +'serConstructor(chatid, {'#10'        intentionallyUsePrivateConstructor: tr'
  +'ue'#10'    });'#10'    return Store.Chat.find(idUser).then((chatid) => {'#10
  +'        var mc = new Store.SendTextMsgToChat(chatid, msgText);'#10'        '
  +'return true;'#10'    });'#10'}'#10#10'window.WAPI.base64ImageToFile = funct'
  +'ion(b64Data, filename) {'#10'    var arr = b64Data.split('','');'#10'    va'
  +'r mime = arr[0].match(/:(.*?);/)[1];'#10'    var bstr = atob(arr[1]);'#10' '
  +'   var n = bstr.length;'#10'    var u8arr = new Uint8Array(n);'#10#10'    w'
  +'hile (n--) {'#10'        u8arr[n] = bstr.charCodeAt(n);'#10'    }'#10#10'  '
  +'  return new File([u8arr], filename, {'#10'        type: mime'#10'    });'
  +#10'};'#10#10'/**'#10' * Send contact card to a specific chat using the chat'
  +' ids'#10' *'#10' * @param {string} to ''000000000000@c.us'''#10' * @param {'
  ,'string|array} contact ''111111111111@c.us'' | [''222222222222@c.us'', ''333'
  +'333333333@c.us, ... ''nnnnnnnnnnnn@c.us'']'#10' */'#10'window.WAPI.sendCont'
  +'act = function(to, contact) {'#10'    if (!Array.isArray(contact)) {'#10'  '
  +'      contact = [contact];'#10'    }'#10'    contact = contact.map((c) => {'
  +#10'        return WAPI.getChat(c).__x_contact;'#10'    });'#10#10'    if (c'
  +'ontact.length > 1) {'#10'        window.WAPI.getChat(to).sendContactList(co'
  +'ntact);'#10'    } else if (contact.length === 1) {'#10'        window.WAPI.'
  +'getChat(to).sendContact(contact[0]);'#10'    }'#10'};'#10#10'/**'#10' * Cre'
  +'ate an chat ID based in a cloned one'#10' *'#10' * @param {string} chatId '
  +'''000000000000@c.us'''#10' */'#10'window.WAPI.getNewMessageId = function(ch'
  +'atId) {'#10'    var newMsgId = Store.Msg.models[0].__x_id.clone();'#10#10' '
  +'   newMsgId.fromMe = true;'#10'    newMsgId.id = WAPI.getNewId().toUpperCas'
  +'e();'#10'    newMsgId.remote = chatId;'#10'    newMsgId._serialized = `${ne'
  +'wMsgId.fromMe}_${newMsgId.remote}_${newMsgId.id}`'#10#10'    return newMsgI'
  +'d;'#10'};'#10#10'/**'#10' * Send Customized VCard without the necessity of '
  +'contact be a Whatsapp Contact'#10' *'#10' * @param {string} chatId ''000000'
  +'000000@c.us'''#10' * @param {object|array} vcard { displayName: ''Contact N'
  +'ame'', vcard: ''BEGIN:VCARD\nVERSION:3.0\nN:;Contact Name;;;\nEND:VCARD'' }'
  +' | [{ displayName: ''Contact Name 1'', vcard: ''BEGIN:VCARD\nVERSION:3.0\nN'
  +':;Contact Name 1;;;\nEND:VCARD'' }, { displayName: ''Contact Name 2'', vcar'
  +'d: ''BEGIN:VCARD\nVERSION:3.0\nN:;Contact Name 2;;;\nEND:VCARD'' }]'#10' */'
  +#10'window.WAPI.sendVCard = function(chatId, vcard) {'#10'    var chat = Sto'
  +'re.Chat.get(chatId);'#10'    var tempMsg = Object.create(Store.Msg.models.f'
  +'ilter(msg => msg.__x_isSentByMe)[0]);'#10'    var newId = window.WAPI.getNe'
  +'wMessageId(chatId);'#10#10'    var extend = {'#10'        ack: 0,'#10'     '
  +'   id: newId,'#10'        local: !0,'#10'        self: "out",'#10'        t'
  +': parseInt(new Date().getTime() / 1000),'#10'        to: chatId,'#10'      '
  +'  isNewMsg: !0,'#10'    };'#10#10'    if (Array.isArray(vcard)) {'#10'     '
  +'   Object.assign(extend, {'#10'            type: "multi_vcard",'#10'       '
  +'     vcardList: vcard'#10'        });'#10#10'        delete extend.body;'#10
  +'    } else {'#10'        Object.assign(extend, {'#10'            type: "vca'
  +'rd",'#10'            subtype: vcard.displayName,'#10'            body: vcar'
  +'d.vcard'#10'        });'#10#10'        delete extend.vcardList;'#10'    }'
  +#10#10'    Object.assign(tempMsg, extend);'#10#10'    chat.addAndSendMsg(tem'
  +'pMsg);'#10'};'#10'/**'#10' * Block contact'#10' * @param {string} id ''0000'
  +'00000000@c.us'''#10' * @param {*} done - function - Callback function to be'
  +' called when a new message arrives.'#10' */'#10'window.WAPI.contactBlock = '
  +'function(id, done) {'#10'        const contact = window.Store.Contact.get(i'
  +'d);'#10'        if (contact !== undefined) {'#10'            contact.setBlo'
  +'ck(!0);'#10'            done(true);'#10'            return true;'#10'      '
  +'  }'#10'        done(false);'#10'        return false;'#10'    }'#10'    /*'
  +'*'#10'     * unBlock contact'#10'     * @param {string} id ''000000000000@c'
  +'.us'''#10'     * @param {*} done - function - Callback function to be calle'
  +'d when a new message arrives.'#10'     */'#10'window.WAPI.contactUnblock = '
  +'function(id, done) {'#10'    const contact = window.Store.Contact.get(id);'
  +#10'    if (contact !== undefined) {'#10'        contact.setBlock(!1);'#10' '
  +'       done(true);'#10'        return true;'#10'    }'#10'    done(false);'
  +#10'    return false;'#10'}'#10#10#10'/** Joins a group via the invite link,'
  +' code, or message'#10' * @param link This param is the string which include'
  +'s the invite link or code. The following work:'#10' * - Follow this link to'
  +' join my WA group: https://chat.whatsapp.com/DHTGJUfFJAV9MxOpZO1fBZ'#10' * '
  +'- https://chat.whatsapp.com/DHTGJUfFJAV9MxOpZO1fBZ'#10' * - DHTGJUfFJAV9MxO'
  +'pZO1fBZ'#10' * @returns Promise<string | boolean> Either false if it didn'''
  +'t work, or the group id.'#10' */'#10'window.WAPI.joinGroupViaLink = async f'
  +'unction(link){'#10'    let code = link;'#10'    //is it a link? if not, ass'
  +'ume it''s a code, otherwise, process the link to get the code.'#10'    if(l'
  +'ink.includes(''chat.whatsapp.com'')) {'#10'        if(!link.match(/chat.wha'
  +'tsapp.com\/([\w\d]*)/g).length) return false;'#10'        code = link.match'
  +'(/chat.whatsapp.com\/([\w\d]*)/g)[0].replace(''chat.whatsapp.com\/'','''');'
  +#10'    }'#10'    const group = await Store.GroupInvite.joinGroupViaInvite(c'
  +'ode);'#10'    if(!group.id) return false;'#10'    return group.id._serializ'
  +'ed'#10'}'#10#10'/**'#10' * Add participant to Group'#10' * @param {*} idGro'
  +'up ''0000000000-00000000@g.us'''#10' * @param {*} idParticipant ''000000000'
  +'000@c.us'''#10' */'#10'window.WAPI.addParticipant = async function (idGroup'
  ,', idParticipant) {'#10'    const chat = Store.Chat.get(idGroup);'#10'    co'
  +'nst add = Store.Contact.get(idParticipant);'#10'    await window.Store.Part'
  +'icipants.addParticipants(chat, [add]);'#10'    return true;'#10'}'#10#10#10
  +'/**'#10' * Remove participant of Group'#10' * @param {*} idGroup ''00000000'
  +'00-00000000@g.us'''#10' * @param {*} idParticipant ''000000000000@c.us'''#10
  +' */'#10'window.WAPI.removeParticipant = async function (idGroup, idParticip'
  +'ant) {'#10'    const chat = Store.Chat.get(idGroup);'#10'    const rm = cha'
  +'t.groupMetadata.participants.get(idParticipant);'#10'    await window.Store'
  +'.Participants.removeParticipants(chat, [rm]);'#10'    return true;'#10'}'#10
  +#10'/**'#10' * Promote Participant to Admin in Group'#10' * @param {*} idGro'
  +'up ''0000000000-00000000@g.us'''#10' * @param {*} idParticipant ''000000000'
  +'000@c.us'''#10' */'#10'window.WAPI.promoteParticipant = async function (idG'
  +'roup, idParticipant) {'#10'    const chat = Store.Chat.get(idGroup);'#10'  '
  +'  const promote = chat.groupMetadata.participants.get(idParticipant);'#10' '
  +'   await window.Store.Participants.promoteParticipants(chat, [promote]);'#10
  +'    return true;'#10'}'#10#10'/**'#10' * Demote Admin of Group'#10' * @para'
  +'m {*} idGroup ''0000000000-00000000@g.us'''#10' * @param {*} idParticipant '
  +'''000000000000@c.us'''#10' */'#10'window.WAPI.demoteParticipant = async fun'
  +'ction (idGroup, idParticipant) {'#10'    await window.Store.WapQuery.demote'
  +'Participants(idGroup, [idParticipant])'#10'    const chat = Store.Chat.get('
  +'idGroup);'#10'    const demote = chat.groupMetadata.participants.get(idPart'
  +'icipant);'#10'    await window.Store.Participants.demoteParticipants(chat, '
  +'[demote])'#10'    return true'#10'   '#10'}'#10#10'//Nova funcao alternativ'
  +'a para enviar mensagens(Nao envia para grupos)'#10'//Criada em 27/11/2019 M'
  +'ike'#10'window.WAPI.sendMessageToID2 = function(id, msgText) {'#10'    try '
  +'{'#10'        window.Store.WapQuery.queryExist(id).then(function(e) {'#10' '
  +'           if (e.status === 200) {'#10'                window.Store.Chat.fi'
  +'nd(e.jid).then((chat) => {'#10'                    try {'#10'              '
  +'          window.Store.SendTextMsgToChat(chat, msgText);'#10'              '
  +'          return true;'#10'                    } catch (e) {'#10'          '
  +'              return false;'#10'                    }'#10'                }'
  +');'#10'                return true;'#10'            } else {'#10'          '
  +'      return false;'#10'            }'#10'        });'#10'    } catch (e) {'
  +#10'        return false;'#10'    }'#10'}'#10#10'//Validar numero whatsapp 1'
  +'2/02/2020'#10'window.WAPI.isValidNumber = async function (phoneId) {'#10'  '
  +'  isValid = window.Store.WapQuery.queryExist(phoneId).then(result => {'#10
  +'        return result.jid !== undefined;'#10'    }).catch((e) => {'#10'    '
  +'    return false;'#10'    });'#10#10'    return isValid;'#10'};'#10#10'/** '
  +'28/04/2020 - Mike'#10' * Send location'#10' *'#10' * @param {string} chatId'
  +' ''558199999999@c.us'''#10' * @param {string} lat latitude'#10' * @param {s'
  +'tring} lng longitude'#10' * @param {string} loc Texto link para a localizac'
  +'ao'#10' */'#10' '#10' '#10'window.WAPI.sendLocation = async function (chatI'
  +'d, lat, lng, loc) {'#10'    var chat = Store.Chat.get(chatId);'#10'    if(!'
  +'chat) return false;'#10'    var tempMsg = Object.create(Store.Msg.models.fi'
  +'lter(msg => msg.__x_isSentByMe && !msg.quotedMsg)[0]);'#10'    var newId = '
  +'window.WAPI.getNewMessageId(chatId);'#10'    var extend = {'#10'        ack'
  +': 0,'#10'        id: newId,'#10'        local: !0,'#10'        self: "out",'
  +#10'        t: parseInt(new Date().getTime() / 1000),'#10'        to: chatId'
  +','#10'        isNewMsg: !0,'#10'        type: "location",'#10'        lat,'
  +#10'        lng,'#10'        loc,'#10'        clientUrl:undefined,'#10'     '
  +'   directPath:undefined,'#10'        filehash:undefined,'#10'        upload'
  +'hash:undefined,'#10'        mediaKey:undefined,'#10'        isQuotedMsgAvai'
  +'lable:false,'#10'        invis:false,'#10'        mediaKeyTimestamp:undefin'
  +'ed,'#10'        mimetype:undefined,'#10'        height:undefined,'#10'     '
  +'   width:undefined,'#10'        ephemeralStartTimestamp:undefined,'#10'    '
  +'    body:undefined,'#10'        mediaData:undefined,'#10'        isQuotedMs'
  +'gAvailable: false'#10'    };'#10'    Object.assign(tempMsg, extend);'#10'  '
  +'  return await Promise.all(Store.addAndSendMsgToChat(chat, tempMsg))'#10'};'
  +#10#10'// Novas Funcoes incluidas por Marcelo Santos'#10#10'window.WAPI.quic'
  +'kClean = function (ob) {return JSON.parse(JSON.stringify(ob))};'#10#10'wind'
  +'ow.WAPI.setMyName = async function (newName) {'#10'    if(!Store.Versions.d'
  +'efault[11].BinaryProtocol) Store.Versions.default[11].BinaryProtocol=new St'
  +'ore.bp(11);'#10'    return await Store.Versions.default[11].setPushname(new'
  +'Name);'#10'}'#10#10'window.WAPI.clearChat = async function (id) {'#10'    r'
  ,'eturn await Store.ChatUtil.sendClear(Store.Chat.get(id),true);'#10'}'#10#10
  +'window.WAPI.setMyStatus = function (newStatus) {'#10'    return Store.MySta'
  +'tus.setMyStatus(newStatus)'#10'}'#10#10'window.WAPI.revokeGroupInviteLink ='
  +' async function (chatId) {'#10'    var chat = Store.Chat.get(chatId);'#10' '
  +'   if(!chat.isGroup) return false;'#10'    await Store.GroupInvite.revokeGr'
  +'oupInvite(chat);'#10'    return true;'#10'}'#10#10'function SetConsoleMessa'
  +'geString(jsName, StringValue) {'#10'    Obj = {'#10'        name: jsName,'
  +#10'        result: StringValue'#10'    }'#10'    console.log(JSON.stringify'
  +'(Obj));'#10'}'#10#10#10'window.WAPI.getGroupInviteLink = async function (ch'
  +'atId) {'#10'    var chat = Store.Chat.get(chatId);'#10'    if(!chat.isGroup'
  +') return false;'#10'    await Store.GroupInvite.queryGroupInviteCode(chat);'
  +#10'    SetConsoleMessageString("GetGroupInviteLink", `https://chat.whatsapp'
  +'.com/${chat.inviteCode}`);'#10#9'return `https://chat.whatsapp.com/${chat.i'
  +'nviteCode}`'#10'}'#10#10'/**'#10' * Returns an object with all of your host'
  +' device details'#10' */'#10'window.WAPI.getMe = function(){'#10'   '#9#10#9
  +'vMe = {...WAPI.quickClean({'#10'        ...Store.Contact.get(Store.Me.wid).'
  +'attributes,'#10'        ...Store.Me.attributes'#10'    }),'#10'    me:Store'
  +'.Me.me};'#10' '#10'  SetConsoleMessage("GetMe", JSON.stringify(vMe)); '#10
  +'  '#10'  return vMe;'#10'    '#10'}'#10#10'window.WAPI.getStatus = async (i'
  +'d) => {'#10' SetConsoleMessage("GetStatusMessage", JSON.stringify(await Sto'
  +'re.MyStatus.getStatus(id)));'#9' '#10' //return status; '#10'}'#10#10'windo'
  +'w.WAPI.checkNumberStatus = async function (id) {'#10'    try {'#10'        '
  +'const result = await window.Store.WapQuery.queryExist(id);'#10'        if ('
  +'result.jid === undefined) throw 404;'#10'        const data = window.WAPI._'
  +'serializeNumberStatusObj(result);'#10'        if (data.status == 200) data.'
  +'numberExists = true'#10'      SetConsoleMessage("NewCheckIsValidNumber",   '
  +' JSON.stringify({ id : id, valid : data.numberExists}));     '#10#9' return'
  +' data;'#10#9#9#10'    } catch (e) {'#10'            SetConsoleMessage("NewC'
  +'heckIsValidNumber", JSON.stringify({ id : id,  valid : false}));'#10#9#9#9
  +'return window.WAPI._serializeNumberStatusObj({'#10'                status: '
  +'e,'#10'                jid: id'#10'            });'#10'    }'#10'};'#10
]);
